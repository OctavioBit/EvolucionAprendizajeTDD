----End fileIn of C:\Users\Santiago\Desktop\Uba\Inge 2\Programa\windows64\Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:12:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:12:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:12:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:12:34'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:12:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:12:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:12:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:12:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:12:34'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'sc 5/17/2021 20:12:57' prior: 50884215!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 
	| account |

	account := ReceptiveAccount new.

	self assert: 0 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:13:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:13:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:02'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:13:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:13:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:13:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:13:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:02'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:13:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:13:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:09'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:13:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:13:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:13:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:13:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:09'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:13:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:13:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:17'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:13:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:13:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:13:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:13:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:17'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:47'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:13:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:13:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:13:48'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:17:54'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:17:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:17:54'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:18:46'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:22:49' prior: 50884418!
balance

	^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:23:17' prior: 50884653!
balance

	^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1].
					 aTransaction value]
	 ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:23:21'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:23:21'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:23:25'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:24:05' prior: 50884660!
balance

	^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]
					 ifFalse:[aTransaction value].]
	 ifEmpty: [ 0 ]! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:24:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:24:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:24:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:24:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:24:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:24:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:24:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:24:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:24:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:24:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:24:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:24:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:24:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:24:28'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:26:16' prior: 50884680!
balance

	^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]
					 ifFalse:[aTransaction value].]
	 ifEmpty: [0]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:30:07' prior: 50884753!
balance
|value|
	"^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]
					 ifFalse:[aTransaction value].]
	 ifEmpty: [0]"
	value := 0.
	^ transactions do: [:aTransaction| value]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:31:07' prior: 50884762!
balance
|balanceValue|
	"^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]
					 ifFalse:[aTransaction value].]
	 ifEmpty: [0]"
	balanceValue := 0.
	^ transactions do: [:aTransaction| aTransaction addToBalance: balanceValue].! !
!AccountTransaction methodsFor: 'value' stamp: 'sc 5/17/2021 20:32:26'!
addToBalance: actualBalance
	self subclassResponsibility ! !
!Deposit methodsFor: 'value' stamp: 'sc 5/17/2021 20:32:58' overrides: 50884785!
addToBalance: actualBalance
	actualBalance +value.! !
!Withdraw methodsFor: 'value' stamp: 'sc 5/17/2021 20:33:09' overrides: 50884785!
addToBalance: actualBalance
	actualBalance - value.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:33:15'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:33:51' prior: 50884773!
balance
|balanceValue|
	"^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]
					 ifFalse:[aTransaction value].]
	 ifEmpty: [0]"
	balanceValue := 0.
	transactions do: [:aTransaction| aTransaction addToBalance: balanceValue].
	^balanceValue .! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:33:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:33:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:33:56'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:33:56'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:33:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:33:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:33:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:33:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:34:08'!
FAILURE!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:34:26'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:34:32'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:35:02' prior: 50884804!
balance
|balanceValue|
	"^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]
					 ifFalse:[aTransaction value].]
	 ifEmpty: [0]"
	balanceValue := 0.
	self halt.
	transactions do: [:aTransaction| aTransaction addToBalance: balanceValue].
	^balanceValue .! !
!Withdraw methodsFor: 'value' stamp: 'sc 5/17/2021 20:39:42' prior: 50884795 overrides: 50884785!
addToBalance: actualBalance
	^actualBalance - value.! !
!Deposit methodsFor: 'value' stamp: 'sc 5/17/2021 20:40:43' prior: 50884790 overrides: 50884785!
addToBalance: actualBalance
	^actualBalance  + value. ! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:41:35' prior: 50884858!
balance
|balanceValue|
	"^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]
					 ifFalse:[aTransaction value].]
	 ifEmpty: [0]"
	balanceValue := 0.
	self halt.
	transactions do: [:aTransaction| balanceValue := aTransaction addToBalance: balanceValue ].
	^balanceValue .! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:41:52' prior: 50884881!
balance
|balanceValue|
	"^transactions sum: [ :aTransaction | (aTransaction isKindOf: Withdraw) ifTrue: [ aTransaction value *-1]
					 ifFalse:[aTransaction value].]
	 ifEmpty: [0]"
	balanceValue := 0.
	transactions do: [:aTransaction| balanceValue := aTransaction addToBalance: balanceValue ].
	^balanceValue .! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:41:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:41:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:41:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:41:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:41:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:41:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:41:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:41:56'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:42:22' prior: 50884894!
balance
|balanceValue|
	balanceValue := 0.
	transactions do: [:aTransaction| balanceValue := aTransaction addToBalance: balanceValue ].
	^balanceValue .! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'sc 5/17/2021 20:42:26' prior: 50884937!
balance
	|balanceValue|
	balanceValue := 0.
	transactions do: [:aTransaction| balanceValue := aTransaction addToBalance: balanceValue ].
	^balanceValue .! !

Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/17/2021 20:42:53'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTests category: 'Portfolio-Ejercicio' stamp: 'sc 5/17/2021 20:43:17'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'sc 5/17/2021 20:43:20'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTests stamp: 'sc 5/17/2021 20:43:24'!
TestCase subclass: #PortfolioTests
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'no messages' stamp: 'sc 5/17/2021 20:45:40'!
test01
	|portfolio account|
	portfolio  := Portfolio new.
	account := ReceptiveAccount.
	portfolio addAccount:1.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 20:47:47' prior: 50884994!
test01
	|portfolio account|
	portfolio  := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	self assert: portfolio balance equals: 0.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 20:48:40'!
test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma
	|portfolio account|
	portfolio  := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	self assert: portfolio balance equals: 0.
	! !

!methodRemoval: PortfolioTest #test01 stamp: 'sc 5/17/2021 20:48:40'!
test01
	|portfolio account|
	portfolio  := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	self assert: portfolio balance equals: 0.
	!

!testRun: #PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:48:44'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 20:48:57'!
addAccount: aReceptiveAccount 
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:49:03'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 20:49:26' prior: 50885031!
addAccount: aReceptiveAccount ! !

!testRun: #PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:49:33'!
ERROR!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 20:49:48'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 20:49:52' prior: 50885048!
balance
	^0! !

!testRun: #PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:49:56'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:49:56'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 20:50:47'!
test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma
	|portfolio account|
	portfolio  := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	self assert: portfolio balance equals: 0.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 20:51:37' prior: 50885064!
test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma
	|portfolio account|
	portfolio  := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	portfolio addAccount: account.
	self assert: portfolio balance equals: 100.
	! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:51:40'!
FAILURE!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:52:47'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/17/2021 20:54:15'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 20:54:02' prior: 50885040!
addAccount: aReceptiveAccount 
	accountList add : aReceptiveAccount.! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:54:25'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 20:55:06' prior: 50885103!
addAccount: aReceptiveAccount 
	accountList add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:55:11'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:55:49'!
ERROR!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 20:57:15' overrides: 16896425!
initialize

	accountList  := OrderedCollection new.! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:57:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 20:57:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:57:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 20:57:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 20:57:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 20:57:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 20:57:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 20:57:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:58:00'!
FAILURE!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 20:59:02' prior: 50885052!
balance
	^accountList at: 0! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:59:05'!
ERROR!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 20:59:23' prior: 50885166!
balance
	^accountList at: 1! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 20:59:27'!
FAILURE!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 20:59:57' prior: 50885174!
balance
	^ (accountList at: 1) balance! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:00:18' prior: 50885127 overrides: 16896425!
initialize

	accountList  := 0.! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:00:25' prior: 50885182!
balance
	^ accountList ! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:00:52' prior: 50885191!
balance
	^ accountList balance. ! !

Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/17/2021 21:01:03'!
Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:01:07' prior: 50885195!
balance
	^ account balance. ! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:01:21' prior: 50885187 overrides: 16896425!
initialize! !

!methodRemoval: Portfolio #initialize stamp: 'sc 5/17/2021 21:01:37'!
initialize!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:02:05' prior: 50885113!
addAccount: aReceptiveAccount 
	account := aReceptiveAccount .! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:02:11'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:02:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:02:11'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:04:10'!
test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas
	|portfolio account1 account2|
	portfolio  := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	self assert: portfolio balance equals: 150.
	! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:04:11'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/17/2021 21:05:03'!
Object subclass: #Portfolio
	instanceVariableNames: 'account accountList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:05:01' overrides: 16896425!
initialize
	accountList := OrderedCollection new. ! !

Object subclass: #Portfolio
	instanceVariableNames: 'accountList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/17/2021 21:05:11'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:05:31' prior: 50885222!
addAccount: aReceptiveAccount 
	accountList add: aReceptiveAccount .! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:06:30' prior: 50885211!
balance
	^ (accountList at: 1) balance + (accountList at: 2) balance. ! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:06:36'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:06:36'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:06:36'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:06:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:06:47'!
ERROR!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:07:44' prior: 50885289!
balance
	^ accountList sum:[:anAccount| anAccount balance]! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:07:54'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:07:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:07:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:07:54'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:10:16'!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio account1 account2|
	portfolio  := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.
	portfolio addAccount: account1.
	portfolio addAccount: account2.
	self assert: portfolio balance equals: 150.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:10:47' prior: 50885337!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio|
	portfolio  := Portfolio new.
	self assert: portfolio balance equals: 150.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:24:59' prior: 50885352!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito|
	portfolio  := Portfolio new.
	self assert: (portfolio hasRegistered: deposito).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:43:22' prior: 50885360!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := 1.
	deposito := Deposit register: 100 on: account.
	self assert: (portfolio hasRegistered: deposito).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:44:09' prior: 50885009!
test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma
	|portfolio|
	portfolio  := Portfolio new.
	self assert: portfolio balance equals: 0.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:44:20'!
test00PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma
	|portfolio|
	portfolio  := Portfolio new.
	self assert: portfolio balance equals: 0.
	! !

!testRun: #PortfolioTest #test00PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:44:26'!
ERROR!

!methodRemoval: PortfolioTest #test00PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:44:58'!
test00PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma
	|portfolio|
	portfolio  := Portfolio new.
	self assert: portfolio balance equals: 0.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:45:19'!
test01PortfolioVAcioTieneElMismoBalanceQueLaMisma
	|portfolio|
	portfolio  := Portfolio new.
	self assert: portfolio balance equals: 0.
	! !

!methodRemoval: PortfolioTest #test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:45:19'!
test01PortfolioConUnaCuentaVaciaTieneElMismoBalanceQueLaMisma
	|portfolio|
	portfolio  := Portfolio new.
	self assert: portfolio balance equals: 0.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:45:35'!
test01PortfolioVacioTieneBalance0
	|portfolio|
	portfolio  := Portfolio new.
	self assert: portfolio balance equals: 0.
	! !

!methodRemoval: PortfolioTest #test01PortfolioVAcioTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:45:35'!
test01PortfolioVAcioTieneElMismoBalanceQueLaMisma
	|portfolio|
	portfolio  := Portfolio new.
	self assert: portfolio balance equals: 0.
	!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/17/2021 21:45:47'!
ERROR!
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:46:12' prior: 50885315!
balance
	^ accountList sum:[:anAccount| anAccount balance] ifEmpty: 0.! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/17/2021 21:46:22' prior: 50885442!
balance
	^ accountList sum:[:anAccount| anAccount balance] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/17/2021 21:46:27'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/17/2021 21:46:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:46:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:46:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:46:27'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:46:27'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:46:45' prior: 50885369!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := 1.
	deposito := Deposit register: 100 on: account.
	self assert: (portfolio hasRegistered: deposito).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:47:16' prior: 50885475!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := AccountTransaction new.
	deposito := Deposit register: 100 on: account.
	self assert: (portfolio hasRegistered: deposito).
	! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:47:17'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:47:44' prior: 50885486!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := Deposit new.
	deposito := Deposit register: 100 on: account.
	self assert: (portfolio hasRegistered: deposito).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:48:02' prior: 50885501!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	self assert: (portfolio hasRegistered: deposito).
	! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:48:03'!
ERROR!
!Portfolio methodsFor: 'transacciones' stamp: 'sc 5/17/2021 21:48:17'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'transacciones' stamp: 'sc 5/17/2021 21:48:27' prior: 50885526!
hasRegistered: aDeposit 
	^ false.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:48:57' prior: 50885512!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	self deny: (portfolio hasRegistered: deposito).
	! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/17/2021 21:48:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:49:07'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/17/2021 21:49:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:49:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:49:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:49:07'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 21:50:11'!
test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio addAccount: account .
	self assert: (portfolio hasRegistered: deposito).
	! !

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/17/2021 21:50:12'!
FAILURE!
!Portfolio methodsFor: 'transacciones' stamp: 'sc 5/17/2021 21:54:05' prior: 50885531!
hasRegistered: aDeposit 
	^ accountList anySatisfy: [:anAccount| anAccount hasRegistered: aDeposit].! !

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/17/2021 21:54:35'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/17/2021 21:54:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:54:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:54:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:54:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/17/2021 21:54:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/17/2021 21:55:27'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/17/2021 21:55:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/17/2021 21:55:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/17/2021 21:55:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/17/2021 21:55:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/17/2021 21:55:27'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/17/2021 22:02:03'!
test06PortfolioConUnPortfolioVacioTieneBalance0
	"Aca vamos a meter un portfolio en una lista nueva en vez de usar  la misma, para no apurarnos"
	
	
	! !

----SNAPSHOT----(17 May 2021 22:02:08) CuisUniversity-4532.image priorSource: 17680577!

----SNAPSHOT----(17 May 2021 22:02:11) CuisUniversity-4532.image priorSource: 17729177!

----SNAPSHOT----(17 May 2021 22:02:21) CuisUniversity-4532.image priorSource: 17729266!

----STARTUP---- (19 May 2021 14:36:40) as C:\Users\Santiago\Desktop\Uba\Inge 2\Programa\windows64\CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:42:41' prior: 50885680!
test06PortfolioConUnPortfolioVacioTieneBalance0
	"Aca vamos a meter un portfolio en una lista nueva en vez de usar  la misma, para no apurarnos"
	|portfolio1 portfolio2|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:43:29' prior: 50885701!
test06PortfolioConUnPortfolioVacioTieneBalance0
	"Aca vamos a meter un portfolio en una lista nueva en vez de usar  la misma, para no apurarnos"
	|portfolio1 portfolio2|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio1 addPortfolio portfolio2.
	self assert: portfolio1  balance equals: 0.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:43:40' prior: 50885712!
test06PortfolioConUnPortfolioVacioTieneBalance0
	"Aca vamos a meter un portfolio en una lista nueva en vez de usar  la misma, para no apurarnos"
	|portfolio1 portfolio2|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1  balance equals: 0.
	
	
	! !

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 14:43:43'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:44:06'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accountList portfolioList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/19/2021 14:44:24'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountList portfolioList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'value' stamp: 'sc 5/19/2021 14:45:05' prior: 50885267 overrides: 16896425!
initialize
	accountList := OrderedCollection new. 
	portfolioList  := OrderedCollection new.! !

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 14:45:22'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 14:45:29'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:46:04' prior: 50885743!
addPortfolio: aPortfolio 
	! !

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 14:46:09'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 14:46:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 14:46:09'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 14:46:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 14:46:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 14:46:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 14:46:09'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:46:49'!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1  balance equals: 0.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:46:54' prior: 50885806!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1  balance equals: 0.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:47:10' prior: 50885817!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1  balance equals: 0.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:47:15' prior: 50885828!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1  balance equals: 100.
	
	
	! !

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 14:47:24'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:47:42' prior: 50885775!
addPortfolio: aPortfolio 
	! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/19/2021 14:49:43' prior: 50885447!
balance
	|balance|
	balance := accountList sum:[:anAccount| anAccount balance] ifEmpty: [0].
	^ balance +portfolioList sum:[:aPortfolio| aPortfolio balance] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:50:18' prior: 50885860!
addPortfolio: aPortfolio 
	portfolioList add: aPortfolio .
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:50:24' prior: 50885873!
addPortfolio: aPortfolio 
	portfolioList add: aPortfolio.
	! !

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 14:50:30'!
ERROR!
!Portfolio methodsFor: 'value' stamp: 'sc 5/19/2021 14:51:00' prior: 50885864!
balance
	|balance|
	balance := accountList sum:[:anAccount| anAccount balance] ifEmpty: [0].
	^ balance + (portfolioList sum:[:aPortfolio| aPortfolio balance] ifEmpty: [0]).! !

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 14:51:30'!
FAILURE!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 14:51:36'!
FAILURE!
!Portfolio methodsFor: 'value' stamp: 'sc 5/19/2021 14:52:11' prior: 50885887!
balance
	|balance|
	balance := accountList sum:[:anAccount| anAccount balance] ifEmpty: [0].
	balance :=balance + (portfolioList sum:[:aPortfolio| aPortfolio balance] ifEmpty: [0]).
	^balance! !

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 14:52:17'!
FAILURE!

Portfolio!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:56:14' prior: 50885842!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account .
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1  balance equals: 100.
	
	
	! !

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 14:56:17'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 14:56:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 14:56:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 14:56:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 14:56:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 14:56:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 14:56:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 14:56:17'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 14:58:04'!
test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account .
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1  balance equals: 100.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:00:07' prior: 50885964!
test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account .
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1  hasRegistered: deposito. 
	
	
	! !

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:00:07'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:00:21' prior: 50885980!
test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account .
	portfolio1 addPortfolio: portfolio2.
	self assert: (portfolio1 hasRegistered: deposito). 
	
	
	! !

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:00:22'!
FAILURE!
!Portfolio methodsFor: 'transacciones' stamp: 'sc 5/19/2021 15:01:03' prior: 50885627!
hasRegistered: aDeposit 
	^ accountList anySatisfy: [:anAccount| anAccount hasRegistered: aDeposit].! !
!Portfolio methodsFor: 'transacciones' stamp: 'sc 5/19/2021 15:03:05' prior: 50886020!
hasRegistered: aDeposit 
	^ (accountList anySatisfy: [:anAccount| anAccount hasRegistered: aDeposit]) 
	or:
	 (portfolioList anySatisfy: [:aPortfolio| aPortfolio hasRegistered: aDeposit]).! !

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:03:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:04:03'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:04:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:04:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:04:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:04:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:04:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:04:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:04:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:04:03'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:11:45'!
test09PortfolioVacioNoTieneTransacciones
	|portfolio1|
	portfolio1 := Portfolio new.
	self assert: portfolio1 transactions isEmpty.
	
	
	! !

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:11:47'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:12:08'!
transactions
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:12:15'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:12:54' prior: 50886118!
transactions
	^ OrderedCollection new.! !

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:12:59'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:12:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:12:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:12:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:12:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:12:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:13:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:13:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:13:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:13:00'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:14:25'!
test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion
	|portfolio1|
	portfolio1 := Portfolio new.
	self assert: portfolio1 transactions isEmpty.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:15:24' prior: 50886169!
test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion
	|portfolio1 account deposito|
	portfolio1 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	self assert: portfolio1 transactions equals: account transactions.
	
	
	! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:15:35'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:16:02' prior: 50886126!
transactions
	^accountList transactions ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:16:22' prior: 50886195!
transactions
	^accountList transactions ! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:16:35'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:16:55' prior: 50886200!
transactions
	^(accountList at: 1) transactions ! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:16:59'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:17:24' prior: 50886178!
test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion
	|portfolio1 account deposito|
	portfolio1 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio1 addAccount: account .
	self assert: portfolio1 transactions equals: account transactions.
	
	
	! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:17:27'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:17:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:17:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:17:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:17:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:17:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:17:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:17:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:17:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:17:28'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:17:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:17:28'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:17:38'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:17:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:17:38'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:19:33' prior: 50886209!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	^ (accountList do: [:account | transactions  append: account transactions])! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:19:42'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:19:58' prior: 50886325!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	^ (accountList do: [:account | transactions  add: account transactions])! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:20:04'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:20:25' prior: 50886337!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	^ (accountList do: [:account | transactions  addAll: account transactions])! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:20:30'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:21:03'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:21:51' prior: 50886349!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	^ accountList do: [:account | transactions  addAll: (account transactions)]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:21:55' prior: 50886366!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	^ accountList do: [:account | transactions  addAll: (account transactions)].! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:22:01'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:22:39' prior: 50886374!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	self halt.
	^ accountList do: [:account | transactions  addAll: (account transactions)].! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:22:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:22:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:22:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:22:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:22:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:22:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:22:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:22:40'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:22:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:22:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:22:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:22:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:22:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:22:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:22:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:22:56'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:24:28' prior: 50886386!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	self halt.
	^ accountList do: [:account | transactions  addAll: (account transactions). self halt].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:24:34' prior: 50886457!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	^ accountList do: [:account | transactions  addAll: (account transactions). self halt].! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:24:35'!
PASSED!

transactions!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:27:46' prior: 50886466!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	accountList do: [:account | transactions  addAll: (account transactions)].
	^transactions .
	! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:27:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:27:54'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:30:31'!
test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account.
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1 transactions equals: account transactions.
	
	
	! !

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 15:30:34'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:31:43' prior: 50886510!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	accountList do: [:anAccount | transactions  addAll: (anAccount transactions)].
	portfolioList do:[:aPortfolio | transactions  addAll: (aPortfolio transactions)].
	^transactions .
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:31:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:31:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:31:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:31:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:31:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:31:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:31:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:31:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:31:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:31:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 15:31:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:32:20' prior: 50886562!
test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account.
	portfolio1 addPortfolio: portfolio2.
	self assert: portfolio1 transactions equals: account transactions.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:42:16'!
test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene
	|portfolio  account|
	portfolio := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio addAccount: account .
	self should: [portfolio addAccount: account.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddAccountAlreadyInPortfolioErrorDescription].
		
	
	! !

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 15:42:20'!
FAILURE!
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/19/2021 15:44:02'!
cantAddAccountAlreadyInPortfolioErrorDescription
	^'cantAddAccountAlreadyInPortfolioErrorDescription'! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/19/2021 15:44:49' prior: 50886671!
cantAddAccountAlreadyInPortfolioErrorDescription
	^ 'pero amego, como va a agregar un account que ya ten�'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:46:35' prior: 50885284!
addAccount: aReceptiveAccount
	self raiseErrorIfAccountAlreadyInPortfolio: aReceptiveAccount.
	accountList add: aReceptiveAccount .! !
!Portfolio methodsFor: 'nil' stamp: 'sc 5/19/2021 15:48:44'!
raiseErrorIfAccountAlreadyInPortfolio: anAccount
	(accountList includes: anAccount)  ifTrue: [self class cantAddAccountAlreadyInPortfolioErrorDescription ]
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:49:03' prior: 50886692!
raiseErrorIfAccountAlreadyInPortfolio: anAccount
	(accountList includes: anAccount)  ifTrue:
	 [self error: self class cantAddAccountAlreadyInPortfolioErrorDescription ]
	! !

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 15:49:17'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 15:49:18'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:50:32'!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio addPortfolio: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddAccountAlreadyInPortfolioErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:50:55' prior: 50886759!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio addPortfolio: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioAlreadyInPortfolioErrorDescription].
		
	
	! !

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 15:50:55'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:51:28' prior: 50886772!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio addPortfolio: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToItselfErrorDescription].
		
	
	! !

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 15:51:28'!
FAILURE!
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/19/2021 15:52:20'!
cantAddPorfolioToItselfErrorDescription
	^ 'pero amego, como va a meter un portfolio en si mismo'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:54:23'!
raiseErrorIfPortfolioIsSelf: aPortfolio
	(aPortfolio == self)  ifTrue:
	 [self error: self class cantAddPorfolioToItselfErrorDescription]
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:55:02' prior: 50885878!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	portfolioList add: aPortfolio.
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 15:55:04'!
ERROR!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 15:55:04'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:55:39' prior: 50886788!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio addPortfolio: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio ].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:56:04' prior: 50886878!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio addPortfolio: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioToItselfErrorDescription  ].
		
	
	! !

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 15:56:06'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 15:56:06'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:57:32'!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio portfolio2|
	portfolio := Portfolio new.
	self should: [portfolio addPortfolio: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioToItselfErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:00:59' prior: 50886955!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/19/2021 16:01:56'!
cantAddPorfolioWithSharedAccount
	^ 'mir� si te vamo a deja agregar un porfolio con una cuenta compartida mi rey'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:03:06' prior: 50886818!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	portfolioList add: aPortfolio.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:05:53'!
raiseErrorIfPortfolioHasSharedAccount: aPortfolio
	aPortfolio accountList = accountList.
	! !
!Portfolio methodsFor: 'accesing' stamp: 'sc 5/19/2021 16:06:24'!
accountList
	^accountList! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:07:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:07:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:07:20'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:07:20'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:07:20'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:07:20'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:07:20'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:07:42' prior: 50887000!
raiseErrorIfPortfolioHasSharedAccount: aPortfolio
	aPortfolio accountList == accountList.
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:07:42'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:07:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:07:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:07:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:07:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:07:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:07:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:07:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:07:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:07:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:07:43'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:07:43'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:07:43'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:07:43'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:07:43'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:08:39' prior: 50887067!
raiseErrorIfPortfolioHasSharedAccount: aPortfolio
	aPortfolio accountList = accountList.
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:08:41'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:08:41'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:08:41'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:09:41' prior: 50887131!
raiseErrorIfPortfolioHasSharedAccount: aPortfolio
	aPortfolio accountList = accountList ifTrue: [self error: self class cantAddPorfolioWithSharedAccount ]
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:09:43'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:09:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:09:43'!
ERROR!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:10:04'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:10:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:10:04'!
ERROR!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:10:49'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:10:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:10:49'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:14:26' prior: 50886810!
raiseErrorIfPortfolioIsSelf: aPortfolio
	 (aPortfolio isEmpty) ifFalse:[ aPortfolio == self  ifTrue:
	 [self error: self class cantAddPorfolioToItselfErrorDescription]]
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:14:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:14:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:14:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:14:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:14:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:14:28'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:14:28'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:14:28'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:14:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:14:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:14:28'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:14:28'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:14:28'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:14:29'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:16:32' prior: 50887383!
raiseErrorIfPortfolioIsSelf: aPortfolio
	self sharesAccountWith: aPortfolio ifTrue: [self error: self class cantAddPorfolioWithSharedAccount ].
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/19/2021 16:20:15'!
sharesAccountWith: aPortfolio
	accountList do: [:anAccount| (aPortfolio accountList includes: anAccount)
				ifTrue: [self error: self class cantAddPorfolioWithSharedAccount ].]
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:20:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:20:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:20:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:20:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:20:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:20:17'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:20:17'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:20:17'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:20:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:20:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:20:17'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:20:17'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:20:17'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:20:17'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/19/2021 16:21:16' prior: 50887453!
sharesAccountWith: aPortfolio
	accountList do: [:anAccount| (aPortfolio  includes: anAccount)
				ifTrue: [self error: self class cantAddPorfolioWithSharedAccount ].]
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/19/2021 16:21:24' prior: 50887516!
sharesAccountWith: aPortfolio
	accountList do: [:anAccount| (aPortfolio accountList includes: anAccount)
				ifTrue: [self error: self class cantAddPorfolioWithSharedAccount ].]
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:21:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:21:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:21:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:21:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:21:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:21:26'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:21:26'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:21:26'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:21:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:21:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:21:26'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:21:26'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:21:26'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:21:26'!
FAILURE!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:22:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:22:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:22:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:22:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:22:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:22:05'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:22:05'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:22:05'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:22:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:22:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:22:05'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:22:05'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:22:05'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:22:05'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/19/2021 16:23:35' prior: 50887524!
sharesAccountWith: aPortfolio
	accountList do: [:anAccount| (aPortfolio accountList includes: anAccount)
				ifTrue: [^true].]
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/19/2021 16:25:04' prior: 50887640!
sharesAccountWith: aPortfolio
	^ accountList anySatisfy: [:anAccount| (aPortfolio accountList includes: anAccount)]! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:25:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:25:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:25:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:25:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:25:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:25:04'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:25:04'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:25:04'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:25:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:25:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:25:04'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:25:05'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:25:05'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:25:05'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:26:53' prior: 50887195!
raiseErrorIfPortfolioHasSharedAccount: aPortfolio
	aPortfolio sharesAccountWith: [self error: self class cantAddPorfolioWithSharedAccount]
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 16:27:17' prior: 50887708!
raiseErrorIfPortfolioHasSharedAccount: aPortfolio
	(aPortfolio sharesAccountWith: self) ifTrue: [self error: self class cantAddPorfolioWithSharedAccount]
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:27:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:27:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:27:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:27:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:27:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:27:18'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:27:18'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:27:18'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:27:18'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:27:18'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:27:18'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:27:19'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:27:19'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:27:19'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/19/2021 15:54:23' prior: 50887446!
raiseErrorIfPortfolioIsSelf: aPortfolio
	(aPortfolio == self)  ifTrue:
	 [self error: self class cantAddPorfolioToItselfErrorDescription]
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/19/2021 16:28:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/19/2021 16:28:02'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/19/2021 16:28:02'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/19/2021 16:28:02'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/19/2021 16:28:02'!
PASSED!

----SNAPSHOT----(19 May 2021 16:28:11) CuisUniversity-4532.image priorSource: 17729355!

----SNAPSHOT----(19 May 2021 16:28:13) CuisUniversity-4532.image priorSource: 17798027!

----SNAPSHOT----(19 May 2021 16:28:15) CuisUniversity-4532.image priorSource: 17798116!

----SNAPSHOT----(19 May 2021 16:28:30) CuisUniversity-4532.image priorSource: 17798205!

----STARTUP---- (20 May 2021 20:11:30) as C:\Users\Santiago\Desktop\Uba\Inge 2\Programa\windows64\CuisUniversity-4532.image!


!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 20:12:09'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 20:12:10'!
PASSED!

----SNAPSHOT----(20 May 2021 20:26:32) CuisUniversity-4532.image priorSource: 17798294!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:32:21'!
test14NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	self should: [portfolio2 addPortfolio: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 20:32:24'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:34:07'!
test15NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	! !

!methodRemoval: PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 20:34:08'!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:34:28'!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	! !

!methodRemoval: PortfolioTest #test15NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 20:34:28'!
test15NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:34:41'!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	self should: [portfolio2 addPortfolio: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !

!methodRemoval: PortfolioTest #test14NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 20:34:41'!
test14NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	self should: [portfolio2 addPortfolio: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	!
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/20/2021 20:35:34'!
cantAddPortfolioToPortfolioWithSharedAncestor
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas '! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/20/2021 20:35:36' prior: 50888046!
cantAddPortfolioToPortfolioWithSharedAncestor
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas'! !
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/20/2021 20:36:41'!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	self shouldBeImplemented 
	! !

Object subclass: #Portfolio
	instanceVariableNames: 'accountList portfolioList father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/20/2021 20:37:25'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountList portfolioList father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'value' stamp: 'sc 5/20/2021 20:37:53' prior: 50885761 overrides: 16896425!
initialize
	accountList := OrderedCollection new. 
	portfolioList  := OrderedCollection new.! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/20/2021 20:39:43' prior: 50886992!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	aPortfolio addFather: self.
	portfolioList add: aPortfolio.
	! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/20/2021 20:40:08'!
addFather: aPortfolio
	father := aPortfolio.
	! !
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/20/2021 20:43:45' prior: 50888061!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	(aPortfolio isMyFather: father) ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 20:44:09'!
isMyFather: aPortfolio
	^aPortfolio = father.! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/20/2021 20:45:13' prior: 50888087!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAncestor: aPortfolio.
	aPortfolio addFather: self.
	portfolioList add: aPortfolio.
	! !

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 20:45:20'!
ERROR!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 20:45:48'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/20/2021 20:45:48'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/20/2021 20:45:48'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/20/2021 20:45:48'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 20:45:48'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 20:45:48'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 20:46:22'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 20:47:48' prior: 50888109!
isMyFather: aPortfolio
	^(aPortfolio = father) and: (father ~= nil).! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 20:48:01' prior: 50888191!
isMyFather: aPortfolio
	^aPortfolio = father and: father ~= nil.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 20:48:21' prior: 50888196!
isMyFather: aPortfolio
	^(aPortfolio = father) and: (father ~= nil).! !

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 20:48:28'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 20:48:28'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:58:27'!
test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/20/2021 20:58:27'!
FAILURE!
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/20/2021 21:00:52' prior: 50888101!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	((aPortfolio isMyFather: father) or: (aPortfolio isMyGrandfather: father))
	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 21:01:35'!
isMyGrandfather: aPortfolio
	father isMyFather: aPortfolio.! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/20/2021 21:02:03'!
ERROR!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 21:02:14'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 21:02:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/20/2021 21:02:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/20/2021 21:02:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/20/2021 21:02:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/20/2021 21:02:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 21:02:14'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/20/2021 21:02:15'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/20/2021 21:02:15'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/20/2021 21:02:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/20/2021 21:02:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/20/2021 21:02:15'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/20/2021 21:02:15'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/20/2021 21:02:15'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 21:02:15'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 21:02:15'!
ERROR!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/20/2021 21:02:15'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 21:02:41' prior: 50888303!
isMyGrandfather: aPortfolio
	^(aPortfolio isMyFather: father) or father isMyFather: aPortfolio.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 21:02:59' prior: 50888378!
isMyGrandfather: aPortfolio
	^(aPortfolio isMyFather: father) or: (father isMyFather: aPortfolio).! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/20/2021 21:03:03'!
ERROR!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 21:03:09'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 21:03:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/20/2021 21:03:09'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/20/2021 21:03:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/20/2021 21:03:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/20/2021 21:03:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 21:03:09'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/20/2021 21:03:09'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/20/2021 21:03:09'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/20/2021 21:03:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/20/2021 21:03:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/20/2021 21:03:10'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/20/2021 21:03:10'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/20/2021 21:03:10'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 21:03:10'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 21:03:10'!
ERROR!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/20/2021 21:03:10'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 21:04:01' prior: 50888384!
isMyGrandfather: aPortfolio
	^(father ~= nil) or: (father isMyFather: aPortfolio).! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/20/2021 21:04:03'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/20/2021 21:04:03'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/20/2021 21:04:03'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/20/2021 21:04:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/20/2021 21:04:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/20/2021 21:04:04'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/20/2021 21:04:04'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/20/2021 21:04:04'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/20/2021 21:04:04'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/20/2021 21:04:04'!
ERROR!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/20/2021 21:04:04'!
ERROR!

----End fileIn of C:\Users\Santiago\Desktop\Uba\Inge 2\Programa\windows64\ISW1-2021-1C-1erParcial (2).st----!

----STARTUP---- (23 May 2021 14:32:26) as C:\Users\Santiago\Desktop\Uba\Inge 2\Programa\windows64\CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:32:21'!
test14NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	self should: [portfolio2 addPortfolio: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:34:07'!
test15NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	! !

!methodRemoval: PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 14:32:29'!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:34:28'!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	! !

!methodRemoval: PortfolioTest #test15NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 14:32:29'!
test15NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 addPortfolio: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:34:41'!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	self should: [portfolio2 addPortfolio: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !

!methodRemoval: PortfolioTest #test14NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 14:32:29'!
test14NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	
	portfolio1 addPortfolio: portfolio2.
	portfolio1 addPortfolio: portfolio3.
	self should: [portfolio2 addPortfolio: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	!
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/20/2021 20:35:34'!
cantAddPortfolioToPortfolioWithSharedAncestor
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas '! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/20/2021 20:35:36' prior: 50889383!
cantAddPortfolioToPortfolioWithSharedAncestor
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas'! !
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/20/2021 20:36:41'!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	self shouldBeImplemented 
	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/23/2021 14:32:29'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountList portfolioList father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/23/2021 14:32:29'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountList portfolioList father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'value' stamp: 'sc 5/20/2021 20:37:53' prior: 50885761 overrides: 16896425!
initialize
	accountList := OrderedCollection new. 
	portfolioList  := OrderedCollection new.! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/20/2021 20:39:43' prior: 50886992!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	aPortfolio addFather: self.
	portfolioList add: aPortfolio.
	! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/20/2021 20:40:08'!
addFather: aPortfolio
	father := aPortfolio.
	! !
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/20/2021 20:43:45' prior: 50889398!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	(aPortfolio isMyFather: father) ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 20:44:09'!
isMyFather: aPortfolio
	^aPortfolio = father.! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/20/2021 20:45:13' prior: 50889426!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAncestor: aPortfolio.
	aPortfolio addFather: self.
	portfolioList add: aPortfolio.
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 20:47:48' prior: 50889448!
isMyFather: aPortfolio
	^(aPortfolio = father) and: (father ~= nil).! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 20:48:01' prior: 50889464!
isMyFather: aPortfolio
	^aPortfolio = father and: father ~= nil.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 20:48:21' prior: 50889469!
isMyFather: aPortfolio
	^(aPortfolio = father) and: (father ~= nil).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/20/2021 20:58:27'!
test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/20/2021 21:00:52' prior: 50889440!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	((aPortfolio isMyFather: father) or: (aPortfolio isMyGrandfather: father))
	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 21:01:35'!
isMyGrandfather: aPortfolio
	father isMyFather: aPortfolio.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 21:02:41' prior: 50889508!
isMyGrandfather: aPortfolio
	^(aPortfolio isMyFather: father) or father isMyFather: aPortfolio.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 21:02:59' prior: 50889513!
isMyGrandfather: aPortfolio
	^(aPortfolio isMyFather: father) or: (father isMyFather: aPortfolio).! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/20/2021 21:04:01' prior: 50889519!
isMyGrandfather: aPortfolio
	^(father ~= nil) or: (father isMyFather: aPortfolio).! !

!classDefinition: #RobotWarsTest category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:31'!
TestCase subclass: #RobotWarsTest
	instanceVariableNames: 'aluminum3000Robot tankRoverRobot clawWeapon hsblasterWeapon turboLaserWeapon n'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classDefinition: #RobotWarsTest category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:31'!
TestCase subclass: #RobotWarsTest
	instanceVariableNames: 'aluminum3000Robot tankRoverRobot clawWeapon hsblasterWeapon turboLaserWeapon n'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!
!RobotWarsTest methodsFor: 'setUp' stamp: 'sc 5/3/2021 21:30:01' overrides: 16927572!
setUp
	"Inicializo objetos que voy a utlilizar a lo largo de los tests. Como el setUp se corre antes de cada test,
 (pensaba que no pero se ve que s�) funciona perfecto "
	aluminum3000Robot := self createAluminum3000.
	tankRoverRobot := self createTankRover .
	clawWeapon :=  self createClaw .
	hsblasterWeapon := self createHSBlaster. 
	turboLaserWeapon := self createTurboLaserCannon .
	
	! !
!RobotWarsTest methodsFor: 'remaining years assertions' stamp: 'sc 5/3/2021 20:08:06'!
when: attacker attacks: victim with: attackerWeapon victimShouldHaveLeft: years

	attacker addWeapon: attackerWeapon.
	
	attacker attack: victim with: attackerWeapon.
	
	self assert: (years) equals: victim life! !
!RobotWarsTest methodsFor: 'robot creation tests' stamp: 'sc 5/3/2021 20:39:45'!
test01ShouldNotAddWeaponIfMaxWeaponWeightExceeded
	
	aluminum3000Robot addWeapon: turboLaserWeapon .
	
	self
		should: [ aluminum3000Robot addWeapon: self createTurboLaserCannon ]
		raise: Error
		withMessageText: Robot maxWeaponWeightExceededErrorDescription.
		
	self assert: 1 equals: aluminum3000Robot weaponsCount.
	self assert: (aluminum3000Robot includesWeapon: turboLaserWeapon)

	
	

	! !
!RobotWarsTest methodsFor: 'robot creation tests' stamp: 'sc 5/3/2021 21:17:37'!
test02ShouldNotAddWeaponIfSpeedBelowZero
	
	| secondAddedWeapon |
	
	tankRoverRobot addWeapon: turboLaserWeapon.
	secondAddedWeapon := self createTurboLaserCannon.
	tankRoverRobot addWeapon: secondAddedWeapon.
		
	self
		should: [ tankRoverRobot addWeapon: self createTurboLaserCannon ]
		raise: Error
		withMessageText: Robot speedBelowZeroErrorDescription .
		
	self assert: 2 equals: (tankRoverRobot weaponsCount).
	self assert: (tankRoverRobot includesWeapon: turboLaserWeapon).
	self assert: (tankRoverRobot includesWeapon: secondAddedWeapon)
	

	! !
!RobotWarsTest methodsFor: 'robot creation tests' stamp: 'sc 5/3/2021 21:18:04'!
test03ShouldHaveZeroWeightWhenNoWeaponsAdded

	self assert: 0 * kilogram equals: tankRoverRobot totalWeaponWeight.
	
	

	! !
!RobotWarsTest methodsFor: 'robot creation tests' stamp: 'sc 5/3/2021 21:18:46'!
test04ShouldAddWeightWhenAddingWeapon

	tankRoverRobot addWeapon: turboLaserWeapon .

	self assert: turboLaserWeapon weight equals: tankRoverRobot totalWeaponWeight.
	
	

	! !
!RobotWarsTest methodsFor: 'robot creation tests' stamp: 'sc 5/3/2021 21:19:01'!
test05ShouldHaveZeroSpeedWhenNoWeaponsAdded

	self assert: 0 * kilometer / hour equals: tankRoverRobot totalSpeedImpact.
	
	

	! !
!RobotWarsTest methodsFor: 'robot creation tests' stamp: 'sc 5/3/2021 20:52:11'!
test06ShouldAddSpeedImpactWhenAddingWeapons

	tankRoverRobot addWeapon: turboLaserWeapon .
	tankRoverRobot addWeapon: clawWeapon.

	self assert: turboLaserWeapon weight + clawWeapon weight equals: tankRoverRobot totalWeaponWeight.
	
	

	! !
!RobotWarsTest methodsFor: 'victim life after attacking tests' stamp: 'sc 5/3/2021 21:14:33'!
test07ClawReducesLifeOfAluminum3000By25

	| attacked |
	attacked := self createAluminum3000.	
	self when: aluminum3000Robot
	attacks: attacked
	with: clawWeapon
	victimShouldHaveLeft: (100 * year) - (25 * year).
	
	
	! !
!RobotWarsTest methodsFor: 'victim life after attacking tests' stamp: 'sc 5/3/2021 21:14:16'!
test08ClawReducesLifeOfTankRoverBy5

	self when:
	aluminum3000Robot
	attacks:tankRoverRobot
	with: clawWeapon
	victimShouldHaveLeft: (100*year) - (5*year).
	
	! !
!RobotWarsTest methodsFor: 'victim life after attacking tests' stamp: 'sc 5/3/2021 21:13:58'!
test09HSBlasterReducesLifeOfAluminum3000By5

	| attacked |
	attacked := self createAluminum3000.
	self when:aluminum3000Robot
	attacks:attacked
	with: hsblasterWeapon
	victimShouldHaveLeft: (100*year) - (5*year).
	
	! !
!RobotWarsTest methodsFor: 'victim life after attacking tests' stamp: 'sc 5/3/2021 21:13:37'!
test10HSBlasterReducesLifeOfTankRoverBy50

	self when:aluminum3000Robot
	 attacks:tankRoverRobot
	 with: hsblasterWeapon
	 victimShouldHaveLeft:(100*year)-(50*year).
	
	
	! !
!RobotWarsTest methodsFor: 'victim life after attacking tests' stamp: 'sc 5/3/2021 21:12:04'!
test11TurboLaserCannonReducesLifeOfAluminum3000By100

	| attacked|

	attacked := self createAluminum3000.
	self when: aluminum3000Robot
	 attacks: attacked
	 with: turboLaserWeapon
	 victimShouldHaveLeft: (100*year) - (100 * year).
	
	! !
!RobotWarsTest methodsFor: 'victim life after attacking tests' stamp: 'sc 5/3/2021 21:13:09'!
test12TurboLaserCannonReducesLifeOfTankRoverBy100

	self when: aluminum3000Robot 
	 attacks: tankRoverRobot
	 with: turboLaserWeapon
	 victimShouldHaveLeft: (100 * year) - (100 * year)
	
	! !
!RobotWarsTest methodsFor: 'weapon use after attacking tests' stamp: 'sc 5/3/2021 21:21:01'!
test13CanUseClawOnlyTwiceWhenAttackingAluminum3000

	|attacked |
	attacked := self createAluminum3000.
	aluminum3000Robot addWeapon: clawWeapon .
	
	2 timesRepeat: [ aluminum3000Robot attack: attacked with: clawWeapon ].
	
	self 
		should: [ aluminum3000Robot attack: attacked with: clawWeapon ]
		raise: Error
		withMessageText: Robot canNotAttackWithWeaponNotBelongingToRobotErrorDescription 
	! !
!RobotWarsTest methodsFor: 'weapon use after attacking tests' stamp: 'sc 5/3/2021 21:22:25'!
test14CanUseClawOnlyOnceWhenAttackingTankRover

	aluminum3000Robot addWeapon: clawWeapon .
	
	aluminum3000Robot attack: tankRoverRobot with: clawWeapon .
	
	self 
		should: [ aluminum3000Robot attack: tankRoverRobot with: clawWeapon ]
		raise: Error
		withMessageText: Robot canNotAttackWithWeaponNotBelongingToRobotErrorDescription 
	! !
!RobotWarsTest methodsFor: 'weapon use after attacking tests' stamp: 'sc 5/3/2021 21:23:26'!
test15AfterUsing5TimesHSBlasterAgainstAluminum3000RemovesItselfAndAddTurboLaserCannon
	| attacked |
	
	attacked := self createAluminum3000.
	aluminum3000Robot addWeapon: hsblasterWeapon.
	
	5 timesRepeat: [ aluminum3000Robot attack: attacked with: hsblasterWeapon].
	
	self assert: 1 equals: aluminum3000Robot weaponsCount.
	self assert: (aluminum3000Robot includesWeaponOfType: #TurboLaserCannon).
	! !
!RobotWarsTest methodsFor: 'weapon use after attacking tests' stamp: 'sc 5/3/2021 21:24:25'!
test16AddsClawWhenAttakingTankRoverWithHSBlasterAndVictingLiveLessOrEqualTo50

	aluminum3000Robot addWeapon: hsblasterWeapon .
	
	aluminum3000Robot attack: tankRoverRobot with: hsblasterWeapon .
	
	self assert: 2 equals: aluminum3000Robot weaponsCount.
	self assert: (aluminum3000Robot includesWeapon: hsblasterWeapon ).
	self assert: (aluminum3000Robot includesWeaponOfType: #Claw).
	! !
!RobotWarsTest methodsFor: 'weapon use after attacking tests' stamp: 'sc 5/3/2021 21:25:26'!
test17CanUseOnlyTurboLaserCannon10TimesWhenAttakingAluminum3000

	| attacked |

	attacked := self createAluminum3000.
	aluminum3000Robot addWeapon: turboLaserWeapon .
	
	10 timesRepeat: [ aluminum3000Robot attack: attacked with: turboLaserWeapon ].
	
	self assert: 0 equals: aluminum3000Robot weaponsCount.
	! !
!RobotWarsTest methodsFor: 'weapon use after attacking tests' stamp: 'sc 5/3/2021 21:26:27'!
test18CanUseOnlyTurboLaserCannon10TimesWhenAttakingTankRover

	aluminum3000Robot addWeapon: turboLaserWeapon .
	
	5 timesRepeat: [ aluminum3000Robot attack: tankRoverRobot with: turboLaserWeapon ].
	
	self assert: 1 equals: aluminum3000Robot weaponsCount.
	self assert: (aluminum3000Robot includesWeaponOfType: #HSBlaster)
	! !
!RobotWarsTest methodsFor: 'robot creation' stamp: 'sc 5/3/2021 19:35:54'!
createAluminum3000

	^ Aluminum3000Robot create. ! !
!RobotWarsTest methodsFor: 'robot creation' stamp: 'sc 5/3/2021 19:36:03'!
createTankRover

	^ TankRoverRobot create.! !
!RobotWarsTest methodsFor: 'weapon creation' stamp: 'sc 5/3/2021 18:36:56'!
createClaw

	^ ClawWeapon create.! !
!RobotWarsTest methodsFor: 'weapon creation' stamp: 'sc 5/3/2021 18:37:03'!
createHSBlaster

	^ HSBlasterWeapon create.! !
!RobotWarsTest methodsFor: 'weapon creation' stamp: 'sc 5/3/2021 18:37:10'!
createTurboLaserCannon

	^ TurboLaserCannonWeapon create.! !

!classDefinition: 'RobotWarsTest class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:33'!
RobotWarsTest class
	instanceVariableNames: ''!

!classDefinition: 'RobotWarsTest class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:33'!
RobotWarsTest class
	instanceVariableNames: ''!
!RobotWarsTest class methodsFor: 'class initialization' stamp: 'HAW 5/2/2021 15:40:59' overrides: 16883149!
initialize

	"Este m�todo est� para crear una unidad que falta, no lo deben tocar ni darle importancia durante 
	el parcial - Hernan"
	| kilogram |
	gram := BaseUnit named: 'gram' sign: 'g'.
	kilogram := ProportionalDerivedUnit baseUnit: gram conversionFactor: 1000  named: 'kilogram' sign: 'kg'.
	
	Smalltalk at: #kilogram put: kilogram
	! !

!classDefinition: #Robot category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:33'!
Object subclass: #Robot
	instanceVariableNames: 'life speed maxWeaponWeight weapons'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classDefinition: #Robot category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:33'!
Object subclass: #Robot
	instanceVariableNames: 'life speed maxWeaponWeight weapons'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!
!Robot methodsFor: 'type' stamp: 'sc 5/3/2021 19:01:39'!
type
	self subclassResponsibility! !
!Robot methodsFor: 'initialization' stamp: 'sc 5/3/2021 18:58:29'!
initializeWithLife: lifePoints speed: aSpeed maxWeaponWeight: aMaxWeaponWeight

	life := lifePoints.
	speed := aSpeed.
	maxWeaponWeight := aMaxWeaponWeight.
	weapons := OrderedCollection new.

	! !
!Robot methodsFor: 'attacking' stamp: 'sc 5/3/2021 17:42:40'!
attack: aVictim with: aWeapon

	(weapons includes: aWeapon) 
		ifTrue: [ aWeapon attack: aVictim by: self ]
		ifFalse: [ self signalCanNotAttackWithWeaponNotBelongingToRobot ]! !
!Robot methodsFor: 'weapons' stamp: 'sc 5/3/2021 17:32:55'!
addWeapon: aWeapon

	(self totalWeaponWeight + aWeapon weight) > maxWeaponWeight ifTrue: [ self signalMaxWeaponWeightExceeded ].
	
	(self totalSpeedImpact + aWeapon speedImpact) > speed ifTrue: [ self signalSpeedBelowZero ].
	
	weapons add: aWeapon.
	! !
!Robot methodsFor: 'weapons' stamp: 'sc 5/3/2021 17:32:48'!
includesWeapon: aWeapon 

	^weapons includes: aWeapon ! !
!Robot methodsFor: 'weapons' stamp: 'sc 5/3/2021 17:32:43'!
includesWeaponOfType: aWeaponType

	^weapons anySatisfy: [ :weapon | weapon type = aWeaponType ]! !
!Robot methodsFor: 'weapons' stamp: 'sc 5/3/2021 17:32:37'!
removeWeapon: aWeapon 
	
	weapons isEmpty ifFalse: [weapons remove: aWeapon ].! !
!Robot methodsFor: 'weapons' stamp: 'sc 5/3/2021 17:39:34'!
totalSpeedImpact

	| total  |
	
	total _ 0 * kilometer / hour. weapons do: [:weapon | total _ total + weapon speedImpact].
	^ total.	! !
!Robot methodsFor: 'weapons' stamp: 'sc 5/3/2021 17:39:39'!
totalWeaponWeight
	| total |
	
	total _ 0* kilogram. weapons do: [:weapon | total _ total + weapon weight].
	^ total.	! !
!Robot methodsFor: 'weapons' stamp: 'sc 5/3/2021 17:31:16'!
weaponsCount

	^ weapons size 	! !
!Robot methodsFor: 'life' stamp: 'FRT 4/28/2021 20:33:19'!
life

	^ life! !
!Robot methodsFor: 'life' stamp: 'HAW 5/2/2021 15:52:01'!
life: newLife

	life := newLife! !
!Robot methodsFor: 'exceptions' stamp: 'HAW 4/29/2021 20:49:49'!
signalCanNotAttackWithWeaponNotBelongingToRobot
	
	self error: self class canNotAttackWithWeaponNotBelongingToRobotErrorDescription! !
!Robot methodsFor: 'exceptions' stamp: 'FRT 4/28/2021 16:02:10'!
signalMaxWeaponWeightExceeded

	self error: self class maxWeaponWeightExceededErrorDescription 	! !
!Robot methodsFor: 'exceptions' stamp: 'FRT 4/28/2021 22:53:14'!
signalSpeedBelowZero

	self error: self class speedBelowZeroErrorDescription 	! !

!classDefinition: 'Robot class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:34'!
Robot class
	instanceVariableNames: ''!

!classDefinition: 'Robot class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:35'!
Robot class
	instanceVariableNames: ''!
!Robot class methodsFor: 'error description' stamp: 'HAW 4/29/2021 20:50:34'!
canNotAttackWithWeaponNotBelongingToRobotErrorDescription
	
	^'Cannot attack with weapon not belonging to robot'! !
!Robot class methodsFor: 'error description' stamp: 'FRT 4/28/2021 16:04:48'!
maxWeaponWeightExceededErrorDescription

	^ 'Maximum weapon weight has been exceeded'! !
!Robot class methodsFor: 'error description' stamp: 'HAW 5/2/2021 15:52:46'!
speedBelowZeroErrorDescription

	^ 'Speed cannot be below zero kilometer per hour'! !

!classDefinition: #Aluminum3000Robot category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:35'!
Robot subclass: #Aluminum3000Robot
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classDefinition: #Aluminum3000Robot category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:35'!
Robot subclass: #Aluminum3000Robot
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!
!Aluminum3000Robot methodsFor: 'accessing' stamp: 'sc 5/3/2021 19:01:58' overrides: 50889853!
type
 	^#Aluminum3000! !
!Aluminum3000Robot methodsFor: 'sufferAttacks' stamp: 'sc 5/3/2021 19:19:30'!
sufferAttackByAClawWeapon: weapon andRobot: attacker
			self life: self life - (25 * year).
			weapon usedTimes = 2 ifTrue: [ attacker removeWeapon: weapon].
			! !
!Aluminum3000Robot methodsFor: 'sufferAttacks' stamp: 'sc 5/3/2021 19:45:44'!
sufferAttackByHSBlasterWeapon: weapon andRobot: attacker
			self life: self life - (5 * year).
			weapon usedTimes = 5 ifTrue: [ 
				attacker removeWeapon: weapon.
				attacker addWeapon: (TurboLaserCannonWeapon create) .]
! !
!Aluminum3000Robot methodsFor: 'sufferAttacks' stamp: 'sc 5/3/2021 19:46:44'!
sufferAttackByTurboLaserWeapon: weapon andRobot: attacker
			self life: self life - (100 * year).
			weapon usedTimes = 10 ifTrue: [ attacker removeWeapon: weapon ]
! !

!classDefinition: 'Aluminum3000Robot class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:35'!
Aluminum3000Robot class
	instanceVariableNames: ''!

!classDefinition: 'Aluminum3000Robot class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:35'!
Aluminum3000Robot class
	instanceVariableNames: ''!
!Aluminum3000Robot class methodsFor: 'as yet unclassified' stamp: 'sc 5/3/2021 18:58:16'!
create

	 ^ self new initializeWithLife: 100 * year
		speed: 90 * kilometer / hour
		maxWeaponWeight: 50 * kilogram.! !

!classDefinition: #TankRoverRobot category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:35'!
Robot subclass: #TankRoverRobot
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classDefinition: #TankRoverRobot category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:35'!
Robot subclass: #TankRoverRobot
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!
!TankRoverRobot methodsFor: 'accessing' stamp: 'sc 5/3/2021 19:02:20' overrides: 50889853!
type
	^ #TankRover! !
!TankRoverRobot methodsFor: 'sufferAttack' stamp: 'sc 5/3/2021 19:23:07'!
sufferAttackByAClawWeapon: weapon andRobot: attacker
			self life: self life - (5 * year).
			attacker removeWeapon: weapon.! !
!TankRoverRobot methodsFor: 'sufferAttack' stamp: 'sc 5/3/2021 21:42:47'!
sufferAttackByHSBlasterWeapon: weapon andRobot: attacker
			self  life: self life - (50 * year).
			self life <= (50 * year) ifTrue: [ attacker addWeapon: (ClawWeapon create) ].
		.
			! !
!TankRoverRobot methodsFor: 'sufferAttack' stamp: 'sc 5/3/2021 19:47:03'!
sufferAttackByTurboLaserWeapon: weapon andRobot: attacker
			self  life: self life - (100 * year).
			weapon usedTimes = 5 ifTrue: [ 
				attacker removeWeapon: weapon.
				attacker addWeapon: (HSBlasterWeapon create) ].
		.
			! !

!classDefinition: 'TankRoverRobot class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
TankRoverRobot class
	instanceVariableNames: ''!

!classDefinition: 'TankRoverRobot class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
TankRoverRobot class
	instanceVariableNames: ''!
!TankRoverRobot class methodsFor: 'as yet unclassified' stamp: 'sc 5/3/2021 18:59:37'!
create

	^ self new 
		initializeWithLife:
		100 * year
		speed: 40 * kilometer / hour
		maxWeaponWeight: 200 * kilogram.! !

!classDefinition: #Weapon category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
Object subclass: #Weapon
	instanceVariableNames: 'weight speedImpact usedTimes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classDefinition: #Weapon category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
Object subclass: #Weapon
	instanceVariableNames: 'weight speedImpact usedTimes'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!
!Weapon methodsFor: 'accesing' stamp: 'sc 5/3/2021 19:52:08'!
speedImpact
	^ speedImpact! !
!Weapon methodsFor: 'accesing' stamp: 'sc 5/3/2021 19:20:05'!
usedTimes
	^ usedTimes! !
!Weapon methodsFor: 'accesing' stamp: 'sc 5/3/2021 18:13:11'!
weight
	^ weight! !
!Weapon methodsFor: 'initialization' stamp: 'sc 5/3/2021 18:52:53'!
initializeWith: aWeight And: aSpeedImpact
	usedTimes := 0.
	weight := aWeight.
	speedImpact := aSpeedImpact.! !
!Weapon methodsFor: 'attacking' stamp: 'sc 5/3/2021 19:38:54'!
attack: aVictim by: anAttacker 	
	self subclassResponsibility .! !
!Weapon methodsFor: 'type' stamp: 'sc 5/3/2021 18:50:07'!
type
	self subclassResponsibility.! !

!classDefinition: 'Weapon class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
Weapon class
	instanceVariableNames: ''!

!classDefinition: 'Weapon class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
Weapon class
	instanceVariableNames: ''!
!Weapon class methodsFor: 'instance creation' stamp: 'HAW 5/2/2021 15:44:12'!
ofType: aWeaponType

	aWeaponType = #Claw ifTrue: [ ^self new 
		initializeType: aWeaponType weight: 10 * kilogram speedImpact: 5 * kilometer / hour ].
	aWeaponType = #HSBlaster ifTrue: [ ^ self new 
		initializeType: aWeaponType weight: 20 * kilogram speedImpact: 10 * kilometer / hour ].
	aWeaponType = #TurboLaserCannon ifTrue: [^ self new 
		initializeType: aWeaponType weight: 40 * kilogram speedImpact: 15 * kilometer / hour ].

	self error: 'Invalid Weapon Type'! !

!classDefinition: #ClawWeapon category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
Weapon subclass: #ClawWeapon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classDefinition: #ClawWeapon category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
Weapon subclass: #ClawWeapon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!
!ClawWeapon methodsFor: 'attacking' stamp: 'sc 5/3/2021 19:40:30' overrides: 50890123!
attack: aVictim by: anAttacker
	usedTimes := usedTimes + 1.
	aVictim sufferAttackByAClawWeapon: self andRobot:  anAttacker.! !
!ClawWeapon methodsFor: 'accessing' stamp: 'sc 5/3/2021 18:50:44' overrides: 50890127!
type
 	^#Claw
! !

!classDefinition: 'ClawWeapon class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:36'!
ClawWeapon class
	instanceVariableNames: ''!

!classDefinition: 'ClawWeapon class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
ClawWeapon class
	instanceVariableNames: ''!
!ClawWeapon class methodsFor: 'as yet unclassified' stamp: 'sc 5/3/2021 18:53:04'!
create
	^(self new initializeWith: 10 * kilogram And: 5 * kilometer / hour).! !

!classDefinition: #HSBlasterWeapon category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
Weapon subclass: #HSBlasterWeapon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classDefinition: #HSBlasterWeapon category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
Weapon subclass: #HSBlasterWeapon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!
!HSBlasterWeapon methodsFor: 'attacking' stamp: 'sc 5/3/2021 19:41:54' overrides: 50890123!
attack: aVictim by: anAttacker
	usedTimes := usedTimes + 1.
	aVictim sufferAttackByHSBlasterWeapon: self andRobot: anAttacker 
	! !
!HSBlasterWeapon methodsFor: 'accessing' stamp: 'sc 5/3/2021 18:50:49' overrides: 50890127!
type
 	^#HSBlaster
! !

!classDefinition: 'HSBlasterWeapon class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
HSBlasterWeapon class
	instanceVariableNames: ''!

!classDefinition: 'HSBlasterWeapon class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
HSBlasterWeapon class
	instanceVariableNames: ''!
!HSBlasterWeapon class methodsFor: 'as yet unclassified' stamp: 'sc 5/3/2021 18:53:09'!
create
	^(self new initializeWith: 20 * kilogram And: 10 * kilometer / hour).! !

!classDefinition: #TurboLaserCannonWeapon category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
Weapon subclass: #TurboLaserCannonWeapon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!

!classDefinition: #TurboLaserCannonWeapon category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
Weapon subclass: #TurboLaserCannonWeapon
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2021-1C-1erParcial'!
!TurboLaserCannonWeapon methodsFor: 'attacking' stamp: 'sc 5/3/2021 19:42:32' overrides: 50890123!
attack: aVictim by: anAttacker
	usedTimes := usedTimes + 1.
	aVictim sufferAttackByTurboLaserWeapon: self andRobot: anAttacker 
	! !
!TurboLaserCannonWeapon methodsFor: 'accessing' stamp: 'sc 5/3/2021 18:49:21' overrides: 50890127!
type
 	^#TurboLaserCannon! !

!classDefinition: 'TurboLaserCannonWeapon class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
TurboLaserCannonWeapon class
	instanceVariableNames: ''!

!classDefinition: 'TurboLaserCannonWeapon class' category: 'ISW1-2021-1C-1erParcial' stamp: 'sc 5/23/2021 14:32:37'!
TurboLaserCannonWeapon class
	instanceVariableNames: ''!
!TurboLaserCannonWeapon class methodsFor: 'as yet unclassified' stamp: 'sc 5/3/2021 18:53:17'!
create
	^(self new initializeWith: 40 * kilogram And: 15 * kilometer / hour).
! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:32:44'!
ERROR!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:32:57'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:32:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 14:32:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 14:32:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 14:32:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 14:32:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:32:57'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:32:57'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:32:57'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 14:32:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 14:32:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 14:32:58'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 14:32:58'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 14:32:58'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 14:32:58'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 14:32:58'!
ERROR!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:32:58'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:33:10'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 14:35:57' prior: 50889525!
isMyGrandfather: aPortfolio
	^(father ~= nil) and: (father isMyFather: aPortfolio).! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:36:03'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 14:38:50' prior: 50890360!
isMyGrandfather: aPortfolio
	^ (self ~= nil) and: (father ~= nil) and: (father isMyFather: aPortfolio).! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:39:02'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:39:35'!
ERROR!

 (2 = 1) and: (1 / 0 = 5)!

 (2 = 1)!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 14:45:01' prior: 50890370!
isMyGrandfather: aPortfolio
	(father ~= nil) ifTrue:[^ father isMyFather: aPortfolio].
	^false. ! !

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 14:45:05'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:05'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:05'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 14:45:10'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:10'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:10'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 14:45:29'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:29'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:29'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:37'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:43'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:43'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:46'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 14:45:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 14:45:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 14:45:58'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 14:45:58'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 14:45:58'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 14:45:58'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 14:45:58'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:58'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:45:58'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:46:08'!
FAILURE!
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 14:51:22' prior: 50889499!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	((aPortfolio isMyFather: father) or: (aPortfolio isMyGrandfather: father))
	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:51:38'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:51:38'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 14:51:57'!
test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !

!methodRemoval: PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3 stamp: 'sc 5/23/2021 14:51:57'!
test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio2EsPadreDeP3
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 14:52:19'!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !

!methodRemoval: PortfolioTest #test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 14:52:19'!
test16NoSePuedeAgregarPortfolio3APortfolio2SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 14:53:13' prior: 50890757!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo receptor | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	receptor := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: receptor.
	
	self should: [receptor addPortfolio: hijo]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 14:53:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 14:53:14'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 14:53:14'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 14:53:14'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 14:53:14'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 14:53:14'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 14:53:14'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: 'accountAndPortfolioList  father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/23/2021 14:59:44'!
Object subclass: #Portfolio
	instanceVariableNames: 'accountAndPortfolioList father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 14:59:56' prior: 50886685!
addAccount: aReceptiveAccount
	self raiseErrorIfAccountAlreadyInPortfolio: aReceptiveAccount.
	accountAndPortfolioList add: aReceptiveAccount .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 15:00:00' prior: 50886700!
raiseErrorIfAccountAlreadyInPortfolio: anAccount
	(accountAndPortfolioList includes: anAccount)  ifTrue:
	 [self error: self class cantAddAccountAlreadyInPortfolioErrorDescription ]
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 15:00:44' prior: 50886582!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	accountAndPortfolioList do: [:anAccountOrPortfolio | transactions  addAll: (anAccountOrPortfolio transactions)].
	^transactions .
	! !
!Portfolio methodsFor: 'value' stamp: 'sc 5/23/2021 15:01:31' prior: 50885904!
balance
	|balance|
	balance := accountAndPortfolioList sum:[:anAccountOrPortfolio| anAccountOrPortfolio balance] ifEmpty: [0].
	^balance! !
!Portfolio methodsFor: 'transacciones' stamp: 'sc 5/23/2021 15:01:51' prior: 50886026!
hasRegistered: aDeposit 
	^ (accountAndPortfolioList anySatisfy: [:anAccountOrPotfolio| anAccountOrPotfolio hasRegistered: aDeposit]) .! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:03:45'!
sharesAccountOrPortfolioWith: aPortfolio
	^ accountAndPortfolioList anySatisfy:
	 [:anAccountOrPortfolio| (anAccountOrPortfolio accountList includes: anAccountOrPortfolio )]! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:04:40' prior: 50887647!
sharesAccountWith: aPortfolio
	^ accountAndPortfolioList anySatisfy:
	 [:anAccount| (anAccount accountList includes: anAccount )]! !
!Portfolio methodsFor: 'accesing' stamp: 'sc 5/23/2021 15:07:36' prior: 50887005!
accountList
	|accountList|
	accountList := accountAndPortfolioList select:
	[:accountOrPortfolio| accountOrPortfolio class = ReceptiveAccount ]! !
!Portfolio methodsFor: 'accesing' stamp: 'sc 5/23/2021 15:07:54' prior: 50890957!
accountList
	|accountList|
	accountList := accountAndPortfolioList select:
	[:accountOrPortfolio| accountOrPortfolio class = ReceptiveAccount ].
	^accountList .! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:12:26' prior: 50890950!
sharesAccountWith: aPortfolio
	^ accountAndPortfolioList anySatisfy:
	 [:anAccountOrPortfolio| (aPortfolio accountList includes: anAccountOrPortfolio )]! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 15:13:10' prior: 50889453!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAncestor: aPortfolio.
	aPortfolio addFather: self.
	accountAndPortfolioList add: aPortfolio.
	! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:15:06'!
ERROR!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:15:49'!
ERROR!
!Portfolio methodsFor: 'value' stamp: 'sc 5/23/2021 15:17:56' prior: 50889420 overrides: 16896425!
initialize
	accountAndPortfolioList := OrderedCollection new.! !

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 15:18:01'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:18:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 15:18:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 15:18:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 15:18:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 15:18:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:18:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:18:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:18:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 15:18:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 15:18:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 15:18:02'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 15:18:02'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 15:18:02'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 15:18:02'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 15:18:02'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:18:02'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:20:32'!
sharesAntecesorWith: aPortfolio
	"
	aPortfolio myRootsShareDecendenceWith roots."! !
!Portfolio methodsFor: 'private operations' stamp: 'sc 5/23/2021 15:23:52'!
roots
	|portfolioRoots|
	father = nil ifTrue: [^ OrderedCollection  with: self].
	! !
!Portfolio methodsFor: 'private operations' stamp: 'sc 5/23/2021 15:26:34' prior: 50891080!
roots 
	|portfolioRoot|
	father = nil ifTrue: [^self].
	^father roots.
	
	
	! !
!Portfolio methodsFor: 'private operations' stamp: 'sc 5/23/2021 15:26:39' prior: 50891086!
roots 
	father = nil ifTrue: [^self].
	^father roots.
	
	
	! !
!Portfolio methodsFor: 'private operations' stamp: 'sc 5/23/2021 15:28:04' prior: 50891092!
roots 
	father = nil ifTrue: [^self].
	^father roots.
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:29:20' prior: 50891074!
sharesAntecesorWith: aPortfolio

	aPortfolio myRootsShareDecendenceWith roots.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:30:17'!
myRootsShareDecendenceWith: rootPortfolio
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:31:09' prior: 50891107!
myRootsShareDecendenceWith: portfolioRoot
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:32:13' prior: 50891111!
myRootsShareDecendenceWith: portfolioRoot
	self roots sharesPortfolioWith: portfolioRoot.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:35:22' prior: 50891115!
myRootsShareDecendenceWith: portfolioRoot
	self roots sharesPortfolioOrAccountWith: portfolioRoot.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:36:39' prior: 50891102!
sharesAntecesorWith: aPortfolio

	aPortfolio myRootsShareDecendenceWith: self roots.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:37:17' prior: 50890941!
sharesAccountOrPortfolioWith: aPortfolio! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:37:31' prior: 50891121!
myRootsShareDecendenceWith: portfolioRoot
	self roots sharesAccountOrPortfolioWith: portfolioRoot.! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:39:22' prior: 50891133!
sharesAccountOrPortfolioWith: aPortfolio
	^ accountAndPortfolioList  anySatisfy:[:aPortfolioOrAccount| aPortfolio includes: aPortfolioOrAccount]! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:41:08'!
includes: aPortfolioOrAccount
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:46:15' prior: 50891150!
includes: aPortfolioElementToFind
	^ (accountAndPortfolioList includes: aPortfolioElementToFind) or:
	   (accountAndPortfolioList anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aPortfolioElementToFind ])
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:47:36' prior: 50891154!
includes: aPortfolioElementToFind
	^ (accountAndPortfolioList includes: aPortfolioElementToFind) or:
	   (accountAndPortfolioList anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aPortfolioElementToFind])
	
	! !
!AccountTransaction methodsFor: 'nil' stamp: 'sc 5/23/2021 15:49:45'!
includes: aPortfolioOAccount
	^ self == aPortfolioOAccount.! !
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 15:51:26' prior: 50890697!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	(aPortfolio sharesAntecesorWith: self)	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:51:32'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:52:22' prior: 50891127!
sharesAntecesorWith: aPortfolio

	^aPortfolio myRootsShareDecendenceWith: self roots.! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:52:36'!
ERROR!
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 15:53:03' prior: 50891174!
includes: aPortfolioOAccount
	^ (self == aPortfolioOAccount).! !
!Portfolio methodsFor: 'private operations' stamp: 'sc 5/23/2021 15:54:15' prior: 50891097!
roots 
	(father = nil) ifTrue: [^self].
	^father roots.
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 15:54:53' prior: 50891137!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots sharesAccountOrPortfolioWith: portfolioRoot.! !

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 15:54:59'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:55:00'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 15:55:06'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 15:55:07'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:55:07'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 15:56:21'!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:56:21'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:56:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 15:56:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 15:56:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 15:56:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 15:56:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:56:22'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:56:22'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 15:57:56'!
test17NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 15:58:08'!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !

!methodRemoval: PortfolioTest #test17NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 15:58:08'!
test17NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 15:59:52' prior: 50891465!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 hijo1 hijo2 | "abuelo es tambien padre de aAgregar"
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	padre1 addPortfolio: hijo1.
	padre2 addPortfolio: hijo1.
	padre1 addPortfolio: hijo2.
		
	self should: [hijo1 addPortfolio: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 15:59:57'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 15:59:57'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:00:38' prior: 50891507!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 hijo1 hijo2 | "abuelo es tambien padre de aAgregar"
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	padre1 addPortfolio: hijo1.
	padre2 addPortfolio: hijo1.
	padre1 addPortfolio: hijo2.
		
	self should: [hijo2 addPortfolio: hijo1]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 16:00:38'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:00:38'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:00:59' prior: 50891603!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 hijo1 hijo2 | "abuelo es tambien padre de aAgregar"
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	padre1 addPortfolio: hijo1.
	padre2 addPortfolio: hijo1.
	padre1 addPortfolio: hijo2.
		
	self should: [hijo1 addPortfolio: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !

hijo1!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:03:30'!
PASSED!
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 16:04:16' prior: 50890981!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	self halt.
	self raiseErrorIfPortfolioHasSharedAncestor: aPortfolio.
	aPortfolio addFather: self.
	accountAndPortfolioList add: aPortfolio.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:24:10' prior: 50891699!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 | "abuelo es tambien padre de aAgregar"
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	padre1 addPortfolio: hijo1. 
	padre1 addPortfolio: hijo2.
	padre3 addPortfolio: hijo1.
	padre2 addPortfolio: hijo2.
		
	self should: [hijo1 addPortfolio: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 16:24:40' prior: 50891723!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAncestor: aPortfolio.
	aPortfolio addFather: self.
	accountAndPortfolioList add: aPortfolio.
	! !

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:24:46'!
FAILURE!
!Portfolio methodsFor: 'value' stamp: 'sc 5/23/2021 16:25:30' prior: 50891002 overrides: 16896425!
initialize
	accountAndPortfolioList := OrderedCollection new.
	father := OrderedCollection  new.! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 16:25:50' prior: 50889435!
addFather: aPortfolio
	father add: aPortfolio.
	! !

!methodRemoval: Portfolio #isMyFather: stamp: 'sc 5/23/2021 16:26:03'!
isMyFather: aPortfolio
	^(aPortfolio = father) and: (father ~= nil).!

!methodRemoval: Portfolio #isMyGrandfather: stamp: 'sc 5/23/2021 16:26:05'!
isMyGrandfather: aPortfolio
	(father ~= nil) ifTrue:[^ father isMyFather: aPortfolio].
	^false. !
!Portfolio methodsFor: 'private operations' stamp: 'sc 5/23/2021 16:31:47' prior: 50891208!
roots
	|rootsList|
	rootsList := OrderedCollection new.
	father do: [:aFather| rootsList addAll: aFather roots].
	(father isEmpty) ifTrue: [rootsList add: self].
	^rootsList.
	
	! !

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:32:43'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 16:34:32' prior: 50891213!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| aRoot sharesAccountOrPortfolioWith: portfolioRoot.]! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 16:36:47' prior: 50891192!
sharesAntecesorWith: aPortfolio

	^ self roots anySatisfy: 	[:aRoot| aPortfolio myRootsShareDecendenceWith: aRoot.]! !

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/23/2021 16:36:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:36:56'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 16:37:11'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 16:37:11'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:38:13' prior: 50891735!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 |
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	padre1 addPortfolio: hijo1. 
	padre1 addPortfolio: hijo2.
	padre3 addPortfolio: hijo1.
	padre2 addPortfolio: hijo2.
		
	self should: [hijo1 addPortfolio: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:38:22' prior: 50891353!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar |
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:38:29' prior: 50892096!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo addPortfolio: padre.
	padre addPortfolio: hijo.
	abuelo addPortfolio: aAgregar.
	
	self should: [hijo addPortfolio: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/23/2021 16:44:19'!
Object subclass: #Portfolio
	instanceVariableNames: 'portfolioElements father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:19' prior: 50890900!
addAccount: aReceptiveAccount
	self raiseErrorIfAccountAlreadyInPortfolio: aReceptiveAccount.
	portfolioElements add: aReceptiveAccount .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:19' prior: 50890917!
transactions
	|transactions|
	transactions := OrderedCollection  new.
	portfolioElements do: [:anAccountOrPortfolio | transactions  addAll: (anAccountOrPortfolio transactions)].
	^transactions .
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:19' prior: 50891757!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAncestor: aPortfolio.
	aPortfolio addFather: self.
	portfolioElements add: aPortfolio.
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:19' prior: 50890908!
raiseErrorIfAccountAlreadyInPortfolio: anAccount
	(portfolioElements includes: anAccount)  ifTrue:
	 [self error: self class cantAddAccountAlreadyInPortfolioErrorDescription ]
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:19' prior: 50890973!
sharesAccountWith: aPortfolio
	^ portfolioElements anySatisfy:
	 [:anAccountOrPortfolio| (aPortfolio accountList includes: anAccountOrPortfolio )]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:19' prior: 50890926!
balance
	|balance|
	balance := portfolioElements sum:[:anAccountOrPortfolio| anAccountOrPortfolio balance] ifEmpty: [0].
	^balance! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:20' prior: 50891773 overrides: 16896425!
initialize
	portfolioElements := OrderedCollection new.
	father := OrderedCollection  new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:20' prior: 50891143!
sharesAccountOrPortfolioWith: aPortfolio
	^ portfolioElements  anySatisfy:[:aPortfolioOrAccount| aPortfolio includes: aPortfolioOrAccount]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:20' prior: 50891164!
includes: aPortfolioElementToFind
	^ (portfolioElements includes: aPortfolioElementToFind) or:
	   (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aPortfolioElementToFind])
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:20' prior: 50890934!
hasRegistered: aDeposit 
	^ (portfolioElements anySatisfy: [:anAccountOrPotfolio| anAccountOrPotfolio hasRegistered: aDeposit]) .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:44:20' prior: 50890965!
accountList
	|accountList|
	accountList := portfolioElements select:
	[:accountOrPortfolio| accountOrPortfolio class = ReceptiveAccount ].
	^accountList .! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 16:52:48'!
add: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAncestor: aPortfolio.
	aPortfolio addFather: self.
	portfolioElements add: aPortfolio.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50886000!
test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account .
	portfolio1 add: portfolio2.
	self assert: (portfolio1 hasRegistered: deposito). 
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50886637!
test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account.
	portfolio1 add: portfolio2.
	self assert: portfolio1 transactions equals: account transactions.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50889345!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	
	portfolio1 add: portfolio2.
	portfolio1 add: portfolio3.
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50890799!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo receptor | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	receptor := Portfolio new.
	
	abuelo add: padre.
	padre add: hijo.
	abuelo add: receptor.
	
	self should: [receptor add: hijo]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50892075!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 |
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	padre1 add: hijo1. 
	padre1 add: hijo2.
	padre3 add: hijo1.
	padre2 add: hijo2.
		
	self should: [hijo1 add: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50885918!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 addAccount: account .
	portfolio1 add: portfolio2.
	self assert: portfolio1  balance equals: 100.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50886889!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio add: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioToItselfErrorDescription  ].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50889310!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 addAccount: account.
	portfolio2 addAccount: account.
	self should: [portfolio1 add: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50885726!
test06PortfolioConUnPortfolioVacioTieneBalance0
	"Aca vamos a meter un portfolio en una lista nueva en vez de usar  la misma, para no apurarnos"
	|portfolio1 portfolio2|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio1 add: portfolio2.
	self assert: portfolio1  balance equals: 0.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 16:52:48' prior: 50892115!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo add: padre.
	padre add: hijo.
	abuelo add: aAgregar.
	
	self should: [hijo add: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPortfolioToPortfolioWithSharedAncestor].
		
	! !

!methodRemoval: Portfolio #addPortfolio: stamp: 'sc 5/23/2021 16:52:48'!
addPortfolio: aPortfolio
	self raiseErrorIfPortfolioIsSelf: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAccount: aPortfolio.
	self raiseErrorIfPortfolioHasSharedAncestor: aPortfolio.
	aPortfolio addFather: self.
	portfolioElements add: aPortfolio.
	!
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 16:57:44' prior: 50892237!
add: anElement
	self raiseErrorIfPortfolioIsSelf: anElement.
	self raiseErrorIfPortfolioHasSharedAccount: anElement.
	self raiseErrorIfPortfolioHasSharedAncestor: anElement.
	(anElement class = Portfolio )ifTrue:[anElement addFather: self].
	"Dejamos este if ya que no le encontramos sentido a agregar un mensaje de addFather a los accounts"
	portfolioElements add: anElement.
	! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 16:58:25' prior: 50892421!
add: anElement
	self raiseErrorIfPortfolioIsSelf: anElement.
	self raiseErrorIfPortfolioHasSharedAccount: anElement.
	self raiseErrorIfPortfolioHasSharedAncestor: anElement.
	self raiseErrorIfAccountAlreadyInPortfolio: anElement.
	(anElement class = Portfolio )ifTrue:[anElement addFather: self].
	"Dejamos este if ya que no le encontramos sentido a agregar un mensaje de addFather a los accounts"
	portfolioElements add: anElement.
	! !

!methodRemoval: Portfolio #addAccount: stamp: 'sc 5/23/2021 16:58:29'!
addAccount: aReceptiveAccount
	self raiseErrorIfAccountAlreadyInPortfolio: aReceptiveAccount.
	portfolioElements add: aReceptiveAccount .!
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 17:04:30' prior: 50892436!
add: anElement
	self raiseErrorIfPortfolioIsSelf: anElement.
	self raiseErrorIfPortfolioHasSharedFinancialService: anElement.
	self raiseErrorIfAccountAlreadyInPortfolio: anElement.
	(anElement class = Portfolio )ifTrue:[anElement addFather: self].
	"Dejamos este if ya que no le encontramos sentido a agregar un mensaje de addFather a los accounts"
	portfolioElements add: anElement.
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 17:06:12'!
sharesFinancialServices: aPortfolio

	^ self roots anySatisfy: 	[:aRoot| aPortfolio myRootsShareDecendenceWith: aRoot.]! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 17:06:24'!
sharesFinancialServicesWith: aPortfolio

	^ self roots anySatisfy: 	[:aRoot| aPortfolio myRootsShareDecendenceWith: aRoot.]! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 17:06:43' prior: 50892480!
sharesFinancialServicesWith: aFinancialService

	^ self roots anySatisfy: 	[:aRoot| aFinancialService myRootsShareDecendenceWith: aRoot.]! !

Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'sc 5/23/2021 17:08:40'!
Object subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'sc 5/23/2021 17:09:04' prior: 50884404 overrides: 16896425!
initialize

	father := OrderedCollection new.
	transactions := OrderedCollection new.! !

Object subclass: #FinancialService
	instanceVariableNames: 'father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialService category: 'Portfolio-Ejercicio' stamp: 'sc 5/23/2021 17:10:41'!
Object subclass: #FinancialService
	instanceVariableNames: 'father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialService subclass: #Portfolio
	instanceVariableNames: 'portfolioElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'sc 5/23/2021 17:11:10'!
FinancialService subclass: #Portfolio
	instanceVariableNames: 'portfolioElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialService subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions father'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialService subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'sc 5/23/2021 17:11:40'!
FinancialService subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialService methodsFor: 'nil' stamp: 'sc 5/23/2021 17:13:18'!
hasRegistered! !
!FinancialService methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:13:45'!
hasRegistered: aTransaction
	self subclassResponsibility.! !

!methodRemoval: FinancialService #hasRegistered stamp: 'sc 5/23/2021 17:13:50'!
hasRegistered!
!FinancialService methodsFor: 'balance' stamp: 'sc 5/23/2021 17:15:25'!
balance
	self subclassResponsibility.! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/23/2021 17:16:37'!
addFather: aPortfolio
	father add: aPortfolio.! !

!methodRemoval: Portfolio #addFather: stamp: 'sc 5/23/2021 17:17:02'!
addFather: aPortfolio
	father add: aPortfolio.
	!
!FinancialService methodsFor: 'testing' stamp: 'sc 5/23/2021 17:18:45'!
roots
	|rootsList|
	rootsList := OrderedCollection new.
	father do: [:aFather| rootsList addAll: aFather roots].
	(father isEmpty) ifTrue: [rootsList add: self].
	^rootsList.! !

!methodRemoval: Portfolio #sharesFinancialServices: stamp: 'sc 5/23/2021 17:21:26'!
sharesFinancialServices: aPortfolio

	^ self roots anySatisfy: 	[:aRoot| aPortfolio myRootsShareDecendenceWith: aRoot.]!

!methodRemoval: Portfolio #sharesAntecesorWith: stamp: 'sc 5/23/2021 17:21:39'!
sharesAntecesorWith: aPortfolio

	^ self roots anySatisfy: 	[:aRoot| aPortfolio myRootsShareDecendenceWith: aRoot.]!

!methodRemoval: Portfolio #sharesAccountOrPortfolioWith: stamp: 'sc 5/23/2021 17:22:00'!
sharesAccountOrPortfolioWith: aPortfolio
	^ portfolioElements  anySatisfy:[:aPortfolioOrAccount| aPortfolio includes: aPortfolioOrAccount]!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 17:22:14' prior: 50891807!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| aRoot sharesFinancialServicesWith: portfolioRoot.]! !

!methodRemoval: Portfolio #sharesAccountWith: stamp: 'sc 5/23/2021 17:22:44'!
sharesAccountWith: aPortfolio
	^ portfolioElements anySatisfy:
	 [:anAccountOrPortfolio| (aPortfolio accountList includes: anAccountOrPortfolio )]!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 17:23:39' prior: 50892211!
includes: aFinancialElementToFind
	^ (portfolioElements includes: aFinancialElementToFind) or:
	   (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialElementToFind])
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 17:24:28' prior: 50892625!
includes: aFinancialServiceToFind
	^ (portfolioElements includes: aFinancialServiceToFind) or:
	   (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialServiceToFind])
	
	! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/23/2021 17:24:55'!
sharesFinancialServicesWith: aFinancialService

	^ self roots anySatisfy: 	[:aRoot| aFinancialService myRootsShareDecendenceWith: aRoot.]! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/23/2021 17:25:07'!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| aRoot sharesFinancialServicesWith: portfolioRoot.]! !

!methodRemoval: Portfolio #sharesFinancialServicesWith: stamp: 'sc 5/23/2021 17:25:12'!
sharesFinancialServicesWith: aFinancialService

	^ self roots anySatisfy: 	[:aRoot| aFinancialService myRootsShareDecendenceWith: aRoot.]!

!methodRemoval: Portfolio #myRootsShareDecendenceWith: stamp: 'sc 5/23/2021 17:25:15'!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| aRoot sharesFinancialServicesWith: portfolioRoot.]!
!Portfolio methodsFor: 'operations' stamp: 'sc 5/23/2021 17:27:13' prior: 50892459!
add: anElement
	"self raiseErrorIfPortfolioIsSelf: anElement."
	self raiseErrorIfPortfolioHasSharedFinancialService: anElement.
	"self raiseErrorIfAccountAlreadyInPortfolio: anElement."
	anElement addFather: self.
	portfolioElements add: anElement.
	! !
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 17:28:21' prior: 50891179!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	(aPortfolio sharesFinancialServicesWith: self)	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	! !
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 17:28:50'!
raiseErrorIfPortfolioHasSharedFinancialService: aPortfolio
	(aPortfolio sharesFinancialServicesWith: self)	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	! !

!methodRemoval: Portfolio #raiseErrorIfPortfolioHasSharedAncestor: stamp: 'sc 5/23/2021 17:28:50'!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	(aPortfolio sharesFinancialServicesWith: self)	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	!
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 17:29:03'!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	(aPortfolio sharesFinancialServicesWith: self)	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	! !

!methodRemoval: Portfolio #raiseErrorIfPortfolioHasSharedAncestor: stamp: 'sc 5/23/2021 17:29:11'!
raiseErrorIfPortfolioHasSharedAncestor: aPortfolio
	(aPortfolio sharesFinancialServicesWith: self)	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	!

!methodRemoval: Portfolio #raiseErrorIfPortfolioHasSharedAccount: stamp: 'sc 5/23/2021 17:29:15'!
raiseErrorIfPortfolioHasSharedAccount: aPortfolio
	(aPortfolio sharesAccountWith: self) ifTrue: [self error: self class cantAddPorfolioWithSharedAccount]
	!

!methodRemoval: Portfolio #raiseErrorIfPortfolioIsSelf: stamp: 'sc 5/23/2021 17:29:17'!
raiseErrorIfPortfolioIsSelf: aPortfolio
	(aPortfolio == self)  ifTrue:
	 [self error: self class cantAddPorfolioToItselfErrorDescription]
	!

!methodRemoval: Portfolio #raiseErrorIfAccountAlreadyInPortfolio: stamp: 'sc 5/23/2021 17:29:24'!
raiseErrorIfAccountAlreadyInPortfolio: anAccount
	(portfolioElements includes: anAccount)  ifTrue:
	 [self error: self class cantAddAccountAlreadyInPortfolioErrorDescription ]
	!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:31:35'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:31:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:31:36'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 17:31:36'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 17:31:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 17:31:36'!
ERROR!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:31:43'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:31:46'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:31:46'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:31:50'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:31:50'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50885075!
test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma
	|portfolio account|
	portfolio  := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	portfolio add: account.
	self assert: portfolio balance equals: 100.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50892335!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 add: account .
	portfolio1 add: portfolio2.
	self assert: portfolio1  balance equals: 100.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50885240!
test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas
	|portfolio account1 account2|
	portfolio  := Portfolio new.
	account1 := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	Deposit register: 100 on: account1.
	Deposit register: 50 on: account2.
	portfolio add: account1.
	portfolio add: account2.
	self assert: portfolio balance equals: 150.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50892263!
test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 add: account.
	portfolio1 add: portfolio2.
	self assert: portfolio1 transactions equals: account transactions.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50892248!
test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio2 add: account .
	portfolio1 add: portfolio2.
	self assert: (portfolio1 hasRegistered: deposito). 
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50886652!
test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene
	|portfolio  account|
	portfolio := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio add: account .
	self should: [portfolio add: account.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddAccountAlreadyInPortfolioErrorDescription].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50885611!
test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio add: account .
	self assert: (portfolio hasRegistered: deposito).
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50892362!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 add: account.
	portfolio2 add: account.
	self should: [portfolio1 add: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddPorfolioWithSharedAccount].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:32:21' prior: 50886218!
test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion
	|portfolio1 account deposito|
	portfolio1 := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	portfolio1 add: account .
	self assert: portfolio1 transactions equals: account transactions.
	
	
	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/23/2021 17:34:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'sc 5/23/2021 17:34:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'sc 5/23/2021 17:34:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'sc 5/23/2021 17:34:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'sc 5/23/2021 17:34:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'sc 5/23/2021 17:34:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'sc 5/23/2021 17:34:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'sc 5/23/2021 17:34:41'!
PASSED!
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 17:36:58' prior: 50892693!
raiseErrorIfPortfolioHasSharedFinancialService: aFinancialService
	(self sharesFinancialServicesWith: aFinancialService)	
	ifTrue: [self error: self class cantAddPortfolioToPortfolioWithSharedAncestor].
	! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/23/2021 17:43:41' prior: 50892652!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| aRoot includes: portfolioRoot.]! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:43:48'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:43:48'!
ERROR!
!ReceptiveAccount methodsFor: 'testing' stamp: 'sc 5/23/2021 17:45:50'!
includes: aFinancialService
	^aFinancialService = self.! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:45:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 17:46:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 17:46:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 17:46:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 17:46:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 17:46:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 17:46:07'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:46:07'!
FAILURE!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 17:46:07'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 17:46:07'!
FAILURE!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 17:46:07'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:46:07'!
FAILURE!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:46:07'!
FAILURE!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 17:46:07'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:47:24' prior: 50892315!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 |
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	padre1 add: hijo1. 
	padre1 add: hijo2.
	padre3 add: hijo1.
	padre2 add: hijo2.
		
	self should: [hijo1 add: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio  ].
		
	! !
!Portfolio class methodsFor: 'error descriptions' stamp: 'sc 5/23/2021 17:48:48'!
cantAddFinancialServiceToPortfolioWithSharedFinancialService
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas'! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:48:48' prior: 50892392!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo add: padre.
	padre add: hijo.
	abuelo add: aAgregar.
	
	self should: [hijo add: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:48:48' prior: 50892296!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo receptor | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	receptor := Portfolio new.
	
	abuelo add: padre.
	padre add: hijo.
	abuelo add: receptor.
	
	self should: [receptor add: hijo]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:48:48' prior: 50892278!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	
	portfolio1 add: portfolio2.
	portfolio1 add: portfolio3.
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:48:48' prior: 50892955!
raiseErrorIfPortfolioHasSharedFinancialService: aFinancialService
	(self sharesFinancialServicesWith: aFinancialService)	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialService].
	! !

!methodRemoval: Portfolio class #cantAddPortfolioToPortfolioWithSharedAncestor stamp: 'sc 5/23/2021 17:48:48'!
cantAddPortfolioToPortfolioWithSharedAncestor
	^ 'No me vayas a agregar un portfolio de la misma familia capo, ni a patadas'!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 17:48:59'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:49:00'!
FAILURE!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 17:49:00'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 17:49:00'!
FAILURE!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 17:49:00'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:49:00'!
FAILURE!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:49:00'!
FAILURE!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 17:49:00'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:49:23' prior: 50893073!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 |
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	padre1 add: hijo1. 
	padre1 add: hijo2.
	padre3 add: hijo1.
	padre2 add: hijo2.
		
	self should: [hijo1 add: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:49:35' prior: 50892895!
test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio1 add: account.
	portfolio2 add: account.
	self should: [portfolio1 add: portfolio2 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:49:40' prior: 50892350!
test13NoSePuedeMeterUnPortfolioEnSiMismo
	|portfolio |
	portfolio := Portfolio new.
	self should: [portfolio add: portfolio.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService  ].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:49:44' prior: 50892868!
test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene
	|portfolio  account|
	portfolio := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio add: account .
	self should: [portfolio add: account.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 17:49:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 17:49:52'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:49:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:49:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 17:49:53'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:49:53'!
FAILURE!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 17:49:53'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 17:49:53'!
FAILURE!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 17:49:53'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:49:53'!
FAILURE!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:49:53'!
FAILURE!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 17:49:53'!
FAILURE!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:50:05'!
FAILURE!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:50:33'!
FAILURE!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:50:40'!
FAILURE!
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 17:51:38' prior: 50893157!
raiseErrorIfPortfolioHasSharedFinancialService: aFinancialService
	(self sharesFinancialServicesWith: aFinancialService)	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
	! !

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:51:49'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/23/2021 17:52:03' prior: 50893301!
test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene
	|portfolio  account|
	portfolio := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio add: account .
	portfolio  add: account .
	self should: [portfolio add: account.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:52:03'!
FAILURE!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:53:01'!
FAILURE!
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 17:58:00' prior: 50893408!
raiseErrorIfPortfolioHasSharedFinancialService: aFinancialService
	(aFinancialService sharesFinancialServicesWith: self)	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
	! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 17:58:09'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:58:10'!
FAILURE!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 17:58:10'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 17:58:10'!
FAILURE!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 17:58:10'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:58:10'!
FAILURE!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 17:58:10'!
FAILURE!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 17:58:10'!
FAILURE!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 17:58:19'!
FAILURE!
!Portfolio methodsFor: 'error handling' stamp: 'sc 5/23/2021 17:59:17' prior: 50893446!
raiseErrorIfPortfolioHasSharedFinancialService: aFinancialService
	(self sharesFinancialServicesWith: aFinancialService )	
	ifTrue: [self error: self class cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/23/2021 18:04:56' prior: 50892635!
includes: aFinancialServiceToFind
	^ (portfolioElements includes: aFinancialServiceToFind) or:
	 self = aFinancialServiceToFind  or:
	  (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialServiceToFind])
	
	! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 18:07:28'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 18:07:28'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/23/2021 18:07:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/23/2021 18:07:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/23/2021 18:07:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/23/2021 18:07:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/23/2021 18:07:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/23/2021 18:07:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/23/2021 18:07:29'!
ERROR!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/23/2021 18:07:29'!
FAILURE!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/23/2021 18:07:29'!
PASSED!

----SNAPSHOT----(23 May 2021 18:10:31) CuisUniversity-4532.image priorSource: 17800354!

----SNAPSHOT----(23 May 2021 18:10:44) CuisUniversity-4532.image priorSource: 17983401!

----STARTUP---- (24 May 2021 14:36:49) as C:\Users\Santiago\Desktop\Uba\Inge 2\Programa\windows64\CuisUniversity-4532.image!

!Portfolio methodsFor: 'testing' stamp: 'sc 5/24/2021 14:43:02' prior: 50893546!
includes: aFinancialServiceToFind
	 self = aFinancialServiceToFind  or:
	  (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialServiceToFind])
	
	! !

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 14:43:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 14:43:12'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 14:43:12'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 14:43:13'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 14:43:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 14:43:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 14:43:13'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 14:43:13'!
ERROR!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 14:43:13'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 14:43:13'!
ERROR!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 14:43:13'!
ERROR!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 14:43:13'!
ERROR!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 14:43:13'!
ERROR!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 14:43:13'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/24/2021 14:43:02' prior: 50893642!
includes: aFinancialServiceToFind
	 self = aFinancialServiceToFind  or:
	  (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialServiceToFind])
	
	! !
!Portfolio methodsFor: 'testing' stamp: 'sc 5/24/2021 14:47:45' prior: 50893726!
includes: aFinancialServiceToFind
	^ (portfolioElements includes: aFinancialServiceToFind) or:
	 self = aFinancialServiceToFind  or:
	  (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialServiceToFind])
	
	! !

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 14:47:50'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 14:47:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 14:47:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 14:47:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 14:47:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 14:47:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 14:47:51'!
ERROR!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 14:47:51'!
FAILURE!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 14:47:51'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 14:47:51'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 14:48:01' prior: 50893422!
test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene
	|portfolio  account|
	portfolio := Portfolio new.
	account  := ReceptiveAccount new.
	portfolio add: account .
	self should: [portfolio add: account.]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 14:48:02'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 14:48:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 14:48:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 14:48:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 14:48:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 14:48:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 14:48:03'!
FAILURE!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 14:48:03'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 14:48:03'!
FAILURE!
!Portfolio methodsFor: 'operations' stamp: 'sc 5/24/2021 15:08:50'!
sharesDescendenceWith: aPortfolioRoot
	portfolioElements anySatisfy: [:AFinancialService| aPortfolioRoot includes: AFinancialService].! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/24/2021 15:09:32' prior: 50892965!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| aRoot sharesDescendenceWith: portfolioRoot.]! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/24/2021 15:09:41' prior: 50893916!
sharesDescendenceWith: aPortfolioRoot
	^portfolioElements anySatisfy: [:AFinancialService| aPortfolioRoot includes: AFinancialService].! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:09:47'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:09:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:09:47'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:09:47'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:09:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:09:47'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:09:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:09:47'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:09:47'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:09:48'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:09:48'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:09:48'!
ERROR!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:09:48'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:09:48'!
ERROR!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:09:48'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:09:48'!
PASSED!
!ReceptiveAccount methodsFor: 'operations' stamp: 'sc 5/24/2021 15:14:46' overrides: 50892583!
roots
	|rootsList|
	rootsList := OrderedCollection new.
	father do: [:aFather| rootsList addAll: aFather roots].
	^rootsList.! !
!Portfolio methodsFor: 'private operations' stamp: 'sc 5/24/2021 15:15:05' prior: 50891794 overrides: 50892583!
roots
	|rootsList|
	rootsList := OrderedCollection new.
	father do: [:aFather| rootsList addAll: aFather roots].
	(father isEmpty) ifTrue: [rootsList add: self].
	^rootsList.! !
!FinancialService methodsFor: 'private operations' stamp: 'sc 5/24/2021 15:15:22' prior: 50892583!
roots
	self subclassResponsibility ! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:15:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:15:27'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:15:27'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:15:27'!
FAILURE!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:15:27'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:15:27'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:15:27'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:15:27'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:15:27'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:15:27'!
FAILURE!
!FinancialService methodsFor: 'testing' stamp: 'sc 5/24/2021 15:18:25' prior: 50893924!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| (aRoot sharesDescendenceWith: portfolioRoot) or: portfolioRoot = aRoot.]! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/24/2021 15:19:02' prior: 50894114!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| (aRoot sharesDescendenceWith: portfolioRoot) or: portfolioRoot = aRoot.]
	"Dos roots compartend descendencia si son iguales o si algunos de sus descendientes son iguales"! !

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:19:08'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:19:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:19:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:19:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:19:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:19:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:22:02'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:22:02'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/24/2021 15:22:59' prior: 50893735!
includes: aFinancialServiceToFind
	 self = aFinancialServiceToFind  or:
	  (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialServiceToFind])
	
	! !

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:23:03'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:23:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:23:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:23:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:23:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:23:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:23:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:23:03'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:23:04'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:23:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:23:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:23:04'!
ERROR!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:23:04'!
FAILURE!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:23:04'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:23:04'!
ERROR!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:23:04'!
FAILURE!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:23:04'!
FAILURE!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:23:04'!
FAILURE!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:23:04'!
ERROR!
!Portfolio methodsFor: 'testing' stamp: 'sc 5/24/2021 15:23:15' prior: 50894284!
includes: aFinancialServiceToFind
	 ^self = aFinancialServiceToFind  or:
	  (portfolioElements anySatisfy:
					 [:aPortfolioOrAccount | aPortfolioOrAccount includes: aFinancialServiceToFind])
	
	! !

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:23:20'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:23:20'!
PASSED!
!FinancialService methodsFor: 'testing' stamp: 'sc 5/24/2021 15:24:39' prior: 50894122!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| (aRoot sharesDescendenceWith: portfolioRoot) or: portfolioRoot = aRoot.]
	"Dos roots compartend descendencia si son iguales o si algunos de sus descendientes son iguales"! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/24/2021 15:41:00' prior: 50892645!
sharesFinancialServicesWith: aFinancialService
	
	^ self roots anySatisfy: 	[:aRoot| aFinancialService myRootsShareDecendenceWith: aRoot.]! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/24/2021 15:41:39' prior: 50894453!
myRootsShareDecendenceWith: portfolioRoot
	^ self roots anySatisfy:[:aRoot| aRoot sharesDescendenceWith: portfolioRoot.]
	"Dos roots compartend descendencia si son iguales o si algunos de sus descendientes son iguales"! !
!Portfolio methodsFor: 'operations' stamp: 'sc 5/24/2021 15:43:05' prior: 50893931!
sharesDescendenceWith: aPortfolioRoot
	^ (aPortfolioRoot includes: self) or:  (portfolioElements anySatisfy: [:AFinancialService| aPortfolioRoot includes: AFinancialService]).! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:43:10'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:43:11'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:43:11'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:43:11'!
PASSED!
!Portfolio methodsFor: 'operations' stamp: 'sc 5/24/2021 15:53:47' prior: 50894482!
sharesDescendenceWith: aPortfolioRoot
	^ (aPortfolioRoot includes: self) or:  (portfolioElements anySatisfy: [:AFinancialService| aPortfolioRoot sharesDescendenceWith: AFinancialService]).! !
!ReceptiveAccount methodsFor: 'operations' stamp: 'sc 5/24/2021 15:54:04'!
sharesDescendenceWith: aPortfolioRoot
	^ (aPortfolioRoot includes: self)! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:54:08'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:54:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:54:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:54:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:54:09'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:54:09'!
PASSED!
!FinancialService methodsFor: 'operations' stamp: 'sc 5/24/2021 15:54:59'!
sharesDescendenceWith: aPortfolioRoot
	self subclassResponsibility ! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:55:03'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:55:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:57:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 15:57:51'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 15:57:52'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 15:57:52'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 15:57:52'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 15:57:52'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:57:52'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 15:57:52'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 15:57:52'!
PASSED!

!methodRemoval: Portfolio #accountList stamp: 'sc 5/24/2021 15:59:43'!
accountList
	|accountList|
	accountList := portfolioElements select:
	[:accountOrPortfolio| accountOrPortfolio class = ReceptiveAccount ].
	^accountList .!
!FinancialService methodsFor: 'initialice' stamp: 'sc 5/24/2021 16:00:33' overrides: 16896425!
initialize
	self subclassResponsibility ! !

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:00:45'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:00:46'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:00:46'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:00:46'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:00:46'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:00:46'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:00:46'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:00:46'!
PASSED!
!ReceptiveAccount methodsFor: 'testing' stamp: 'sc 5/24/2021 16:01:38' prior: 50884424 overrides: 50892563!
hasRegistered: aTransaction
	^ transactions includes: aTransaction 
! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:02:15'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:02:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:02:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:02:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:02:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:02:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:02:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:02:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:02:16'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:02:16'!
PASSED!
!Portfolio methodsFor: 'operations' stamp: 'sc 5/24/2021 16:04:00' prior: 50892673!
add: anElement
	self raiseErrorIfPortfolioHasSharedFinancialService: anElement.
	anElement addFather: self.
	portfolioElements add: anElement.
	! !
!FinancialService methodsFor: 'testing' stamp: 'sc 5/24/2021 16:06:06' prior: 50894464!
sharesFinancialServicesWith: aFinancialService
	^ self roots anySatisfy: 	[:aRoot| aFinancialService myRootsShareDecendenceWith: aRoot.]! !

!methodRemoval: Portfolio class #cantAddAccountAlreadyInPortfolioErrorDescription stamp: 'sc 5/24/2021 16:06:53'!
cantAddAccountAlreadyInPortfolioErrorDescription
	^ 'pero amego, como va a agregar un account que ya ten�'!

!methodRemoval: Portfolio class #cantAddPorfolioToItselfErrorDescription stamp: 'sc 5/24/2021 16:07:02'!
cantAddPorfolioToItselfErrorDescription
	^ 'pero amego, como va a meter un portfolio en si mismo'!

!methodRemoval: Portfolio class #cantAddPorfolioWithSharedAccount stamp: 'sc 5/24/2021 16:07:09'!
cantAddPorfolioWithSharedAccount
	^ 'mir� si te vamo a deja agregar un porfolio con una cuenta compartida mi rey'!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:07:16'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:07:17'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:07:17'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:07:17'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:11:46'!
createAccountWithDeposits: depositList
	|account|
	account := ReceptiveAccount new.
	depositList do:[:aDepositValue| Deposit register: aDepositValue on: account].
	^account ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:12:54' prior: 50892796!
test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma
	|portfolio account|
	portfolio  := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	account := self createAccountWithDeposits: (OrderedCollection with: 100).
	portfolio add: account.
	self assert: portfolio balance equals: 100.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:13:07' prior: 50895105!
test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma
	|portfolio account|
	portfolio  := Portfolio new.	
	account := self createAccountWithDeposits: (OrderedCollection with: 100).
	portfolio add: account.
	self assert: portfolio balance equals: 100.
	! !

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:13:07'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:13:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:13:56' prior: 50892823!
test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas
	|portfolio account1 account2|
	portfolio  := Portfolio new.	
	account1 := self createAccountWithDeposits: (OrderedCollection with: 100).
	account2 := self createAccountWithDeposits: (OrderedCollection with: 50).
	
	portfolio add: account1.
	portfolio add: account2.
	self assert: portfolio balance equals: 150.
	! !

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:13:56'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:13:56'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:13:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:13:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:13:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:13:57'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:13:57'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:14:34' prior: 50885536!
test04PortfolioVacioNoTieneTransaccionesRegistradas
	|portfolio deposito account|
	portfolio  := Portfolio new.
	account  := ReceptiveAccount new.
	deposito := Deposit register: 100 on: account.
	self deny: (portfolio hasRegistered: deposito).
	! !

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:14:36'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:14:37'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:14:37'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:14:37'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:15:13' prior: 50892808!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account := self createAccountWithDeposits: (OrderedCollection with: 100).
	portfolio2 add: account .
	portfolio1 add: portfolio2.
	self assert: portfolio1  balance equals: 100.
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:15:22' prior: 50895384!
test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account := self createAccountWithDeposits: (OrderedCollection with: 100).
	portfolio2 add: account .
	portfolio1 add: portfolio2.
	self assert: portfolio1  balance equals: 100.
	
	
	! !

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:15:23'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:15:23'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:15:23'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:15:23'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:15:23'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:15:23'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:15:23'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:15:24'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:15:24'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:15:49' prior: 50892912!
test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion
	|portfolio1 account|
	portfolio1 := Portfolio new.
	account := self createAccountWithDeposits: (OrderedCollection with: 100).
	portfolio1 add: account .
	self assert: portfolio1 transactions equals: account transactions.
	
	
	! !

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:15:51'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:15:52'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:15:52'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:16:04' prior: 50892838!
test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma
	|portfolio1 portfolio2 account deposito|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account := self createAccountWithDeposits: (OrderedCollection with: 100).
	portfolio2 add: account.
	portfolio1 add: portfolio2.
	self assert: portfolio1 transactions equals: account transactions.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:16:08' prior: 50895578!
test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma
	|portfolio1 portfolio2 account|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	account := self createAccountWithDeposits: (OrderedCollection with: 100).
	portfolio2 add: account.
	portfolio1 add: portfolio2.
	self assert: portfolio1 transactions equals: account transactions.
	
	! !

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:16:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:16:11'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:16:11'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:16:11'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:16:11'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:16:11'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:16:11'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:16:11'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:16:11'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:16:30' prior: 50893139!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio1 add: portfolio2.
	portfolio1 add: portfolio3.
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:16:36'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:16:36'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:19:41' overrides: 16927572!
setUp! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:22:26'!
addFinancialServices: financialServicesList to: portfolio
	financialServicesList  do:[:aFinancialService|portfolio  add: aFinancialService].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:23:37' prior: 50893250!
test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno
	|padre1 padre2 padre3 hijo1 hijo2 |
	padre1 := Portfolio new.
	padre2 := Portfolio new.
	padre3 := Portfolio new.
	hijo1 := Portfolio new.
	hijo2 := Portfolio new.
	
	self addFinancialServices: (OrderedCollection with: hijo1 with: hijo2) to: padre1. 	
	padre3 add: hijo1.
	padre2 add: hijo2.
		
	self should: [hijo1 add: hijo2]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService ].
		
	! !

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:23:39'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:23:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:23:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:23:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:23:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:23:40'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:23:40'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:24:16' prior: 50893099!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	abuelo add: padre.
	self addFinancialServices: (OrderedCollection with: padre with: aAgregar ) to: abuelo. 	
	padre add: hijo.
	abuelo add: aAgregar.
	
	self should: [hijo add: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:24:25' prior: 50895885!
test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo aAgregar | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	aAgregar := Portfolio new.
	
	self addFinancialServices: (OrderedCollection with: padre with: aAgregar ) to: abuelo. 	
	padre add: hijo.
	
	self should: [hijo add: aAgregar]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:24:42' prior: 50893119!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo receptor | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	receptor := Portfolio new.
	
	abuelo add: padre.
	padre add: hijo.
	abuelo add: receptor.
	self addFinancialServices: (OrderedCollection with: padre with: receptor) to: abuelo. 	
	
	self should: [receptor add: hijo]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:24:49' prior: 50895929!
test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2
	|abuelo padre hijo receptor | "abuelo es tambien padre de aAgregar"
	abuelo := Portfolio new.
	padre := Portfolio new.
	hijo := Portfolio new.
	receptor := Portfolio new.
	
	padre add: hijo.
	self addFinancialServices: (OrderedCollection with: padre with: receptor) to: abuelo. 	
	
	self should: [receptor add: hijo]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:24:57'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:24:58'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:24:58'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:24:58'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:24:58'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:24:58'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:25:37' prior: 50895683!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio1 add: portfolio2.
	portfolio1 add: portfolio3.
	self addFinancialServices: (OrderedCollection with: portfolio2 with: portfolio3 ) to: portfolio1. 
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:25:45'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:25:55' prior: 50896049!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	self addFinancialServices: (OrderedCollection with: portfolio2 with: portfolio3 ) to: portfolio1. 
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:25:55'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:25:56'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:25:56'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:25:56'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:25:56'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:25:56'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'sc 5/24/2021 16:26:01' prior: 50896075!
test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1
	|portfolio1 portfolio2 portfolio3|
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	self addFinancialServices: (OrderedCollection with: portfolio2 with: portfolio3 ) to: portfolio1. 
	self should: [portfolio2 add: portfolio3 ]
		raise: Error
		withExceptionDo: 
		[:anError| self assert: anError  messageText  equals:
			 Portfolio cantAddFinancialServiceToPortfolioWithSharedFinancialService].
		
	
	! !

!methodRemoval: PortfolioTest #setUp stamp: 'sc 5/24/2021 16:29:09'!
setUp!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:29:18'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:29:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:29:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:29:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:29:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:29:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:29:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:29:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:29:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test01PortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioConUnaCuentaConSaldoPositivoTieneElMismoBalanceQueLaMisma stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioConDosCuentasTieneElMismoBalanceQueLaSumaDeAmbas stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioVacioNoTieneTransaccionesRegistradas stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioConUnaCuentaConUnaTransaccionLaTieneRegistrada stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioConUnPortfolioVacioTieneBalance0 stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioTieneElMismoBalanceQueElunicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioTieneLaMismasTransaccionesQueElUnicoPortfolioQueContiene stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioVacioNoTieneTransacciones stamp: 'sc 5/24/2021 16:30:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioConCuentaConUnaTransaccionSoloContieneEstaTransaccion stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioConUnPortfolioConUnaTransaccionTieneALaMisma stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

!testRun: #PortfolioTest #test12NoSePuedeMeterUnaCuentaAUnPortfolioQueYaLaTiene stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

!testRun: #PortfolioTest #test13NoSePuedeMeterUnPortfolioEnSiMismo stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

!testRun: #PortfolioTest #test14NoSePuedeAgregarPortfolioQueComparteUnaCuenta stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

!testRun: #PortfolioTest #test15NoSePuedeAgregarPortfolio3APortfolio2SiAmbosPertenecenAPortfolio1 stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

!testRun: #PortfolioTest #test16NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

!testRun: #PortfolioTest #test17NoSePuedeAgregarPortfolio2APortfolio3SiAbuelodePortfolio3EsPadreDeP2 stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

!testRun: #PortfolioTest #test18NoSePuedeAgregarUnPortfolioAOtroSiElPrimeroDosPadresYCompartenUno stamp: 'sc 5/24/2021 16:30:38'!
PASSED!

----SNAPSHOT----(24 May 2021 16:30:47) CuisUniversity-4532.image priorSource: 17983490!

----SNAPSHOT----(24 May 2021 16:32:10) CuisUniversity-4532.image priorSource: 18070167!