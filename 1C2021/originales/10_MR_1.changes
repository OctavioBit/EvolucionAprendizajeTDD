
!MarsRover class methodsFor: 'nil' stamp: 'CS 5/17/2021 16:22:09'!
p! !

!methodRemoval: MarsRover class #p stamp: 'CS 5/17/2021 16:22:36'!
p!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test19AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne stamp: 'CS 5/17/2021 16:23:04'!
PASSED!

!testRun: #MarsRoverTest #test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase stamp: 'CS 5/17/2021 16:23:04'!
PASSED!
!MarsRoverPointing class methodsFor: 'as yet unclassified' stamp: 'CS 5/17/2021 16:23:32'!
cardinalPointInitialization: aMarsRover

	self subclasses detect: [:aMarsRoverPointingClass | aMarsRoverPointingClass canHandle: aMarsRover
		]
	 ifFound: [:aMarsRoverPointingClass | 
		aMarsRoverPointingClass new 
		] 
	ifNone:[^'error']! !

!methodRemoval: MarsRoverPointing class #xxx: stamp: 'CS 5/17/2021 16:23:38'!
xxx: aMarsRover

	self subclasses detect: [:aMarsRoverPointingClass | aMarsRoverPointingClass canHandle: aMarsRover
		]
	 ifFound: [:aMarsRoverPointingClass | 
		aMarsRoverPointingClass new 
		] 
	ifNone:[^'error']!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test19AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne stamp: 'CS 5/17/2021 16:23:41'!
PASSED!

!testRun: #MarsRoverTest #test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase stamp: 'CS 5/17/2021 16:23:41'!
PASSED!
!MarsRover methodsFor: 'processPackage' stamp: 'CS 5/17/2021 16:26:56' prior: 51034095!
processPackage: commands

	commands do: [ :command | self processCommand: command].
	! !
!MarsRover methodsFor: 'nil' stamp: 'CS 5/17/2021 16:27:18'!
processCommand: aCommand

	(aCommand = $f) ifTrue: [^ self moveFoward].
	(aCommand = $b) ifTrue: [^ self moveBackward].
	(aCommand  = $l) ifTrue: [^ self rotateLeft].
	(aCommand  = $r) ifTrue: [^ self rotateRight].
	
	^Error signal: self class describeErrorTheCommandIsInvalid.! !
!MarsRover class methodsFor: 'describeErrors' stamp: 'CS 5/17/2021 16:27:52'!
describeErrorTheCommandIsInvalid

	^'El comando no es valido'! !

!methodRemoval: MarsRover class #describeErrorTheCommandIsNotValid stamp: 'CS 5/17/2021 16:28:00'!
describeErrorTheCommandIsNotValid

	^'El comando no es valido'!
!MarsRoverTest methodsFor: 'testing' stamp: 'CS 5/17/2021 16:28:15' prior: 51033783!
test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	 
self 
		should: [ rover processPackage: ' '. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
		self assert: (rover isPosition:  0@0 pointing: MarsRoverPointingNorth new). 
	! !

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test19AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:28:18'!
PASSED!

!testRun: #MarsRoverTest #test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne stamp: 'CS 5/17/2021 16:28:18'!
ERROR!

!testRun: #MarsRoverTest #test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase stamp: 'CS 5/17/2021 16:28:18'!
ERROR!
!MarsRoverTest methodsFor: 'testing' stamp: 'CS 5/17/2021 16:28:28' prior: 51033958!
test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'FFRR'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !
!MarsRoverTest methodsFor: 'testing' stamp: 'CS 5/17/2021 16:28:41' prior: 51033942!
test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'fbbzrll'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	! !

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test19AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne stamp: 'CS 5/17/2021 16:28:46'!
PASSED!

!testRun: #MarsRoverTest #test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase stamp: 'CS 5/17/2021 16:28:46'!
PASSED!
!MarsRoverTest methodsFor: 'testing' stamp: 'CS 5/17/2021 16:30:10'!
test21CaseSensitiveInCommands

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'F'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test19AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test21CaseSensitiveInCommands stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!testRun: #MarsRoverTest #test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase stamp: 'CS 5/17/2021 16:30:16'!
PASSED!

!methodRemoval: MarsRoverTest #test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase stamp: 'CS 5/17/2021 16:30:22'!
test21ShouldThrowErrorWhenTheCommandHasValidLettersButInUppercase

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'FFRR'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	!

!methodRemoval: MarsRoverTest #test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne stamp: 'CS 5/17/2021 16:30:27'!
test20ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValidAndProcessAllTheCommandsUntilTheInvalidOne

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'fbbzrll'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingNorth new)
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'CS 5/17/2021 16:30:32'!
test20CaseSensitiveInCommands

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'F'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test21CaseSensitiveInCommands stamp: 'CS 5/17/2021 16:30:35'!
test21CaseSensitiveInCommands

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'F'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test19AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!testRun: #MarsRoverTest #test20CaseSensitiveInCommands stamp: 'CS 5/17/2021 16:39:50'!
PASSED!

!methodRemoval: MarsRoverTest #test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing stamp: 'CS 5/17/2021 16:40:10'!
test18AssertWhenAComandHasMoreThanOneCharAndReturnsToTheSamePositionWithoutModifyingWhereItPointing

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingEast new.
	rover processPackage: 'fb'. 
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingEast new)
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'CS 5/17/2021 16:40:19'!
test18AssertWhenAComandHasMoreThanOneChar

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'fbbrll'. 
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingWest new)
	! !

!methodRemoval: MarsRoverTest #test19AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:40:22'!
test19AssertWhenAComandHasMoreThanOneChar

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
	rover processPackage: 'fbbrll'. 
	self assert: (rover isPosition: 0@-1 pointing: MarsRoverPointingWest new)
	!
!MarsRoverTest methodsFor: 'testing' stamp: 'CS 5/17/2021 16:40:27'!
test19CaseSensitiveInCommands

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'F'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	! !

!methodRemoval: MarsRoverTest #test20CaseSensitiveInCommands stamp: 'CS 5/17/2021 16:40:30'!
test20CaseSensitiveInCommands

	|rover|
	
	rover := MarsRover startPosition: 0@0 pointing: MarsRoverPointingNorth new.
self 
		should: [ rover processPackage: 'F'. ]
		raise: Error
		withMessageText: MarsRover describeErrorTheCommandIsInvalid.
		
	self assert: (rover isPosition: 0@0 pointing: MarsRoverPointingNorth new)
	!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!testRun: #MarsRoverTest #test19CaseSensitiveInCommands stamp: 'CS 5/17/2021 16:46:55'!
PASSED!

!methodRemoval: MarsRoverPointing class #cardinalPointInitialization: stamp: 'CS 5/17/2021 16:47:16'!
cardinalPointInitialization: aMarsRover

	self subclasses detect: [:aMarsRoverPointingClass | aMarsRoverPointingClass canHandle: aMarsRover
		]
	 ifFound: [:aMarsRoverPointingClass | 
		aMarsRoverPointingClass new 
		] 
	ifNone:[^Error signal: MarsRover class describeErrorTheCardinalPointIsInvalid]!

!testRun: #MarsRoverTest #test01AssertWhenAPackageIsEmpty stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test02AssertWhenAMarsRoverMoveFowardStartPointingAtNorth stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test03AssertWhenAMarsRoverMoveBackwardsStartPointingAtNorth stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test04AssertWhenAMarsRoverRotateLeftStartPointingAtNorth stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test05AssertWhenAMarsRoverRotateRightStartPointingAtNorth stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test06ShouldThrowAnErrorWhenThereIsACommandInThePackageThatIsNotValid stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test07AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test08AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test09AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test10AssertWhenAMarsRoverMoveBackwardsStartPointingAtWest stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test11AssertWhenAMarsRoverMoveBackwardsStartPointingAtsouth stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test12AssertWhenAMarsRoverRotateLeftStartPointingAtSouth stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test13AssertWhenAMarsRoverRotateLeftStartPointingAtEast stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test14AssertWhenAMarsRoverRotateLeftStartPointingAtWest stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test15AssertWhenAMarsRoverRotateRightStartPointingAtSouth stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test16AssertWhenAMarsRoverRotateRightStartPointingAtWest stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test17AssertWhenAMarsRoverRotateRightStartPointingAtEast stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test18AssertWhenAComandHasMoreThanOneChar stamp: 'CS 5/17/2021 16:47:20'!
PASSED!

!testRun: #MarsRoverTest #test19CaseSensitiveInCommands stamp: 'CS 5/17/2021 16:47:20'!
PASSED!
