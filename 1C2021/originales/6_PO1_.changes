

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (10 May 2021 17:19:00) as /home/lbiglieri/Downloads/build/CuisUniversity/linux64/CuisUniversity-4532.image!


----QUIT----(10 May 2021 17:19:31) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (17 May 2021 20:11:44) as /home/lbiglieri/Downloads/build/CuisUniversity/imagen1/CuisUniversity-4532.image!


----End fileIn of /home/lbiglieri/Downloads/build/CuisUniversity/imagen1/Portfolio-Ejercicio.st----!

----SNAPSHOT----(17 May 2021 20:13:44) CuisUniversity-4532.image priorSource: 16885915!

----SNAPSHOT----(17 May 2021 20:13:46) CuisUniversity-4532.image priorSource: 16893358!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/17/2021 20:22:25'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 20:26:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 20:26:24'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 20:26:24'!
FAILURE!
!Withdraw methodsFor: 'initialization' stamp: 'LB 5/17/2021 20:26:46' prior: 50859506!
initializeFor: aValue

	value := aValue * (-1)! !
!Withdraw methodsFor: 'initialization' stamp: 'LB 5/17/2021 20:26:51' prior: 50859590!
initializeFor: aValue

	value := aValue * -1! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 20:26:56'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 20:27:00'!
PASSED!
!Withdraw methodsFor: 'initialization' stamp: 'LB 5/17/2021 20:27:49' prior: 50859595!
initializeFor: aValue

	value := aValue! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/17/2021 20:35:21' prior: 50859555!
balance
	|deposits withdraws total|
	deposits := transactions  select: 	[:aTransaction | aTransaction class = Deposit].
	withdraws := transactions  select: 	[:aTransaction | aTransaction class = Withdraw].
	total := deposits sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ].
	^ total - (withdraws sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ])! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 20:35:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/17/2021 20:35:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/17/2021 20:36:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/17/2021 20:37:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/17/2021 20:37:55'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'LB 5/17/2021 20:42:56'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'no messages' stamp: 'LB 5/17/2021 20:44:32'!
test01
	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/17/2021 20:47:34'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 20:47:10' prior: 50859657!
test01
	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio receptiveAccounts size.
	self assert: 0 equals: portfolio portfolios size.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 20:48:23' prior: 50859668!
test01
	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:48:32'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:48:32'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:48:43'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:49:01'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:49:07' prior: 50859693!
balance
	^0! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:49:13'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:49:26'!
totalAccounts
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:49:30' prior: 50859702!
totalAccounts
	^0! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:49:32'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:49:41'!
totalPortfolios
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:49:50' prior: 50859711!
totalPortfolios
	^0! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:49:53'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:49:58'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 20:50:53'!
test02
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 20:50:57'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:51:07'!
addAccount: aReceptiveAccount 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/17/2021 20:53:10'!
Object subclass: #Portfolio
	instanceVariableNames: 'totalAccounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:53:09' prior: 50859736!
addAccount: aReceptiveAccount 
	totalAccounts := 1.! !

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 20:53:53'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 20:53:58'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 20:54:04'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 20:54:29'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 20:54:33'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 20:55:09' prior: 50859706!
totalAccounts
	^totalAccounts! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:55:17'!
FAILURE!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 20:55:17'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:55:17'!
FAILURE!
!Portfolio methodsFor: 'nil' stamp: 'LB 5/17/2021 20:55:41' overrides: 16896425!
initialize
	totalAccounts := 0! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 20:55:46'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 20:55:46'!
PASSED!

self!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 20:59:32'!
test03
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [portfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 20:59:36'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 20:59:36'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 20:59:56'!
errorAccountAlreadyAddedMessage
	self shouldBeImplemented.! !

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:00:56'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:01:12' prior: 50859805!
errorAccountAlreadyAddedMessage
	^'Error account already added to this portfolio.'! !

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:01:13'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 21:02:27' prior: 50859748!
addAccount: aReceptiveAccount 
	totalAccounts = 1 ifTrue: [^self error: self class errorAccountAlreadyAddedMessage].
	totalAccounts := 1 ! !

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:02:28'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:02:30'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 21:02:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 21:02:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:02:30'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:04:33'!
test04
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:04:34'!
FAILURE!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:04:47'!
FAILURE!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:04:58'!
FAILURE!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:05:01'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 21:05:01'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 21:05:01'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:05:01'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:05:01'!
FAILURE!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:05:01'!
FAILURE!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:05:23'!
FAILURE!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:05:35'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/17/2021 21:07:36'!
Object subclass: #Portfolio
	instanceVariableNames: 'totalAccounts balance'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 21:07:35' prior: 50859821!
addAccount: aReceptiveAccount 
	balance := aReceptiveAccount balance.
	totalAccounts = 1 ifTrue: [^self error: self class errorAccountAlreadyAddedMessage].
	totalAccounts := 1 ! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 21:07:44' prior: 50859697!
balance
	^balance ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:08:04' prior: 50859775 overrides: 16896425!
initialize
	totalAccounts := 0.
	balance := 0! !

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:08:08'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 21:08:13'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 21:08:13'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:08:13'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:08:13'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:08:51'!
test05
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 21:08:53'!
FAILURE!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 21:09:03'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/17/2021 21:09:36'!
Object subclass: #Portfolio
	instanceVariableNames: 'totalAccounts balance account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 21:09:35' prior: 50859886!
addAccount: aReceptiveAccount 
	account := aReceptiveAccount.
	totalAccounts = 1 ifTrue: [^self error: self class errorAccountAlreadyAddedMessage].
	totalAccounts := 1 ! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 21:09:46' prior: 50859895!
balance
	^account balance. ! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 21:10:30'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 21:10:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:10:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:10:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 21:10:30'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 21:10:30'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:10:53' prior: 50859900 overrides: 16896425!
initialize
	totalAccounts := 0.
	balance := 0.
	account := ReceptiveAccount new.! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 21:10:56'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 21:10:56'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:10:56'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:10:56'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 21:10:56'!
PASSED!

----End fileIn of /home/lbiglieri/Downloads/build/CuisUniversity/imagen1/Packages/TerseGuide.pck.st----!

OrderedCollection!
!AccountTransaction methodsFor: 'nil' stamp: 'LB 5/17/2021 21:43:35'!
+ anAccountTransaction! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:44:44' prior: 50862912!
+ anAccountTransaction
	self subclassResponsibility ! !

OrderedCollection!
!Deposit methodsFor: 'nil' stamp: 'LB 5/17/2021 21:48:50' overrides: 50862916!
+ aTransactionValue
	^ aTransactionValue + value.! !
!Withdraw methodsFor: 'value' stamp: 'LB 5/17/2021 21:49:11' overrides: 50862916!
+ aTransactionValue
	^ aTransactionValue - value.! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/17/2021 21:50:11' prior: 50859612!
balance
	"|deposits withdraws total|
	deposits := transactions  select: 	[:aTransaction | aTransaction class = Deposit].
	withdraws := transactions  select: 	[:aTransaction | aTransaction class = Withdraw].
	total := deposits sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ].
	^ total - (withdraws sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ])"
	
	^ transactions sum: [ :aTransaction | aTransaction ] ifEmpty: [ 0 ].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/17/2021 21:50:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:50:15'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:50:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/17/2021 21:50:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/17/2021 21:50:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/17/2021 21:50:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/17/2021 21:50:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:50:15'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/17/2021 21:52:12' prior: 50862931!
balance
	"|deposits withdraws total|
	deposits := transactions  select: 	[:aTransaction | aTransaction class = Deposit].
	withdraws := transactions  select: 	[:aTransaction | aTransaction class = Withdraw].
	total := deposits sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ].
	^ total - (withdraws sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ])"
	|sum|
	sum := 0.
	^transactions do: [:aTransaction | sum _ aTransaction + sum].	! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/17/2021 21:52:17'!
FAILURE!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:52:17'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:52:17'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/17/2021 21:52:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/17/2021 21:52:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/17/2021 21:52:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/17/2021 21:52:17'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/17/2021 21:52:58' prior: 50862978!
balance
	"|deposits withdraws total|
	deposits := transactions  select: 	[:aTransaction | aTransaction class = Deposit].
	withdraws := transactions  select: 	[:aTransaction | aTransaction class = Withdraw].
	total := deposits sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ].
	^ total - (withdraws sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ])"
	|sum|
	sum := 0.
	^transactions do: [:aTransaction | sum _ aTransaction + sum].	
	"^transactions inject"! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:53:19'!
addTo: aBalanceValue
	self subclassResponsibility ! !

!methodRemoval: AccountTransaction #+ stamp: 'LB 5/17/2021 21:53:25'!
+ anAccountTransaction
	self subclassResponsibility !

!methodRemoval: Deposit #+ stamp: 'LB 5/17/2021 21:53:37'!
+ aTransactionValue
	^ aTransactionValue + value.!
!Deposit methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:53:54' overrides: 50863040!
addTo: aBalanceValue
	^aBalanceValue + value! !
!Withdraw methodsFor: 'value' stamp: 'LB 5/17/2021 21:54:04' overrides: 50863040!
addTo: aBalanceValue
	^aBalanceValue - value! !

!methodRemoval: Withdraw #+ stamp: 'LB 5/17/2021 21:54:09'!
+ aTransactionValue
	^ aTransactionValue - value.!
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/17/2021 21:54:58' prior: 50863022!
balance
	"|deposits withdraws total|
	deposits := transactions  select: 	[:aTransaction | aTransaction class = Deposit].
	withdraws := transactions  select: 	[:aTransaction | aTransaction class = Withdraw].
	total := deposits sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ].
	^ total - (withdraws sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ])"

	^transactions inject: 0 into: [:balance :transaction | transaction addTo: balance ].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/17/2021 21:54:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:54:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:54:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/17/2021 21:54:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/17/2021 21:54:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/17/2021 21:54:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/17/2021 21:54:59'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/17/2021 21:55:59' prior: 50863066!
balance
	"|deposits withdraws total|
	deposits := transactions  select: 	[:aTransaction | aTransaction class = Deposit].
	withdraws := transactions  select: 	[:aTransaction | aTransaction class = Withdraw].
	total := deposits sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ].
	^ total - (withdraws sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ])"
	|sum|
	sum := 0.
	^transactions do:  [ :aTransaction | sum := aTransaction addTo: sum ]
	"^transactions inject: 0 into: [:balance :transaction | transaction addTo: balance ]."! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/17/2021 21:56:00'!
FAILURE!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:56:00'!
FAILURE!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:56:00'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/17/2021 21:56:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/17/2021 21:56:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/17/2021 21:56:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/17/2021 21:56:00'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/17/2021 21:56:15' prior: 50863110!
balance
	"|deposits withdraws total|
	deposits := transactions  select: 	[:aTransaction | aTransaction class = Deposit].
	withdraws := transactions  select: 	[:aTransaction | aTransaction class = Withdraw].
	total := deposits sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ].
	^ total - (withdraws sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ])"
	|sum|
	sum := 0.
	transactions do:  [ :aTransaction | sum := aTransaction addTo: sum ].
	^sum.
	"^transactions inject: 0 into: [:balance :transaction | transaction addTo: balance ]."! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/17/2021 21:56:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:56:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/17/2021 21:56:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/17/2021 21:56:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/17/2021 21:56:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/17/2021 21:56:18'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/17/2021 21:56:18'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/17/2021 21:57:15' prior: 50863157!
balance
	^transactions inject: 0 into: [:balance :transaction | transaction addTo: balance ].! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 21:57:58'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 21:57:58'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 21:57:58'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 21:57:58'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 21:57:58'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 21:59:02'!
test06
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test06 stamp: 'LB 5/17/2021 21:59:06'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/17/2021 22:00:47'!
Object subclass: #Portfolio
	instanceVariableNames: 'totalAccounts balance account accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 22:00:45' prior: 50859941!
addAccount: aReceptiveAccount 
	(accounts includes: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage].
	accounts add: aReceptiveAccount.
	totalAccounts := totalAccounts + 1.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/17/2021 22:01:06' prior: 50859968 overrides: 16896425!
initialize
	totalAccounts := 0.
	balance := 0.
	accounts := OrderedCollection new.! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:01:13'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:01:13'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 22:01:13'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 22:01:13'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 22:01:13'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/17/2021 22:01:13'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 22:03:52' prior: 50859949!
balance
	^accounts sum: [:anAccount | account balance] . ! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:03:54'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:03:54'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 22:03:54'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 22:03:54'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 22:03:54'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/17/2021 22:03:54'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:04:05'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:04:05'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 22:04:35' prior: 50863279!
balance
	^accounts sum: [:anAccount | account balance] ifEmpty: [^0]. ! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 22:04:38' prior: 50863302!
balance
	^accounts sum: [:anAccount | account balance] ifEmpty: [0]. ! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:04:40'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:04:40'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 22:04:40'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 22:04:40'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 22:04:40'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/17/2021 22:04:40'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:04:45'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:04:45'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:05:34'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:05:40'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:05:40'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 22:05:57' prior: 50863307!
balance
	^accounts sum: [:anAccount | account balance] ifEmpty: [^0]. ! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:05:59'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:05:59'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 22:05:59'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 22:05:59'!
ERROR!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 22:05:59'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/17/2021 22:05:59'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/17/2021 22:06:16' prior: 50863337!
balance
	^accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]. ! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:06:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:06:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 22:06:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 22:06:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 22:06:18'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/17/2021 22:06:18'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: 'totalAccounts balance accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/17/2021 22:07:25'!
Object subclass: #Portfolio
	instanceVariableNames: 'totalAccounts balance accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/17/2021 22:07:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/17/2021 22:07:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/17/2021 22:07:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/17/2021 22:07:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/17/2021 22:07:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/17/2021 22:07:30'!
PASSED!

----QUIT----(17 May 2021 22:13:16) CuisUniversity-4532.image priorSource: 16893447!

----STARTUP---- (18 May 2021 17:48:29) as /home/lbiglieri/Downloads/build/CuisUniversity/imagen1/CuisUniversity-4532.image!

!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:01:52' prior: 50859764!
totalAccounts
	^accounts size! !

!testRun: #PortfolioTest #test01 stamp: 'LB 5/18/2021 18:01:54'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/18/2021 18:01:54'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/18/2021 18:01:54'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/18/2021 18:01:54'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/18/2021 18:01:54'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/18/2021 18:01:54'!
PASSED!

Object subclass: #Portfolio
	instanceVariableNames: 'balance accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/18/2021 18:02:01'!
Object subclass: #Portfolio
	instanceVariableNames: 'balance accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:02:08' prior: 50863249!
addAccount: aReceptiveAccount 
	(accounts includes: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage].
	accounts add: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:02:22' prior: 50863260 overrides: 16896425!
initialize
	accounts := OrderedCollection new.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/18/2021 18:02:39'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/18/2021 18:02:47'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/18/2021 18:02:47'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/18/2021 18:02:47'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/18/2021 18:02:47'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/18/2021 18:02:47'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/18/2021 18:02:47'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:08:37'!
test07
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: portfolio includes: account.
	self assert: portfolio includes: account2.! !

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:08:54'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:08:54'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:09:06'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:09:22'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:09:24'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:09:34'!
includes: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:09:56' prior: 50863508!
includes: aReceptiveAccount 
	^true! !

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:09:58'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:11:18' prior: 50863478!
test07
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:11:20'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/18/2021 18:11:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/18/2021 18:11:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/18/2021 18:11:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/18/2021 18:11:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/18/2021 18:11:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/18/2021 18:11:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:11:20'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:11:40'!
test08
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Deposit register: 50 on: account2.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self deny: (portfolio includes: account2).! !

!testRun: #PortfolioTest #test08 stamp: 'LB 5/18/2021 18:11:41'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:12:30' prior: 50863513!
includes: aReceptiveAccount 
	^accounts includes: aReceptiveAccount ! !

!testRun: #PortfolioTest #test08 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LB 5/18/2021 18:12:31'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'LB 5/18/2021 18:12:33'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:14:44'!
test01NewPortfolioShouldBeEmptyAndHaveZeroBalance
	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test01 stamp: 'LB 5/18/2021 18:14:44'!
test01
	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:16:17'!
test02AddEmptyAccountShouldRegisterAccountWithNoBalance
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test02 stamp: 'LB 5/18/2021 18:16:17'!
test02
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:17:54'!
test03PortfolioCantAddSameAccountMoreThanOnce
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [portfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test03 stamp: 'LB 5/18/2021 18:17:54'!
test03
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [portfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:20:26'!
test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test04 stamp: 'LB 5/18/2021 18:20:26'!
test04
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio addAccount: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:21:01'!
test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test05 stamp: 'LB 5/18/2021 18:21:01'!
test05
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:22:03'!
test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test06 stamp: 'LB 5/18/2021 18:22:03'!
test06
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:22:37'!
test07PortfolioShouldKnowItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !

!methodRemoval: PortfolioTest #test07 stamp: 'LB 5/18/2021 18:22:37'!
test07
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:23:07'!
test08PortfolioShouldKnowOnlyItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Deposit register: 50 on: account2.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self deny: (portfolio includes: account2).! !

!methodRemoval: PortfolioTest #test08 stamp: 'LB 5/18/2021 18:23:07'!
test08
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Deposit register: 50 on: account2.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self deny: (portfolio includes: account2).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:28:55'!
test09
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Withdraw register: 50 on: account2.
	portfolio addAccount: account2.

	self assert: 50 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:29:04'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:29:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:34:11' prior: 50863861!
test09
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio hasRegistered: aTransaction).! !

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:34:12'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:34:20'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:34:34' prior: 50863925!
hasRegistered: aDeposit 
	^true! !

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:34:40'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:34:40'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:34:56'!
test10
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio hasRegistered: aTransaction).! !

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:34:58'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:35:40' prior: 50863930!
hasRegistered: aTransaction
	^(accounts at: 1) hasRegistered: aTransaction.! !

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:35:41'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:36:58' prior: 50863982!
hasRegistered: aTransaction
	accounts size = 0 ifTrue: [^false].
	^(accounts at: 1) hasRegistered: aTransaction.! !

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:36:58'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:36:58'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:38:31'!
test11
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).! !

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:38:33'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:38:33'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:38:55' prior: 50864033!
test11
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).! !

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:38:56'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:41:38' prior: 50863990!
hasRegistered: aTransaction
	accounts size = 0 ifTrue: [^false].
	accounts detect: [:anAccount | anAccount includes: aTransaction] ifNone: [^false].
	^true! !

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:41:39'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:42:01' prior: 50864110!
hasRegistered: aTransaction
	accounts size = 0 ifTrue: [^false].
	accounts detect: [:anAccount | anAccount hasRegistered: aTransaction] ifNone: [^false].
	^true! !

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:42:04'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:42:06'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:42:06'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:42:14' prior: 50864121!
hasRegistered: aTransaction
	accounts detect: [:anAccount | anAccount hasRegistered: aTransaction] ifNone: [^false].
	^true! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:42:45'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:42:45'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:44:13'!
test12
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio transactions includes: aTransaction).! !

!testRun: #PortfolioTest #test12 stamp: 'LB 5/18/2021 18:44:14'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:45:19'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:46:29' prior: 50864265!
transactions
	^#((accounts at:1) transactions at: 1)! !

!testRun: #PortfolioTest #test12 stamp: 'LB 5/18/2021 18:46:30'!
FAILURE!

portfolio transactions!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:47:26' prior: 50864269!
transactions
	^(accounts at:1) transactions! !

!testRun: #PortfolioTest #test12 stamp: 'LB 5/18/2021 18:47:28'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:47:28'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:47:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:47:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:47:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:47:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:47:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:47:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:47:29'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:47:29'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:47:29'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:47:29'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'LB 5/18/2021 18:47:29'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:48:05'!
test13
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio transactions includes: aTransaction).! !

!testRun: #PortfolioTest #test13 stamp: 'LB 5/18/2021 18:48:09'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'LB 5/18/2021 18:48:25'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'LB 5/18/2021 18:48:30'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'LB 5/18/2021 18:48:35'!
ERROR!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:49:45' prior: 50864277!
transactions
	accounts size = 0 ifTrue: [^OrderedCollection new].
	^(accounts at:1) transactions! !

!testRun: #PortfolioTest #test13 stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'LB 5/18/2021 18:49:46'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'LB 5/18/2021 18:49:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/18/2021 18:50:07'!
test14
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio transactions includes: aTransaction2).! !

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 18:50:08'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:54:26' prior: 50864342!
transactions
	^accounts inject: OrderedCollection new into: [:totalTransactions :account | totalTransactions addAll: (account transactions)].! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:54:38' prior: 50864412!
transactions
	^accounts inject: OrderedCollection new into: [:transactions :account | transactions addAll: (account transactions)].! !

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 18:54:39'!
FAILURE!

portfolio transactions!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:56:08' prior: 50864419!
transactions
	^accounts inject: OrderedCollection new into: [:transactions :account | transactions addAllLast: (account transactions)].! !

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 18:56:09'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:57:08' prior: 50864429!
transactions
	^accounts inject: (OrderedCollection new) into: [:totalTransactions :account | totalTransactions addAllLast: (account transactions)].! !

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 18:57:11'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 18:57:24' prior: 50864439!
transactions
	^accounts inject: OrderedCollection new into: [:totalTransactions :account | totalTransactions addAllLast: (account transactions)].! !

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 18:59:22'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 19:01:42' prior: 50864449!
transactions
	^accounts inject: OrderedCollection new into: [:totalTransactions :account | 
		account transactions do: [:aTransaction | totalTransactions add: aTransaction]].
	
	"totalTransactions addAllLast: (account transactions)]."! !

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'LB 5/18/2021 19:01:43'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 19:01:43'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 19:01:43'!
FAILURE!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 19:03:04' prior: 50864459!
transactions
	"^accounts inject: OrderedCollection new into: [:totalTransactions :account | 
		account transactions do: [:aTransaction | totalTransactions add: aTransaction]]."
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	^accounts do: [:account | totalTransactions addAllLast: (account transactions)].! !

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 19:03:06'!
FAILURE!

portfolio transactions!

portfolio transactions!

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 19:05:03'!
FAILURE!

|lista1 lista2|
lista1 := OrderedCollection new.
lista2 := OrderedCollection new.
lista1 add: 1.
lista1 add: 2.
lista1 add: 3.
lista2 addAll: lista1.
lista2
!

|lista1 lista2 lista3 lista4|
lista1 := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista4 := OrderedCollection new.
lista1 add: 1.
lista1 add: 2.
lista1 add: 3.
lista2 add: 4.
lista2 add: 5.
lista2 add: 6.
lista3 add: lista1.
lista3 add: lista2.
lista4 addAll: lista3.
lista4!

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 19:10:13'!
FAILURE!

|lista1 lista2 lista3 lista4|
lista1 := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista4 := OrderedCollection new.
lista1 add: 1.
lista1 add: 2.
lista1 add: 3.
lista2 add: 4.
lista2 add: 5.
lista2 add: 6.
lista3 add: lista1.
lista3 add: lista2.
lista3 do: [:l | lista4 addAll: l].
lista4!

|lista1 lista2 lista3 lista4|
lista1 := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista4 := OrderedCollection new.
lista1 add: 1.
lista1 add: 2.
lista1 add: 3.
lista2 add: 4.
lista2 add: 5.
lista2 add: 6.
lista3 add: lista1.
lista3 add: lista2.
lista3 do: [:l | lista4 addAllLast: l].
lista4
!

|lista1 lista2 lista3 lista4|
lista1 := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista4 := OrderedCollection new.
lista1 add: 1.
lista1 add: 2.
lista1 add: 3.
lista2 add: 4.
lista2 add: 5.
lista2 add: 6.
lista3 add: lista1.
lista3 add: lista2.
lista3 do: [:l | lista4 addAllLast: l].!

|lista1 lista2 lista3 lista4|
lista1 := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista4 := OrderedCollection new.
lista1 add: 1.
lista1 add: 2.
lista1 add: 3.
lista2 add: 4.
lista2 add: 5.
lista2 add: 6.
lista3 add: lista1.
lista3 add: lista2.
lista3 do: [:l | lista4 addAllLast: l].
lista4!

|lista1 lista2 lista3 lista4|
lista1 := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista4 := OrderedCollection new.
lista1 add: 1.
lista1 add: 2.
lista1 add: 3.
lista2 add: 4.
lista2 add: 5.
lista2 add: 6.
lista3 add: lista1.
lista3 add: lista2.
lista3 do: [:l | lista4 addAllLast: l].!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 19:19:17' prior: 50864518!
transactions
	"^accounts inject: OrderedCollection new into: [:totalTransactions :account | 
		account transactions do: [:aTransaction | totalTransactions add: aTransaction]]."
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	accounts do: [:account | totalTransactions addAll: (account transactions)].
	^totalTransactions! !

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'LB 5/18/2021 19:19:18'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'LB 5/18/2021 19:19:18'!
PASSED!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/18/2021 19:20:24' prior: 50864608!
transactions
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	accounts do: [:account | totalTransactions addAll: (account transactions)].
	^totalTransactions! !

----QUIT----(18 May 2021 19:22:05) CuisUniversity-4532.image priorSource: 17016043!

----STARTUP---- (20 May 2021 20:13:22) as /home/lbiglieri/Downloads/build/CuisUniversity/imagen1/CuisUniversity-4532.image!


!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'LB 5/20/2021 20:18:25'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'LB 5/20/2021 20:18:25'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:18:54'!
test09PortfolioShouldKnowItsAccountsTransactions
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio hasRegistered: aTransaction).! !

!methodRemoval: PortfolioTest #test09 stamp: 'LB 5/20/2021 20:18:54'!
test09
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio hasRegistered: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:19:13'!
test10PortfolioShouldKnowOnlyItsAccountsTransactions
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio hasRegistered: aTransaction).! !

!methodRemoval: PortfolioTest #test10 stamp: 'LB 5/20/2021 20:19:13'!
test10
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio hasRegistered: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:23:16'!
test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio hasRegistered: aTransaction).! !

!methodRemoval: PortfolioTest #test09PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 20:23:16'!
test09PortfolioShouldKnowItsAccountsTransactions
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio hasRegistered: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:23:50'!
test11PorfolioShouldKnowItsAccountsTransactions
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).! !

!methodRemoval: PortfolioTest #test11 stamp: 'LB 5/20/2021 20:23:50'!
test11
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:24:39'!
test11PortfolioShouldKnowItsAccountsTransactions
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).! !

!methodRemoval: PortfolioTest #test11PorfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 20:24:39'!
test11PorfolioShouldKnowItsAccountsTransactions
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:25:28'!
test12PortfolioTransactionsShouldContainATransactionInOneOfItsAccounts
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio transactions includes: aTransaction).! !

!methodRemoval: PortfolioTest #test12 stamp: 'LB 5/20/2021 20:25:28'!
test12
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio transactions includes: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:30:13'!
test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio transactions includes: aTransaction).! !

!methodRemoval: PortfolioTest #test12PortfolioTransactionsShouldContainATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 20:30:13'!
test12PortfolioTransactionsShouldContainATransactionInOneOfItsAccounts
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio transactions includes: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:33:04'!
test13PortfolioShouldKnowOnlyItsAccountsTransactions
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio transactions includes: aTransaction).! !

!methodRemoval: PortfolioTest #test13 stamp: 'LB 5/20/2021 20:33:04'!
test13
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio transactions includes: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:33:14'!
test13PortfolioShouldIncludeOnlyItsAccountsTransactions
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio transactions includes: aTransaction).! !

!methodRemoval: PortfolioTest #test13PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:33:14'!
test13PortfolioShouldKnowOnlyItsAccountsTransactions
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio transactions includes: aTransaction).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:33:33'!
test14PortfolioShouldIncludeItsAccountsTransactions
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio transactions includes: aTransaction2).! !

!methodRemoval: PortfolioTest #test14 stamp: 'LB 5/20/2021 20:33:33'!
test14
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio transactions includes: aTransaction2).!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:36:44' prior: 50864208!
hasRegistered: aTransaction
	^self transactions includes: aTransaction.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:36:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 20:36:46'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:39:33'!
test15
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 20:39:35'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:39:48'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/20/2021 20:41:47'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts totalPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:41:43' prior: 50865069!
addPortfolio: aPortfolio 
	totalPortfolios := 1.! !

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 20:41:52'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:42:14' prior: 50863448 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	totalPortfolios := 0.! !
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/20/2021 20:42:28' prior: 50859715!
totalPortfolios
	^totalPortfolios! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 20:42:30'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 20:42:30'!
PASSED!
!Behavior method!
initialize
	(accounts _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (13 to: 20)
		declaredAt: (13 to: 20).
	(totalPortfolios _ 0 coverAll:
		{68 to: 68})
		cover: (49 to: 63)
		declaredAt: (49 to: 63).! !
!Behavior method!
balance
	^ [
	(accounts
		cover: (11 to: 18)
		declaredAt: (11 to: 18))
		sum: [ :anAccount |
			[
			(anAccount
				cover: (39 to: 47)
				declaredAt: (27 to: 35)) balance ] valueCoveringAll:
				{49 to: 55} ]
		ifEmpty: [
			0 coverAll:
				{68 to: 68} ]] valueCoveringAll:
		{20 to: 23. 58 to: 65}.! !
!Behavior method!
totalAccounts
	^ [
	(accounts
		cover: (17 to: 24)
		declaredAt: (17 to: 24)) size ] valueCoveringAll:
		{26 to: 29}.! !
!Behavior method!
totalPortfolios
	^ totalPortfolios
		cover: (19 to: 33)
		declaredAt: (19 to: 33).! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 20:43:28'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
addAccount: aReceptiveAccount
	[
	([
	(accounts
		cover: (34 to: 41)
		declaredAt: (34 to: 41)) includes:
		(aReceptiveAccount
			cover: (53 to: 69)
			declaredAt: (13 to: 29)) ] valueCoveringAll:
		{43 to: 51}) ifTrue: [ ^ [
		(self coverAll:
			{82 to: 85}) error:
			([
			([
			(self coverAll:
				{94 to: 97}) class ] valueCoveringAll:
				{99 to: 103}) errorAccountAlreadyAddedMessage ] valueCoveringAll:
				{105 to: 135}) ] valueCoveringAll:
			{87 to: 92} ]] valueCoveringAll:
		{72 to: 78}.
	[
	(accounts
		cover: (140 to: 147)
		declaredAt: (34 to: 41)) add:
		(aReceptiveAccount
			cover: (154 to: 170)
			declaredAt: (13 to: 29)) ] valueCoveringAll:
		{149 to: 152}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (11 to: 22)
		declaredAt: (11 to: 22))
		inject:
			(0 coverAll:
				{32 to: 32})
		into: [ :balance :transaction |
			[
			(transaction
				cover: (65 to: 75)
				declaredAt: (51 to: 61)) addTo:
				(balance
					cover: (84 to: 90)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{77 to: 82} ]] valueCoveringAll:
		{24 to: 30. 34 to: 38}.! !

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 20:43:28'!
PASSED!
!Behavior method!
errorAccountAlreadyAddedMessage
	^ 'Error account already added to this portfolio.' coverAll:
		{35 to: 82}.! !

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 20:43:28'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) +
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 20:43:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 20:43:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 20:43:28'!
PASSED!
!Behavior method!
includes: aReceptiveAccount
	^ [
	(accounts
		cover: (32 to: 39)
		declaredAt: (32 to: 39)) includes:
		(aReceptiveAccount
			cover: (51 to: 67)
			declaredAt: (11 to: 27)) ] valueCoveringAll:
		{41 to: 49}.! !

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 20:43:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 20:43:28'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	([
	(self coverAll:
		{31 to: 34}) transactions ] valueCoveringAll:
		{36 to: 47}) includes:
		(aTransaction
			cover: (59 to: 70)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{49 to: 57}.! !
!Behavior method!
transactions
	| totalTransactions |
	(totalTransactions _ [
	(OrderedCollection
		cover: (59 to: 75)
		declaredAt: (59 to: 75)) new ] valueCoveringAll:
		{77 to: 79})
		cover: (38 to: 54)
		declaredAt: (17 to: 33).
	[
	(accounts
		cover: (83 to: 90)
		declaredAt: (83 to: 90)) do: [ :account |
		[
		(totalTransactions
			cover: (108 to: 124)
			declaredAt: (17 to: 33)) addAll:
			([
			(account
				cover: (135 to: 141)
				declaredAt: (98 to: 104)) transactions ] valueCoveringAll:
				{143 to: 154}) ] valueCoveringAll:
			{126 to: 132} ]] valueCoveringAll:
		{92 to: 94}.
	^ totalTransactions
		cover: (161 to: 177)
		declaredAt: (17 to: 33).! !
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 20:43:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:43:28'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 20:43:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 20:43:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:43:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 20:43:28'!
PASSED!
!Behavior method!
addPortfolio: aPortfolio
	(totalPortfolios _ 1 coverAll:
		{47 to: 47})
		cover: (28 to: 42)
		declaredAt: (28 to: 42).! !

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 20:43:28'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:45:54'!
test16
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self should: [portfolio addPortfolio: childPortfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 20:45:56'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:46:04'!
errorPortfolioAlreadyAddedMessage
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:46:29' prior: 50865404!
errorPortfolioAlreadyAddedMessage
	^'Error Portfolio Already Added.'! !

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 20:46:31'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 20:46:42'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 20:46:44'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 20:46:44'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 20:46:44'!
FAILURE!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 20:46:50'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:47:52' prior: 50865082!
addPortfolio: aPortfolio 
	totalPortfolios = 1 ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	totalPortfolios := 1.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 20:47:54'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 20:47:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 20:47:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 20:47:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 20:47:55'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 20:47:55'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:50:27'!
test17
	| portfolio account childPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	childPortfolio addAccount: account.
	
	portfolio addPortfolio: childPortfolio.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 20:50:30'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/20/2021 20:54:35'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts totalPortfolios portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/20/2021 20:54:34' prior: 50863356!
balance
	|sum|
	sum := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]. 
	sum := sum + portfolio balance.
	^sum! !

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 20:54:37'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:55:20' prior: 50865090 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	totalPortfolios := 0.
	portfolio := Portfolio new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:55:38' prior: 50865485!
addPortfolio: aPortfolio 
	totalPortfolios = 1 ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolio := aPortfolio.
	totalPortfolios := 1.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:57:57' prior: 50865586 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	totalPortfolios := 0.
	portfolio := OrderedCollection new.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts totalPortfolios portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/20/2021 20:58:07'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts totalPortfolios portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:58:13' prior: 50865602 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	totalPortfolios := 0.
	portfolios := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:58:19' prior: 50865593!
addPortfolio: aPortfolio 
	totalPortfolios = 1 ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios := aPortfolio.
	totalPortfolios := 1.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 20:58:24' prior: 50865630!
addPortfolio: aPortfolio 
	totalPortfolios = 1 ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	totalPortfolios := 1.! !

!methodRemoval: PortfolioTest #test17 stamp: 'LB 5/20/2021 21:00:09'!
test17
	| portfolio account childPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	childPortfolio addAccount: account.
	
	portfolio addPortfolio: childPortfolio.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 21:00:23'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:00:23'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 21:00:23'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 21:00:23'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:00:23'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 21:00:23'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 21:00:23'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 21:00:23'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:00:39' prior: 50865623 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	totalPortfolios := 0.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts totalPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/20/2021 21:00:44'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts totalPortfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'xxx' stamp: 'LB 5/20/2021 21:00:50' prior: 50865576!
balance
	|sum|
	sum := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]. 
	^sum! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:01:14' prior: 50865639!
addPortfolio: aPortfolio 
	totalPortfolios = 1 ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	totalPortfolios := 1.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 21:01:16'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 21:01:16'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:01:52'!
test17
	| portfolio childPortfolio1 childPortfolio2 |
	
	portfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	childPortfolio2 := Portfolio new.
	portfolio addPortfolio: childPortfolio1.
	portfolio addPortfolio: childPortfolio2.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 21:01:53'!
ERROR!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/20/2021 21:02:56'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts totalPortfolios portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:02:54' prior: 50865744!
addPortfolio: aPortfolio 
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	totalPortfolios := 1.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:03:16' prior: 50865835!
addPortfolio: aPortfolio 
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	totalPortfolios := totalPortfolios + 1.! !

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 21:03:21'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:03:44' prior: 50865720 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	totalPortfolios := 0.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 21:03:54'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 21:04:03'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 21:04:03'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:04:16' prior: 50865095!
totalPortfolios
	^portfolios size.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 21:04:19'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 21:04:19'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:04:28' prior: 50865844!
addPortfolio: aPortfolio 
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/20/2021 21:04:31'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 21:04:33'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 21:04:33'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/20/2021 21:04:39' prior: 50865857 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/20/2021 21:04:40'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/20/2021 21:04:41'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/20/2021 21:04:41'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/20/2021 21:04:41'!
PASSED!

----QUIT----(20 May 2021 21:49:30) CuisUniversity-4532.image priorSource: 17056820!

----STARTUP---- (22 May 2021 10:11:59) as /home/lbiglieri/Downloads/build/CuisUniversity/imagen1/CuisUniversity-4532.image!


!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:13:36'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:13:36'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:19:37'!
test18
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	Deposit register: 100 on: account.
	
	portfolio addPortfolio: childPortfolio.
	
	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:19:54'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:20:30' prior: 50865738!
balance
	|sum|
	sum := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]. 
	sum := sum + portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]. 
	^sum! !

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:20:44'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:21:39'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:21:39'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:21:39'!
FAILURE!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:21:39'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:21:39'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:21:39'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:21:39'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:21:39'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:21:39'!
ERROR!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:21:39'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:22:12' prior: 50866279!
balance
	|sum|
	sum := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]. 
	sum := sum + (portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]). 
	^sum! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:22:27'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:22:27'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:22:27'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:23:14' prior: 50866352!
balance
	|sum|
	sum := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0]. 
	^sum + (portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0]). ! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:23:16'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:23:16'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:23:16'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:25:57' prior: 50863409!
totalAccounts
	^accounts size + (portfolios sum: [:aPortfolio | aPortfolio totalAccounts] ifEmpty: [0]).! !

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:25:58'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:26:02'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:26:02'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:30:14'!
test19
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addAccount: 'test'] raise: Error - MessageNotUnderstood errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:30:29' prior: 50866569!
test19
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addAccount: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:30:33'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:30:38'!
errorInvalidTypeMessage
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:32:08' prior: 50866598!
errorInvalidTypeMessage
	^'Error invalid type.'! !

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:32:09'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:32:23'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:32:53'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:32:53'!
FAILURE!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:33:23'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:34:14' prior: 50863439!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifTrue: [^self error: self class errorInvalidTypeMessage ].
	(accounts includes: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage].
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:34:16'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:34:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:34:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:34:16'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:34:16'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:34:16'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:34:16'!
ERROR!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:34:16'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:34:39' prior: 50866620!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(accounts includes: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage].
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:34:43'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:34:43'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:35:00'!
test20
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addPortfolio: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:35:34' prior: 50866047!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(portfolios includes: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:35:37'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'LB 5/22/2021 10:35:37'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:40:52'!
test21
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	Deposit register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !

!testRun: #PortfolioTest #test21 stamp: 'LB 5/22/2021 10:40:55'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:46:11' prior: 50863578!
includes: aReceptiveAccount 
	^(accounts includes: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includes: aReceptiveAccount]].! !

!testRun: #PortfolioTest #test21 stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'LB 5/22/2021 10:46:12'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'LB 5/22/2021 10:46:12'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:49:59'!
test22
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio  transactions includes: aTransaction2).! !

!testRun: #PortfolioTest #test22 stamp: 'LB 5/22/2021 10:50:01'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:50:39' prior: 50864668!
transactions
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	accounts do: [:account | totalTransactions addAll: (account transactions)].
	portfolios do: [:portfolio | totalTransactions addAll: (portfolio transactions)].
	^totalTransactions! !

!testRun: #PortfolioTest #test22 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'LB 5/22/2021 10:50:40'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:51:52'!
test23
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).! !

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 10:51:55'!
PASSED!

!methodRemoval: PortfolioTest #test23 stamp: 'LB 5/22/2021 10:52:05'!
test23
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).!
!Behavior method!
initialize
	(accounts _ [
	(OrderedCollection
		cover: (25 to: 41)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{43 to: 45})
		cover: (13 to: 20)
		declaredAt: (13 to: 20).
	(portfolios _ [
	(OrderedCollection
		cover: (63 to: 79)
		declaredAt: (25 to: 41)) new ] valueCoveringAll:
		{81 to: 83})
		cover: (49 to: 58)
		declaredAt: (49 to: 58).! !
!Behavior method!
balance
	| sum |
	(sum _ [
	(accounts
		cover: (24 to: 31)
		declaredAt: (24 to: 31))
		sum: [ :anAccount |
			[
			(anAccount
				cover: (52 to: 60)
				declaredAt: (40 to: 48)) balance ] valueCoveringAll:
				{62 to: 68} ]
		ifEmpty: [
			0 coverAll:
				{81 to: 81} ]] valueCoveringAll:
		{33 to: 36. 71 to: 78})
		cover: (17 to: 19)
		declaredAt: (11 to: 13).
	^ [
	(sum
		cover: (88 to: 90)
		declaredAt: (11 to: 13)) +
		([
		(portfolios
			cover: (95 to: 104)
			declaredAt: (95 to: 104))
			sum: [ :aPortfolio |
				[
				(aPortfolio
					cover: (126 to: 135)
					declaredAt: (113 to: 122)) balance ] valueCoveringAll:
					{137 to: 143} ]
			ifEmpty: [
				0 coverAll:
					{156 to: 156} ]] valueCoveringAll:
			{106 to: 109. 146 to: 153}) ] valueCoveringAll:
		{92 to: 92}.! !
!Behavior method!
totalAccounts
	^ [
	([
	(accounts
		cover: (17 to: 24)
		declaredAt: (17 to: 24)) size ] valueCoveringAll:
		{26 to: 29}) +
		([
		(portfolios
			cover: (34 to: 43)
			declaredAt: (34 to: 43))
			sum: [ :aPortfolio |
				[
				(aPortfolio
					cover: (65 to: 74)
					declaredAt: (52 to: 61)) totalAccounts ] valueCoveringAll:
					{76 to: 88} ]
			ifEmpty: [
				0 coverAll:
					{101 to: 101} ]] valueCoveringAll:
			{45 to: 48. 91 to: 98}) ] valueCoveringAll:
		{31 to: 31}.! !
!Behavior method!
totalPortfolios
	^ [
	(portfolios
		cover: (19 to: 28)
		declaredAt: (19 to: 28)) size ] valueCoveringAll:
		{30 to: 33}.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
addAccount: aReceptiveAccount
	[
	([
	(aReceptiveAccount
		cover: (34 to: 50)
		declaredAt: (13 to: 29)) isKindOf:
		(ReceptiveAccount
			cover: (62 to: 77)
			declaredAt: (62 to: 77)) ] valueCoveringAll:
		{52 to: 60}) ifFalse: [ ^ [
		(self coverAll:
			{91 to: 94}) error:
			([
			([
			(self coverAll:
				{103 to: 106}) class ] valueCoveringAll:
				{108 to: 112}) errorInvalidTypeMessage ] valueCoveringAll:
				{114 to: 136}) ] valueCoveringAll:
			{96 to: 101} ]] valueCoveringAll:
		{80 to: 87}.
	[
	([
	(accounts
		cover: (143 to: 150)
		declaredAt: (143 to: 150)) includes:
		(aReceptiveAccount
			cover: (162 to: 178)
			declaredAt: (13 to: 29)) ] valueCoveringAll:
		{152 to: 160}) ifTrue: [ ^ [
		(self coverAll:
			{191 to: 194}) error:
			([
			([
			(self coverAll:
				{203 to: 206}) class ] valueCoveringAll:
				{208 to: 212}) errorAccountAlreadyAddedMessage ] valueCoveringAll:
				{214 to: 244}) ] valueCoveringAll:
			{196 to: 201} ]] valueCoveringAll:
		{181 to: 187}.
	[
	(accounts
		cover: (249 to: 256)
		declaredAt: (143 to: 150)) add:
		(aReceptiveAccount
			cover: (263 to: 279)
			declaredAt: (13 to: 29)) ] valueCoveringAll:
		{258 to: 261}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (11 to: 22)
		declaredAt: (11 to: 22))
		inject:
			(0 coverAll:
				{32 to: 32})
		into: [ :balance :transaction |
			[
			(transaction
				cover: (65 to: 75)
				declaredAt: (51 to: 61)) addTo:
				(balance
					cover: (84 to: 90)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{77 to: 82} ]] valueCoveringAll:
		{24 to: 30. 34 to: 38}.! !

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
errorAccountAlreadyAddedMessage
	^ 'Error account already added to this portfolio.' coverAll:
		{35 to: 82}.! !

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (103 to: 113)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 101}.
	^ transaction
		cover: (122 to: 132)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) +
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
includes: aReceptiveAccount
	^ [
	([
	(accounts
		cover: (33 to: 40)
		declaredAt: (33 to: 40)) includes:
		(aReceptiveAccount
			cover: (52 to: 68)
			declaredAt: (11 to: 27)) ] valueCoveringAll:
		{42 to: 50}) or: [
		[
		(portfolios
			cover: (76 to: 85)
			declaredAt: (76 to: 85)) anySatisfy: [ :aPorfolio |
			[
			(aPorfolio
				cover: (113 to: 121)
				declaredAt: (101 to: 109)) includes:
				(aReceptiveAccount
					cover: (133 to: 149)
					declaredAt: (11 to: 27)) ] valueCoveringAll:
				{123 to: 131} ]] valueCoveringAll:
			{87 to: 97} ]] valueCoveringAll:
		{71 to: 73}.! !

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	([
	(self coverAll:
		{31 to: 34}) transactions ] valueCoveringAll:
		{36 to: 47}) includes:
		(aTransaction
			cover: (59 to: 70)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{49 to: 57}.! !
!Behavior method!
transactions
	| totalTransactions |
	(totalTransactions _ [
	(OrderedCollection
		cover: (59 to: 75)
		declaredAt: (59 to: 75)) new ] valueCoveringAll:
		{77 to: 79})
		cover: (38 to: 54)
		declaredAt: (17 to: 33).
	[
	(accounts
		cover: (83 to: 90)
		declaredAt: (83 to: 90)) do: [ :account |
		[
		(totalTransactions
			cover: (108 to: 124)
			declaredAt: (17 to: 33)) addAll:
			([
			(account
				cover: (135 to: 141)
				declaredAt: (98 to: 104)) transactions ] valueCoveringAll:
				{143 to: 154}) ] valueCoveringAll:
			{126 to: 132} ]] valueCoveringAll:
		{92 to: 94}.
	[
	(portfolios
		cover: (160 to: 169)
		declaredAt: (160 to: 169)) do: [ :portfolio |
		[
		(totalTransactions
			cover: (189 to: 205)
			declaredAt: (17 to: 33)) addAll:
			([
			(portfolio
				cover: (216 to: 224)
				declaredAt: (177 to: 185)) transactions ] valueCoveringAll:
				{226 to: 237}) ] valueCoveringAll:
			{207 to: 213} ]] valueCoveringAll:
		{171 to: 173}.
	^ totalTransactions
		cover: (244 to: 260)
		declaredAt: (17 to: 33).! !
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
addPortfolio: aPortfolio
	[
	([
	(aPortfolio
		cover: (29 to: 38)
		declaredAt: (15 to: 24)) isKindOf:
		(Portfolio
			cover: (50 to: 58)
			declaredAt: (50 to: 58)) ] valueCoveringAll:
		{40 to: 48}) ifFalse: [ ^ [
		(self coverAll:
			{72 to: 75}) error:
			([
			([
			(self coverAll:
				{84 to: 87}) class ] valueCoveringAll:
				{89 to: 93}) errorInvalidTypeMessage ] valueCoveringAll:
				{95 to: 117}) ] valueCoveringAll:
			{77 to: 82} ]] valueCoveringAll:
		{61 to: 68}.
	[
	([
	(portfolios
		cover: (124 to: 133)
		declaredAt: (124 to: 133)) includes:
		(aPortfolio
			cover: (145 to: 154)
			declaredAt: (15 to: 24)) ] valueCoveringAll:
		{135 to: 143}) ifTrue: [ ^ [
		(self coverAll:
			{167 to: 170}) error:
			([
			([
			(self coverAll:
				{179 to: 182}) class ] valueCoveringAll:
				{184 to: 188}) errorPortfolioAlreadyAddedMessage ] valueCoveringAll:
				{190 to: 222}) ] valueCoveringAll:
			{172 to: 177} ]] valueCoveringAll:
		{157 to: 163}.
	[
	(portfolios
		cover: (228 to: 237)
		declaredAt: (124 to: 133)) add:
		(aPortfolio
			cover: (244 to: 253)
			declaredAt: (15 to: 24)) ] valueCoveringAll:
		{239 to: 242}.! !

!testRun: #PortfolioTest #test15 stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
errorPortfolioAlreadyAddedMessage
	^ 'Error Portfolio Already Added.' coverAll:
		{37 to: 68}.! !

!testRun: #PortfolioTest #test16 stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!Behavior method!
errorInvalidTypeMessage
	^ 'Error invalid type.' coverAll:
		{27 to: 47}.! !

!testRun: #PortfolioTest #test19 stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'LB 5/22/2021 10:52:44'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'LB 5/22/2021 10:52:44'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:56:20'!
test15PortfolioShouldBeAbleToAddAnEmptyPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test15 stamp: 'LB 5/22/2021 10:56:20'!
test15
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:56:53'!
test16PortfolioCantAddSameChildPorfolioMoreThanOnce
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self should: [portfolio addPortfolio: childPortfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test16 stamp: 'LB 5/22/2021 10:56:53'!
test16
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self should: [portfolio addPortfolio: childPortfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:57:08'!
test15PortfolioShouldBeAbleToAddAChildPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test15PortfolioShouldBeAbleToAddAnEmptyPortfolio stamp: 'LB 5/22/2021 10:57:08'!
test15PortfolioShouldBeAbleToAddAnEmptyPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 10:58:53'!
test17PortfolioShouldBeAbleToAddMultipleChildPortfolios
	| portfolio childPortfolio1 childPortfolio2 |
	
	portfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	childPortfolio2 := Portfolio new.
	portfolio addPortfolio: childPortfolio1.
	portfolio addPortfolio: childPortfolio2.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test17 stamp: 'LB 5/22/2021 10:58:53'!
test17
	| portfolio childPortfolio1 childPortfolio2 |
	
	portfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	childPortfolio2 := Portfolio new.
	portfolio addPortfolio: childPortfolio1.
	portfolio addPortfolio: childPortfolio2.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:01:01'!
test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	Deposit register: 100 on: account.
	
	portfolio addPortfolio: childPortfolio.
	
	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test18 stamp: 'LB 5/22/2021 11:01:01'!
test18
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	Deposit register: 100 on: account.
	
	portfolio addPortfolio: childPortfolio.
	
	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:03:23'!
test19PortfolioAccountsShouldBeOfTypeAccount
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addAccount: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test19 stamp: 'LB 5/22/2021 11:03:23'!
test19
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addAccount: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:03:51'!
test20ChildPortfoliosShouldBeOfTypePortfolio
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addPortfolio: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test20 stamp: 'LB 5/22/2021 11:03:51'!
test20
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addPortfolio: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:04:41'!
test21PortfolioShouldKnowItsChildPortfoliosAccounts
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	Deposit register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !

!methodRemoval: PortfolioTest #test21 stamp: 'LB 5/22/2021 11:04:41'!
test21
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	Deposit register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:05:13'!
test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio  transactions includes: aTransaction2).! !

!methodRemoval: PortfolioTest #test22 stamp: 'LB 5/22/2021 11:05:13'!
test22
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio  transactions includes: aTransaction2).!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 11:05:19'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 11:05:19'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:08:26'!
test23
	| portfolio |
	
	portfolio := Portfolio new.
	
	portfolio addPortfolio: portfolio.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:19:17' prior: 50867949!
test23
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addPortfolio: portfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage.
	! !

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 11:19:19'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:20:27' prior: 50866786!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((portfolios includes: aPortfolio) or: [self = aPortfolio]) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 11:20:30'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 11:20:30'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:24:59'!
test24
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [childPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:25:30' prior: 50868065!
test24
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [childPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.
	
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: childPortfolio totalAccounts.! !

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 11:25:31'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 11:34:13'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:34:11' prior: 50866696!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((accounts includes: aReceptiveAccount) or: [dadfolio includes: aReceptiveAccount]) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	accounts add: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:36:25' prior: 50867968!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((portfolios includes: aPortfolio) or: [self = aPortfolio]) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	aPortfolio dad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:36:47'!
dad: aPortfolio
	dadfolio := aPortfolio .! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 11:36:49'!
ERROR!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 11:36:49'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 11:36:49'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:37:31' prior: 50866128 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	dadfolio := Portfolio new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:44:45' prior: 50868227 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 11:45:33'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolio dadfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:45:32' prior: 50868235 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	dadfolios := OrderedCollection new.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 11:45:40'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:46:03' prior: 50868123!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((portfolios includes: aPortfolio) or: [self = aPortfolio]) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:46:12'!
newDad: aPortfolio
	dadfolio := aPortfolio .! !

!methodRemoval: Portfolio #dad: stamp: 'LB 5/22/2021 11:46:12'!
dad: aPortfolio
	dadfolio := aPortfolio .!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:46:20' prior: 50868284!
newDad: aPortfolio
	dadfolios add: aPortfolio .! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 11:51:22'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolios dadfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:51:20' prior: 50868109!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((accounts includes: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includes: aReceptiveAccount]]) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	accounts add: aReceptiveAccount.! !

Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 11:51:28'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:51:33' prior: 50868250 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:51:50' prior: 50868292!
newDad: aPortfolio
	dadfolio := aPortfolio .! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 11:52:00'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 11:52:00'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:53:25'!
test25
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: (portfolio includesPortfolio: childPortfolio).! !

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 11:53:35'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:53:40'!
includesPortfolio: aPortfolio 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:54:46' prior: 50868444!
includesPortfolio: aPortfolio 
	^portfolios includes: aPortfolio.! !

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 11:54:47'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 11:54:47'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:55:51'!
test26
	| portfolio childPortfolio grandchildPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.

	self assert: (portfolio includesPortfolio: grandchildPortfolio).! !

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 11:55:52'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:56:22' prior: 50868449!
includesPortfolio: aPortfolio 
	^portfolios anySatisfy: [:childPortfolio | childPortfolio includes: aPortfolio.]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:56:30' prior: 50868562!
includesPortfolio: aPortfolio 
	^portfolios anySatisfy: [:childPortfolio | childPortfolio includesPortfolio: aPortfolio.]! !

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 11:56:32'!
FAILURE!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 11:56:37'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 11:58:33' prior: 50868569!
includesPortfolio: aPortfolio 
	^(portfolios includes: aPortfolio) or: [portfolios anySatisfy: [:childPortfolio | childPortfolio includesPortfolio: aPortfolio.]].! !

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 11:58:34'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 11:58:34'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:02:11'!
test27
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	self should: [childPortfolio addPortfolio: portfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.
	
	self assert: 1 equals: portfolio totalPortfolios .
	self assert: 0 equals: childPortfolio totalPortfolios.! !

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:02:14'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:03:59' prior: 50868271!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((portfolios includes: aPortfolio) or: [dadfolio includesPortfolio: aPortfolio]) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:04:00'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:04:36' prior: 50868703!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((portfolios includes: aPortfolio) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includes: aPortfolio]]) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:04:38'!
FAILURE!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:04:38'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:04:38'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:05:11' prior: 50868719!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(((portfolios includes: aPortfolio) or: [self = aPortfolio]) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includes: aPortfolio]]) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:05:13'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:05:13'!
FAILURE!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:05:13'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:05:43' prior: 50868828!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	
	(((portfolios includes: aPortfolio) or: [self = aPortfolio]) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includesPortfolio: aPortfolio]]) 
		ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
		
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:06:27'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:06:27'!
FAILURE!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:06:27'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:06:37' prior: 50868940!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	
	(((portfolios includesPortfolio: aPortfolio) or: [self = aPortfolio]) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includesPortfolio: aPortfolio]]) 
		ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
		
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:06:40'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:06:40'!
ERROR!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:06:40'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:06:56' prior: 50869053!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	
	(((portfolios includes: aPortfolio) or: [self = aPortfolio]) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includesPortfolio: aPortfolio]]) 
		ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
		
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:07:06' prior: 50869163!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	
	(((self includesPortfolio: aPortfolio) or: [self = aPortfolio]) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includesPortfolio: aPortfolio]]) 
		ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
		
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:07:12'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:07:12'!
FAILURE!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:07:12'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:08:04' prior: 50869179!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	
	((self includesPortfolio: aPortfolio) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includesPortfolio: aPortfolio]]) 
		ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
		
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:08:23' prior: 50868581!
includesPortfolio: aPortfolio 
	^(self = aPortfolio) or: [(portfolios includes: aPortfolio) or: [portfolios anySatisfy: [:childPortfolio | childPortfolio includesPortfolio: aPortfolio.]]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:08:25'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:08:25'!
FAILURE!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:08:25'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:08:46' prior: 50868684!
test27
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	self should: [childPortfolio addPortfolio: portfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .
	
	self assert: 1 equals: portfolio totalPortfolios .
	self assert: 0 equals: childPortfolio totalPortfolios.! !

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:08:48'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:08:49'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:08:49'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:09:36'!
test28
	| portfolio childPortfolio childPortfolio2 |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self should: [childPortfolio addPortfolio: childPortfolio2] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .! !

!testRun: #PortfolioTest #test28 stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'LB 5/22/2021 12:09:38'!
PASSED!

!methodRemoval: PortfolioTest #test28 stamp: 'LB 5/22/2021 12:09:45'!
test28
	| portfolio childPortfolio childPortfolio2 |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self should: [childPortfolio addPortfolio: childPortfolio2] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21'!
includesAccount: aReceptiveAccount 
	^(accounts includes: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includes: aReceptiveAccount]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50866892!
includes: aReceptiveAccount 
	^(accounts includesAccount: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includesAccount: aReceptiveAccount]].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50867817!
test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self assert: (portfolio transactions includesAccount: aTransaction).
	self assert: (portfolio  transactions includesAccount: aTransaction2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50863787!
test07PortfolioShouldKnowItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includesAccount: account).
	self assert: (portfolio includesAccount: account2).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50868305!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((accounts includesAccount: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includesAccount: aReceptiveAccount]]) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	accounts add: aReceptiveAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50864961!
test14PortfolioShouldIncludeItsAccountsTransactions
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio transactions includesAccount: aTransaction).
	self assert: (portfolio transactions includesAccount: aTransaction2).! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50859560!
hasRegistered: aTransaction

	^ transactions includesAccount: aTransaction 
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50859416!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account1.
		
	self assert: 1 equals: account1 transactions size.
	self assert: (account1 transactions includesAccount: deposit1).
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50867766!
test21PortfolioShouldKnowItsChildPortfoliosAccounts
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	Deposit register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.
	self assert: (portfolio includesAccount: account).
	self assert: (portfolio includesAccount: account2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50864937!
test13PortfolioShouldIncludeOnlyItsAccountsTransactions
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio transactions includesAccount: aTransaction).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50869307!
includesPortfolio: aPortfolio 
	^(self = aPortfolio) or: [(portfolios includesAccount: aPortfolio) or: [portfolios anySatisfy: [:childPortfolio | childPortfolio includesPortfolio: aPortfolio.]]].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50864889!
test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio transactions includesAccount: aTransaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50863825!
test08PortfolioShouldKnowOnlyItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Deposit register: 50 on: account2.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includesAccount: account).
	self deny: (portfolio includesAccount: account2).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50864997!
hasRegistered: aTransaction
	^self transactions includesAccount: aTransaction.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:21' prior: 50869749!
includesAccount: aReceptiveAccount 
	^(accounts includesAccount: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includesAccount: aReceptiveAccount]].! !

!methodRemoval: Portfolio #includes: stamp: 'LB 5/22/2021 12:14:21'!
includes: aReceptiveAccount 
	^(accounts includesAccount: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includesAccount: aReceptiveAccount]].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:14:44' prior: 50869950!
hasRegistered: aTransaction
	^self transactions includes: aTransaction.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:15:02' prior: 50869907!
includesPortfolio: aPortfolio 
	^(self = aPortfolio) or: [(portfolios includes: aPortfolio) or: [portfolios anySatisfy: [:childPortfolio | childPortfolio includesPortfolio: aPortfolio.]]].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:15:16' prior: 50869917!
test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio transactions includes: aTransaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:15:21' prior: 50869895!
test13PortfolioShouldIncludeOnlyItsAccountsTransactions
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	aTransaction := Deposit register: 100 on: account.
	
	self deny: (portfolio transactions includes: aTransaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:15:29' prior: 50869829!
test14PortfolioShouldIncludeItsAccountsTransactions
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio transactions includes: aTransaction2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:15:42' prior: 50869766!
test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio  transactions includes: aTransaction2).! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'LB 5/22/2021 12:15:50' prior: 50869849!
hasRegistered: aTransaction

	^ transactions includes: aTransaction 
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'LB 5/22/2021 12:15:53' prior: 50869855!
test07AccountKnowsItsTransactions 

	| account1 deposit1 |
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account1.
		
	self assert: 1 equals: account1 transactions size.
	self assert: (account1 transactions includes: deposit1).
! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:16:00'!
ERROR!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:16:00'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:16:00'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:16:33'!
includes: aReceptiveAccount 
	^(accounts includesAccount: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includesAccount: aReceptiveAccount]].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:16:33' prior: 50869793!
test07PortfolioShouldKnowItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio addAccount: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:16:33' prior: 50869930!
test08PortfolioShouldKnowOnlyItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Deposit register: 50 on: account2.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self deny: (portfolio includes: account2).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:16:33' prior: 50869814!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	((accounts includes: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includes: aReceptiveAccount]]) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	accounts add: aReceptiveAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:16:33' prior: 50869867!
test21PortfolioShouldKnowItsChildPortfoliosAccounts
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio addAccount: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 addAccount: account2.
	Deposit register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:16:33' prior: 50869956!
includesAccount: aReceptiveAccount 
	^(accounts includes: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includes: aReceptiveAccount]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:16:33' prior: 50870170!
includes: aReceptiveAccount 
	^(accounts includes: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includes: aReceptiveAccount]].! !

!methodRemoval: Portfolio #includesAccount: stamp: 'LB 5/22/2021 12:16:33'!
includesAccount: aReceptiveAccount 
	^(accounts includes: aReceptiveAccount) or: [portfolios anySatisfy: [:aPorfolio | aPorfolio includes: aReceptiveAccount]].!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:16:43'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:16:43'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:18:39' prior: 50869413!
test27
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	
	self should: [grandchildPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .
	
	self assert: 1 equals: portfolio totalPortfolios .
	self assert: 0 equals: childPortfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:18:58' prior: 50870380!
test27
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [grandchildPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .! !

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:19:02'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:19:46'!
aaa: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includes: aReceptiveAccount]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:19:46' prior: 50870220!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self aaa: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	accounts add: aReceptiveAccount.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:20:04'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:20:04'!
FAILURE!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:20:04'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:20:41' prior: 50870422!
aaa: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio aaa: aReceptiveAccount]]! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:20:43'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:20:43'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:22:05'!
test28
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [grandchildPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:22:09' prior: 50870402!
test27
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	self should: [childPortfolio addPortfolio: portfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .
	
	self assert: 1 equals: portfolio totalPortfolios .
	self assert: 0 equals: childPortfolio totalPortfolios.! !

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:22:11'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'LB 5/22/2021 12:22:11'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:22:32'!
canAddAccount: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio aaa: aReceptiveAccount]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:22:32' prior: 50870539!
aaa: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio canAddAccount: aReceptiveAccount]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:22:32' prior: 50870430!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self canAddAccount: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	accounts add: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:22:32' prior: 50870775!
canAddAccount: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio canAddAccount: aReceptiveAccount]]! !

!methodRemoval: Portfolio #aaa: stamp: 'LB 5/22/2021 12:22:32'!
aaa: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio canAddAccount: aReceptiveAccount]]!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:22:42'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'LB 5/22/2021 12:22:42'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:23:54'!
test29
	| portfolio childPortfolio grandchildPortfolio conflictingPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	conflictingPortfolio := Portfolio new.
	portfolio addAccount: conflictingPortfolio.
	
	self should: [grandchildPortfolio addAccount: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .! !

!testRun: #PortfolioTest #test29 stamp: 'LB 5/22/2021 12:23:56'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:24:07' prior: 50870914!
test29
	| portfolio childPortfolio grandchildPortfolio conflictingPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	conflictingPortfolio := Portfolio new.
	portfolio addPortfolio: conflictingPortfolio.
	
	self should: [grandchildPortfolio addPortfolio: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .! !

!testRun: #PortfolioTest #test29 stamp: 'LB 5/22/2021 12:24:08'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:24:28'!
aaa: aPortfolio

	^ (self includesPortfolio: aPortfolio) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio includesPortfolio: aPortfolio]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:24:28' prior: 50869292!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	
	(self aaa: aPortfolio) 
		ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
		
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:24:41' prior: 50870958!
aaa: aPortfolio

	^ (self includesPortfolio: aPortfolio) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio aaa: aPortfolio]]! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'LB 5/22/2021 12:24:47'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'LB 5/22/2021 12:24:47'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:25:10'!
canAddPortfolio: aPortfolio

	^ (self includesPortfolio: aPortfolio) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio aaa: aPortfolio]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:25:10' prior: 50870978!
aaa: aPortfolio

	^ (self includesPortfolio: aPortfolio) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio canAddPortfolio: aPortfolio]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:25:10' prior: 50870966!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	
	(self canAddPortfolio: aPortfolio) 
		ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
		
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:25:10' prior: 50871084!
canAddPortfolio: aPortfolio

	^ (self includesPortfolio: aPortfolio) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio canAddPortfolio: aPortfolio]]! !

!methodRemoval: Portfolio #aaa: stamp: 'LB 5/22/2021 12:25:10'!
aaa: aPortfolio

	^ (self includesPortfolio: aPortfolio) or: [dadfolio ifNil: [false] ifNotNil: [dadfolio canAddPortfolio: aPortfolio]]!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test24 stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test25 stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test26 stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test27 stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test28 stamp: 'LB 5/22/2021 12:25:15'!
PASSED!

!testRun: #PortfolioTest #test29 stamp: 'LB 5/22/2021 12:25:15'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:26:32'!
test23PortfolioCannotAddItself
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addPortfolio: portfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage.
	! !

!methodRemoval: PortfolioTest #test23 stamp: 'LB 5/22/2021 12:26:32'!
test23
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio addPortfolio: portfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage.
	!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:27:07'!
test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [childPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.
	
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: childPortfolio totalAccounts.! !

!methodRemoval: PortfolioTest #test24 stamp: 'LB 5/22/2021 12:27:07'!
test24
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [childPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.
	
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: childPortfolio totalAccounts.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:27:45'!
test25PortfolioShouldKnowItsPortfolios
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: (portfolio includesPortfolio: childPortfolio).! !

!methodRemoval: PortfolioTest #test25 stamp: 'LB 5/22/2021 12:27:45'!
test25
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: (portfolio includesPortfolio: childPortfolio).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:28:09'!
test25PortfolioShouldKnowItsOnlyPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: (portfolio includesPortfolio: childPortfolio).! !

!methodRemoval: PortfolioTest #test25PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 12:28:09'!
test25PortfolioShouldKnowItsPortfolios
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: (portfolio includesPortfolio: childPortfolio).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:28:22'!
test26PortfolioShouldKnowItsPortfolios
	| portfolio childPortfolio grandchildPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.

	self assert: (portfolio includesPortfolio: grandchildPortfolio).! !

!methodRemoval: PortfolioTest #test26 stamp: 'LB 5/22/2021 12:28:22'!
test26
	| portfolio childPortfolio grandchildPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.

	self assert: (portfolio includesPortfolio: grandchildPortfolio).!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:30:10'!
test27PortfolioCannotAddAPortfolioKnownByItsFather
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	self should: [childPortfolio addPortfolio: portfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .
	
	self assert: 1 equals: portfolio totalPortfolios .
	self assert: 0 equals: childPortfolio totalPortfolios.! !

!methodRemoval: PortfolioTest #test27 stamp: 'LB 5/22/2021 12:30:10'!
test27
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	self should: [childPortfolio addPortfolio: portfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .
	
	self assert: 1 equals: portfolio totalPortfolios .
	self assert: 0 equals: childPortfolio totalPortfolios.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:31:02'!
test28PortfolioCannotAddAnAccountAlreadyAddedToItsAncestors
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [grandchildPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .! !

!methodRemoval: PortfolioTest #test28 stamp: 'LB 5/22/2021 12:31:02'!
test28
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [grandchildPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:31:18'!
test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [grandchildPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .! !

!methodRemoval: PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyAddedToItsAncestors stamp: 'LB 5/22/2021 12:31:18'!
test28PortfolioCannotAddAnAccountAlreadyAddedToItsAncestors
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio addAccount: account.
	
	self should: [grandchildPortfolio addAccount: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:31:41'!
test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors
	| portfolio childPortfolio grandchildPortfolio conflictingPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	conflictingPortfolio := Portfolio new.
	portfolio addPortfolio: conflictingPortfolio.
	
	self should: [grandchildPortfolio addPortfolio: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .! !

!methodRemoval: PortfolioTest #test29 stamp: 'LB 5/22/2021 12:31:41'!
test29
	| portfolio childPortfolio grandchildPortfolio conflictingPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	conflictingPortfolio := Portfolio new.
	portfolio addPortfolio: conflictingPortfolio.
	
	self should: [grandchildPortfolio addPortfolio: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 12:31:44'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 12:31:44'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:35:29'!
test30
	| father1 father2 portfolio conflictingPortfolio|
	
	father1 := Portfolio new.
	father2 := Portfolio new.
	portfolio := Portfolio new.
	conflictingPortfolio := Portfolio new.
	
	father1 addPortfolio: conflictingPortfolio.
	father1 addPortfolio: portfolio.
	father2 addPortfolio: portfolio.
	
	self should: [portfolio addPortfolio: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .! !

!testRun: #PortfolioTest #test30 stamp: 'LB 5/22/2021 12:35:30'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 12:36:00'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:36:00' prior: 50870803!
canAddAccount: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) or: [dadfolios ifNil: [false] ifNotNil: [dadfolios canAddAccount: aReceptiveAccount]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:36:00' prior: 50871113!
canAddPortfolio: aPortfolio

	^ (self includesPortfolio: aPortfolio) or: [dadfolios ifNil: [false] ifNotNil: [dadfolios canAddPortfolio: aPortfolio]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:36:00' prior: 50868340!
newDad: aPortfolio
	dadfolios := aPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:36:09' prior: 50868334 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	dadfolios := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:36:19' prior: 50871650!
newDad: aPortfolio
	dadfolios add: aPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:37:15' prior: 50871642!
canAddPortfolio: aPortfolio

	^ (self includesPortfolio: aPortfolio) or: [dadfolios anySatisfy: [:aDadfolio | aDadfolio canAddPortfolio: aPortfolio]]! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 12:37:24'!
ERROR!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 12:37:24'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'LB 5/22/2021 12:37:24'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:38:26' prior: 50871633!
canAddAccount: aReceptiveAccount

	^ (accounts includes: aReceptiveAccount) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio canAddAccount: aReceptiveAccount]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 12:38:28'!
PASSED!

!testRun: #PortfolioTest #test30 stamp: 'LB 5/22/2021 12:38:28'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 12:39:38'!
test30PortfolioCanBeAddedToMultiplePortfolios
	| father1 father2 portfolio conflictingPortfolio|
	
	father1 := Portfolio new.
	father2 := Portfolio new.
	portfolio := Portfolio new.
	conflictingPortfolio := Portfolio new.
	
	father1 addPortfolio: conflictingPortfolio.
	father1 addPortfolio: portfolio.
	father2 addPortfolio: portfolio.
	
	self should: [portfolio addPortfolio: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .! !

!methodRemoval: PortfolioTest #test30 stamp: 'LB 5/22/2021 12:39:38'!
test30
	| father1 father2 portfolio conflictingPortfolio|
	
	father1 := Portfolio new.
	father2 := Portfolio new.
	portfolio := Portfolio new.
	conflictingPortfolio := Portfolio new.
	
	father1 addPortfolio: conflictingPortfolio.
	father1 addPortfolio: portfolio.
	father2 addPortfolio: portfolio.
	
	self should: [portfolio addPortfolio: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .!

----QUIT----(22 May 2021 12:42:47) CuisUniversity-4532.image priorSource: 17105354!

----STARTUP---- (22 May 2021 17:13:17) as /home/lbiglieri/Downloads/build/CuisUniversity/imagen1/CuisUniversity-4532.image!


!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 17:21:31'!
PASSED!

Object subclass: #cambiameElNombre
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #Inombrable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Inombrable category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 17:31:53'!
Object subclass: #Inombrable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRenamed: #Inombrable as: #Innombrable stamp: 'LB 5/22/2021 17:32:14'!
Smalltalk renameClassNamed: #Inombrable as: #Innombrable!

Innombrable subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 17:38:46'!
Innombrable subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Innombrable subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 17:38:52'!
Innombrable subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 17:39:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/22/2021 17:39:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/22/2021 17:39:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/22/2021 17:39:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/22/2021 17:39:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/22/2021 17:39:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/22/2021 17:39:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/22/2021 17:39:05'!
PASSED!
!Innombrable methodsFor: 'no messages' stamp: 'LB 5/22/2021 17:40:11'!
balance
	self subclassResponsibility ! !
!Innombrable methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 17:40:43'!
transactions
	self subclassResponsibility ! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/22/2021 17:40:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/22/2021 17:40:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/22/2021 17:40:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/22/2021 17:40:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/22/2021 17:40:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/22/2021 17:40:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/22/2021 17:40:51'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 17:40:53'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 17:40:53'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 17:43:37' prior: 50871321!
test26PortfolioShouldKnowItsPortfolios
	| portfolio childPortfolio grandchildPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.

	self assert: (portfolio includesPortfolio: grandchildPortfolio).
	self assert: 2 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 17:43:39'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 17:44:00' prior: 50865983!
totalPortfolios
	^portfolios size + (portfolios sum: [:aPortfolio | aPortfolio totalPortfolios ] ifEmpty: [0]).! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 17:44:01'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 17:44:01'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:17:28' prior: 50871100!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self canAddPortfolio: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	portfolios add: aPortfolio.
	aPortfolio newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:19:03' prior: 50871786!
canAddAccount: aReceptiveAccount

	^ (self includes: aReceptiveAccount) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio canAddAccount: aReceptiveAccount]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:19:06'!
PASSED!

Innombrable subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolios childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 18:21:15'!
Innombrable subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios dadfolios childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:21:26' prior: 50871656 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	portfolios := OrderedCollection new.
	dadfolios := OrderedCollection new.
	childElements := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:21:37' prior: 50870791!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self canAddAccount: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	childElements add: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:22:15' prior: 50872528!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self canAddPortfolio: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: aPortfolio.
	aPortfolio newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:23:27' prior: 50866425 overrides: 50872243!
balance
	^ childElements sum: [:anElement | anElement balance] ifEmpty: [0]. ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:23:55' prior: 50870270!
includes: aReceptiveAccount 
	^(childElements includes: aReceptiveAccount) or: [childElements anySatisfy: [:aPorfolio | aPorfolio includes: aReceptiveAccount]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:24:29' prior: 50869978!
includesPortfolio: aPortfolio 
	^(self = aPortfolio) or: [(childElements includes: aPortfolio) or: [childElements anySatisfy: [:childPortfolio | childPortfolio includesPortfolio: aPortfolio.]]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:29:14' prior: 50866498!
totalAccounts
	"accounts size + (portfolios sum: [:aPortfolio | aPortfolio totalAccounts] ifEmpty: [0])."
	^childElements sum: [:anElement | (anElement isKindOf: ReceptiveAccount) ifTrue: 1 ifFalse: [anElement totalAccounts]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:30:09' prior: 50872409!
totalPortfolios
	"^portfolios size + (portfolios sum: [:aPortfolio | aPortfolio totalPortfolios ] ifEmpty: [0])."
	^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + anElement totalPortfolios]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:30:58' prior: 50866998 overrides: 50872247!
transactions
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:31:44'!
FAILURE!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:31:44'!
FAILURE!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:31:44'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:31:44'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:31:44'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:31:44'!
ERROR!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:31:44'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:32:00'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:32:01'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:32:12'!
ERROR!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:32:14'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:32:38' prior: 50872734!
totalAccounts
	"accounts size + (portfolios sum: [:aPortfolio | aPortfolio totalAccounts] ifEmpty: [0])."
	^childElements sum: [:anElement | (anElement isKindOf: ReceptiveAccount) ifTrue: 1 ifFalse: [anElement totalAccounts]] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:32:51' prior: 50872745!
totalPortfolios
	"^portfolios size + (portfolios sum: [:aPortfolio | aPortfolio totalPortfolios ] ifEmpty: [0])."
	^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + anElement totalPortfolios]] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:32:55'!
FAILURE!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:32:55'!
FAILURE!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:32:55'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:32:55'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:32:55'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:32:55'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:32:55'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:32:55'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:32:55'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:32:55'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:32:55'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:32:55'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:32:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:33:08'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:34:37'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:35:41' prior: 50872715!
includes: aReceptiveAccount 
	^(childElements includes: aReceptiveAccount) or: [childElements anySatisfy: [:anElement | anElement includes: aReceptiveAccount]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:36:38' prior: 50873032!
includes: aReceptiveAccount 
	^(childElements includes: aReceptiveAccount) or: [childElements anySatisfy: [:anElement | (anElement isKindOf: Portfolio) and: [anElement includes: aReceptiveAccount]]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:36:51'!
FAILURE!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:36:51'!
FAILURE!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:36:51'!
FAILURE!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:36:51'!
FAILURE!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:36:51'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:36:51'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:36:51'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:36:51'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:36:51'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:36:51'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:36:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:36:57'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:38:16' prior: 50872902!
totalPortfolios
	"^portfolios size + (portfolios sum: [:aPortfolio | aPortfolio totalPortfolios ] ifEmpty: [0])."
	^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)]] ifEmpty: [0].! !

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:38:17'!
ERROR!

self!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:41:25'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:41:25'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:43:20' prior: 50873166!
totalPortfolios
	"^portfolios size + (portfolios sum: [:aPortfolio | aPortfolio totalPortfolios ] ifEmpty: [0])."
	^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/22/2021 18:43:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/22/2021 18:43:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/22/2021 18:43:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/22/2021 18:43:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/22/2021 18:43:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/22/2021 18:43:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/22/2021 18:43:28'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:43:31'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:43:31'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:43:31'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:43:53'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:45:50' prior: 50872724!
includesPortfolio: aPortfolio 
	^(self = aPortfolio) or: [(childElements includes: aPortfolio) or: [childElements anySatisfy: [:anElement | (anElement isKindOf: Portfolio) and: [anElement includesPortfolio: aPortfolio]]]]! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:45:53'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:45:53'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:48:39' prior: 50873041!
includes: anElement
	^(self = anElement) or: [(childElements includes: anElement) or: [childElements anySatisfy: [:aChildElement | (aChildElement isKindOf: Portfolio) and: [aChildElement includes: anElement]]]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:48:47'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:48:47'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:49:08' prior: 50871668!
canAddPortfolio: aPortfolio

	^ (self includes: aPortfolio) or: [dadfolios anySatisfy: [:aDadfolio | aDadfolio canAddPortfolio: aPortfolio]]! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:49:10'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:49:10'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:49:43' prior: 50871300!
test25PortfolioShouldKnowItsOnlyPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.

	self assert: (portfolio includes: childPortfolio).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:49:47' prior: 50872390!
test26PortfolioShouldKnowItsPortfolios
	| portfolio childPortfolio grandchildPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.

	self assert: (portfolio includes: grandchildPortfolio).
	self assert: 2 equals: portfolio totalPortfolios.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:49:52'!
PASSED!

!methodRemoval: Portfolio #includesPortfolio: stamp: 'LB 5/22/2021 18:50:12'!
includesPortfolio: aPortfolio 
	^(self = aPortfolio) or: [(childElements includes: aPortfolio) or: [childElements anySatisfy: [:anElement | (anElement isKindOf: Portfolio) and: [anElement includesPortfolio: aPortfolio]]]]!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:50:21'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:50:21'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:50:35' prior: 50872675 overrides: 16896425!
initialize
	accounts := OrderedCollection new.
	dadfolios := OrderedCollection new.
	childElements := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:50:52' prior: 50873966 overrides: 16896425!
initialize
	dadfolios := OrderedCollection new.
	childElements := OrderedCollection new.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:50:54'!
PASSED!

Innombrable subclass: #Portfolio
	instanceVariableNames: 'dadfolios childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'LB 5/22/2021 18:51:06'!
Innombrable subclass: #Portfolio
	instanceVariableNames: 'dadfolios childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:51:20'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:51:20'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:52:01'!
canAdd: anElement

	^ (self includes: anElement) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio canAdd: anElement]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:52:11' prior: 50872684!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self canAdd: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	childElements add: aReceptiveAccount.! !

!methodRemoval: Portfolio #canAddAccount: stamp: 'LB 5/22/2021 18:52:17'!
canAddAccount: aReceptiveAccount

	^ (self includes: aReceptiveAccount) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio canAddAccount: aReceptiveAccount]].!

!methodRemoval: Portfolio #canAddPortfolio: stamp: 'LB 5/22/2021 18:52:23'!
canAddPortfolio: aPortfolio

	^ (self includes: aPortfolio) or: [dadfolios anySatisfy: [:aDadfolio | aDadfolio canAddPortfolio: aPortfolio]]!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:52:27' prior: 50872696!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self canAdd: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: aPortfolio.
	aPortfolio newDad: self.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 18:52:30'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 18:52:30'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:52:46' prior: 50872891!
totalAccounts
	^childElements sum: [:anElement | (anElement isKindOf: ReceptiveAccount) ifTrue: 1 ifFalse: [anElement totalAccounts]] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:52:51' prior: 50873189!
totalPortfolios
	^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0].! !

----SNAPSHOT----(22 May 2021 18:54:29) CuisUniversity-4532.image priorSource: 17289257!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:57:16'!
add: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self canAdd: anElement) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: anElement.
	(anElement isKindOf: Innombrable) ifTrue: [anElement newDad: self].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:59:39'!
elementAlreadyInTree: anElement

	^ (self includes: anElement) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio canAdd: anElement]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:59:39' prior: 50874216!
canAdd: anElement

	^ (self includes: anElement) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio elementAlreadyInTree: anElement]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:59:39' prior: 50874249!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: aPortfolio.
	aPortfolio newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:59:39' prior: 50874223!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	childElements add: aReceptiveAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:59:39' prior: 50874392!
add: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: anElement) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: anElement.
	(anElement isKindOf: Innombrable) ifTrue: [anElement newDad: self].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 18:59:39' prior: 50874405!
elementAlreadyInTree: anElement

	^ (self includes: anElement) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio elementAlreadyInTree: anElement]].! !

!methodRemoval: Portfolio #canAdd: stamp: 'LB 5/22/2021 18:59:39'!
canAdd: anElement

	^ (self includes: anElement) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio elementAlreadyInTree: anElement]].!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:00:06'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:00:08'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:00:08'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:00:40' prior: 50874447!
add: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: anElement) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: anElement.
	(anElement isKindOf: Portfolio) ifTrue: [anElement newDad: self].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:01:39'!
addd: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: anElement) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: anElement.
	(anElement isKindOf: Portfolio) ifTrue: [anElement newDad: self].! !

!methodRemoval: Portfolio #add: stamp: 'LB 5/22/2021 19:01:45'!
add: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: anElement) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: anElement.
	(anElement isKindOf: Portfolio) ifTrue: [anElement newDad: self].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01'!
add: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	childElements add: aReceptiveAccount.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50870179!
test07PortfolioShouldKnowItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio add: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50871416!
test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	childPortfolio addPortfolio: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [grandchildPortfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50870013!
test14PortfolioShouldIncludeItsAccountsTransactions
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio add: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio transactions includes: aTransaction2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50870033!
test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio add: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 add: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio  transactions includes: aTransaction2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50871245!
test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio addPortfolio: childPortfolio.
	
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [childPortfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.
	
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: childPortfolio totalAccounts.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50864829!
test11PortfolioShouldKnowItsAccountsTransactions
	| portfolio account aTransaction account2 aTransaction2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio add: account2.
	aTransaction2 := Withdraw register: 100 on: account2.
	
	self assert: (portfolio hasRegistered: aTransaction).
	self assert: (portfolio hasRegistered: aTransaction2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50863668!
test03PortfolioCantAddSameAccountMoreThanOnce
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [portfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50863754!
test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio add: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50863701!
test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50867712!
test19PortfolioAccountsShouldBeOfTypeAccount
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio add: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50863644!
test02AddEmptyAccountShouldRegisterAccountWithNoBalance
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50864769!
test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio hasRegistered: aTransaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50870200!
test08PortfolioShouldKnowOnlyItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Deposit register: 50 on: account2.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self deny: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50867679!
test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	portfolio addPortfolio: childPortfolio.
	
	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50863727!
test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50869988!
test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount
	| portfolio account aTransaction|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	aTransaction := Deposit register: 100 on: account.
	
	self assert: (portfolio transactions includes: aTransaction).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:01' prior: 50870235!
test21PortfolioShouldKnowItsChildPortfoliosAccounts
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 add: account2.
	Deposit register: 50 on: account2.
	
	portfolio addPortfolio: childPortfolio.
	portfolio addPortfolio: childPortfolio2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !

!methodRemoval: Portfolio #addAccount: stamp: 'LB 5/22/2021 19:02:01'!
addAccount: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	childElements add: aReceptiveAccount.!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:02:07'!
PASSED!

!methodRemoval: Portfolio #add: stamp: 'LB 5/22/2021 19:02:17'!
add: aReceptiveAccount 
	(aReceptiveAccount isKindOf: ReceptiveAccount) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: aReceptiveAccount) ifTrue: [^self error: self class errorAccountAlreadyAddedMessage]. 
	childElements add: aReceptiveAccount.!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28'!
add: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: aPortfolio.
	aPortfolio newDad: self.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50867621!
test15PortfolioShouldBeAbleToAddAChildPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50874770!
test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [grandchildPortfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50871457!
test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors
	| portfolio childPortfolio grandchildPortfolio conflictingPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	conflictingPortfolio := Portfolio new.
	portfolio add: conflictingPortfolio.
	
	self should: [grandchildPortfolio add: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50867739!
test20ChildPortfoliosShouldBeOfTypePortfolio
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio add: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50867587!
test16PortfolioCantAddSameChildPorfolioMoreThanOnce
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.

	self should: [portfolio add: childPortfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50871905!
test30PortfolioCanBeAddedToMultiplePortfolios
	| father1 father2 portfolio conflictingPortfolio|
	
	father1 := Portfolio new.
	father2 := Portfolio new.
	portfolio := Portfolio new.
	conflictingPortfolio := Portfolio new.
	
	father1 add: conflictingPortfolio.
	father1 add: portfolio.
	father2 add: portfolio.
	
	self should: [portfolio add: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50875030!
test21PortfolioShouldKnowItsChildPortfoliosAccounts
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 add: account2.
	Deposit register: 50 on: account2.
	
	portfolio add: childPortfolio.
	portfolio add: childPortfolio2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50873706!
test25PortfolioShouldKnowItsOnlyPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.

	self assert: (portfolio includes: childPortfolio).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50873717!
test26PortfolioShouldKnowItsPortfolios
	| portfolio childPortfolio grandchildPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	portfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.

	self assert: (portfolio includes: grandchildPortfolio).
	self assert: 2 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50867648!
test17PortfolioShouldBeAbleToAddMultipleChildPortfolios
	| portfolio childPortfolio1 childPortfolio2 |
	
	portfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	childPortfolio2 := Portfolio new.
	portfolio add: childPortfolio1.
	portfolio add: childPortfolio2.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50874835!
test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [childPortfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorAccountAlreadyAddedMessage.
	
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: childPortfolio totalAccounts.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50874984!
test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	portfolio add: childPortfolio.
	
	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50874809!
test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions
	| portfolio childPortfolio childPortfolio2 account account2 aTransaction aTransaction2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio add: account.
	aTransaction := Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 add: account2.
	aTransaction2 := Withdraw register: 50 on: account2.
	
	portfolio add: childPortfolio.
	portfolio add: childPortfolio2.
	
	self assert: (portfolio transactions includes: aTransaction).
	self assert: (portfolio  transactions includes: aTransaction2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50871226!
test23PortfolioCannotAddItself
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio add: portfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:28' prior: 50871347!
test27PortfolioCannotAddAPortfolioKnownByItsFather
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	
	self should: [childPortfolio add: portfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorPortfolioAlreadyAddedMessage .
	
	self assert: 1 equals: portfolio totalPortfolios .
	self assert: 0 equals: childPortfolio totalPortfolios.! !

!methodRemoval: Portfolio #addPortfolio: stamp: 'LB 5/22/2021 19:02:28'!
addPortfolio: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: aPortfolio.
	aPortfolio newDad: self.!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:02:32'!
ERROR!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:02:32'!
PASSED!

!methodRemoval: Portfolio #add: stamp: 'LB 5/22/2021 19:02:42'!
add: aPortfolio 
	(aPortfolio isKindOf: Portfolio) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: aPortfolio) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: aPortfolio.
	aPortfolio newDad: self.!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:02:48'!
add: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: anElement) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: anElement.
	(anElement isKindOf: Portfolio) ifTrue: [anElement newDad: self].! !

!methodRemoval: Portfolio #addd: stamp: 'LB 5/22/2021 19:02:48'!
addd: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: anElement) ifTrue: [^self error: self class errorPortfolioAlreadyAddedMessage ].
	childElements add: anElement.
	(anElement isKindOf: Portfolio) ifTrue: [anElement newDad: self].!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:02:50'!
FAILURE!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:02:50'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:02:51'!
FAILURE!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:02:51'!
FAILURE!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:02:51'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:02:51'!
PASSED!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:03:56'!
errorElementAlreadyAddedMessage
	^'Error Portfolio Already Added.'! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:03:56' prior: 50875449!
test27PortfolioCannotAddAPortfolioKnownByItsFather
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	
	self should: [childPortfolio add: portfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage .
	
	self assert: 1 equals: portfolio totalPortfolios .
	self assert: 0 equals: childPortfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:03:56' prior: 50875289!
test30PortfolioCanBeAddedToMultiplePortfolios
	| father1 father2 portfolio conflictingPortfolio|
	
	father1 := Portfolio new.
	father2 := Portfolio new.
	portfolio := Portfolio new.
	conflictingPortfolio := Portfolio new.
	
	father1 add: conflictingPortfolio.
	father1 add: portfolio.
	father2 add: portfolio.
	
	self should: [portfolio add: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:03:56' prior: 50875438!
test23PortfolioCannotAddItself
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio add: portfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage.
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:03:56' prior: 50875235!
test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors
	| portfolio childPortfolio grandchildPortfolio conflictingPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	conflictingPortfolio := Portfolio new.
	portfolio add: conflictingPortfolio.
	
	self should: [grandchildPortfolio add: conflictingPortfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:03:56' prior: 50875271!
test16PortfolioCantAddSameChildPorfolioMoreThanOnce
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.

	self should: [portfolio add: childPortfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalPortfolios.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:03:56' prior: 50875599!
add: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	(self elementAlreadyInTree: anElement) ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].
	childElements add: anElement.
	(anElement isKindOf: Portfolio) ifTrue: [anElement newDad: self].! !

!methodRemoval: Portfolio class #errorPortfolioAlreadyAddedMessage stamp: 'LB 5/22/2021 19:03:56'!
errorPortfolioAlreadyAddedMessage
	^'Error Portfolio Already Added.'!

!methodRemoval: Portfolio class #errorElementAlreadyAddedMessage stamp: 'LB 5/22/2021 19:04:12'!
errorElementAlreadyAddedMessage
	^'Error Portfolio Already Added.'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:04:21'!
errorElementAlreadyAddedMessage
	^'Error account already added to this portfolio.'! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:04:21' prior: 50874874!
test03PortfolioCantAddSameAccountMoreThanOnce
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [portfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:04:21' prior: 50875216!
test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors
	| portfolio childPortfolio grandchildPortfolio account|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.
	
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [grandchildPortfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:04:21' prior: 50875376!
test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [childPortfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage.
	
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: childPortfolio totalAccounts.! !

!methodRemoval: Portfolio class #errorAccountAlreadyAddedMessage stamp: 'LB 5/22/2021 19:04:21'!
errorAccountAlreadyAddedMessage
	^'Error account already added to this portfolio.'!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:04:24'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:04:24'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:05:33' prior: 50873464!
includes: anElement
	^(self = anElement) 
		or: [(childElements includes: anElement) 
		or: [childElements anySatisfy: [:aChildElement | (aChildElement isKindOf: Portfolio) 
				and: [aChildElement includes: anElement]]]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:05:35'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:05:35'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:10:28' prior: 50874381!
totalPortfolios
	^(childElements select: [:anElement | anElement isKindOf: Portfolio]) sum: [:aPortfolio | 1  + (aPortfolio totalPortfolios)] ifEmpty: [0].
	"^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0]."! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:10:29'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:10:29'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:10:41' prior: 50876150!
totalPortfolios
	^(childElements select: [:anElement | anElement isKindOf: Portfolio]) 
		sum: [:aPortfolio | 1  + (aPortfolio totalPortfolios)] ifEmpty: [0].
	"^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0]."! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:11:36' prior: 50874373!
totalAccounts
	^childElements sum: [:anElement | (anElement isKindOf: ReceptiveAccount) ifTrue: 1 ifFalse: [anElement totalAccounts]] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:11:52'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:11:52'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:14:22' prior: 50872756 overrides: 50872247!
transactions
	"| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions"
	^childElements inject: OrderedCollection new into: [:totalTransactions :anElement | totalTransactions addAll: (anElement transactions)].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:14:25'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:14:25'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:14:25'!
FAILURE!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:14:25'!
PASSED!

#(1 2 3 4) inject: OrderedCollection new into: [:totalTransactions :anElement | totalTransactions add: (anElement+1)] .!

#(1 2 3 4) inject: OrderedCollection new into: [:totalTransactions :anElement | totalTransactions add: (anElement+1)] .!

#(1 2 3 4) inject: OrderedCollection new into: [:totalTransactions :anElement | anElement add: (totalTransactions+1)] .!

#(1 2 3 4) inject: (OrderedCollection new) into: [:totalTransactions :anElement | anElement add: (totalTransactions+1)] .!

#(1 2 3 4) inject: (OrderedCollection new) into: [:totalTransactions :anElement | totalTransactions add: (anElement+1)] .!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:19:01' prior: 50876407 overrides: 50872247!
transactions
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:19:02'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:19:02'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:23:20'!
assertNotInTree: anElement 
	(self elementAlreadyInTree: anElement) ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:23:36' prior: 50875826!
add: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage ].
	self assertNotInTree: anElement.
	childElements add: anElement.
	(anElement isKindOf: Portfolio) ifTrue: [anElement newDad: self].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:23:37'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:23:37'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:24:35'!
assertBelongsInPortfolio: anElement 
	(anElement isKindOf: Innombrable) ifFalse: [^self error: self class errorInvalidTypeMessage].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/22/2021 19:24:50' prior: 50876680!
add: anElement 
	self assertBelongsInPortfolio: anElement.
	self assertNotInTree: anElement.
	childElements add: anElement.
	(anElement isKindOf: Portfolio) ifTrue: [anElement newDad: self].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/22/2021 19:24:52'!
PASSED!

----QUIT----(22 May 2021 19:30:59) CuisUniversity-4532.image priorSource: 17367613!

----STARTUP---- (24 May 2021 15:59:35) as /home/lbiglieri/Downloads/build/CuisUniversity/empiezaelRefactorMonstruoso2/CuisUniversity-4532.image!


!classRenamed: #Innombrable as: #FinancesAdministrator stamp: 'lb 5/24/2021 16:19:45'!
Smalltalk renameClassNamed: #Innombrable as: #FinancesAdministrator!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:19:45' prior: 50876802!
assertBelongsInPortfolio: anElement 
	(anElement isKindOf: FinancesAdministrator) ifFalse: [^self error: self class errorInvalidTypeMessage].! !
!FinancesAdministrator methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:21:55'!
hasRegistered: aTransaction
	self subclassResponsibility ! !
!FinancesAdministrator methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:22:36' overrides: 16896425!
initialize
	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:26:13' prior: 50876810!
add: anElement 
	self assertBelongsInPortfolio: anElement.
	self assertNotInTree: anElement.
	childElements add: anElement.
	anElement newDad: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:26:24'!
addTo: aPortfolio
	dadfolios add: aPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:26:24' prior: 50876962!
add: anElement 
	self assertBelongsInPortfolio: anElement.
	self assertNotInTree: anElement.
	childElements add: anElement.
	anElement addTo: self.! !

!methodRemoval: Portfolio #newDad: stamp: 'lb 5/24/2021 16:26:24'!
newDad: aPortfolio
	dadfolios add: aPortfolio .!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'lb 5/24/2021 16:26:47'!
addTo: aPortfolio! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:27:49'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:27:49'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'lb 5/24/2021 16:32:31'!
includes: anElement
	^self = anElement! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:33:58' prior: 50876028!
includes: anElement
	"^(self = anElement) 
		or: [(childElements includes: anElement) 
		or: [childElements anySatisfy: [:aChildElement | (aChildElement isKindOf: Portfolio) 
				and: [aChildElement includes: anElement]]]]."
	
	^(self = anElement) or: [childElements anySatisfy: [:aChildElement | aChildElement includes: anElement]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:34:16'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:34:16'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:35:09' prior: 50877106!
includes: aFinancesAdministrator
	"^(self = anElement) 
		or: [(childElements includes: anElement) 
		or: [childElements anySatisfy: [:aChildElement | (aChildElement isKindOf: Portfolio) 
				and: [aChildElement includes: anElement]]]]."
	
	^(self = aFinancesAdministrator) or: [childElements anySatisfy: [:aChildElement | aChildElement includes: aFinancesAdministrator]].! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'lb 5/24/2021 16:35:22' prior: 50877101!
includes: aFinancesAdministrator
	^self = aFinancesAdministrator! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:37:17' prior: 50876287!
totalAccounts
	"^childElements sum: [:anElement | (anElement isKindOf: ReceptiveAccount) ifTrue: 1 ifFalse: [anElement totalAccounts]] ifEmpty: [0]."
	^childElements sum: [:aFinancesAdministrator | aFinancesAdministrator totalAccounts] ifEmpty: [0].! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'lb 5/24/2021 16:37:25'!
totalAccounts 

	^ 1! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:37:28'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:37:28'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24'!
totalChildPortfolios
	^(childElements select: [:anElement | anElement isKindOf: Portfolio]) 
		sum: [:aPortfolio | 1  + (aPortfolio totalPortfolios)] ifEmpty: [0].
	"^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0]."! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50875002!
test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50875307!
test21PortfolioShouldKnowItsChildPortfoliosAccounts
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 add: account2.
	Deposit register: 50 on: account2.
	
	portfolio add: childPortfolio.
	portfolio add: childPortfolio2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalChildPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50875202!
test15PortfolioShouldBeAbleToAddAChildPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50874750!
test07PortfolioShouldKnowItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio add: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50875395!
test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	portfolio add: childPortfolio.
	
	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50875344!
test26PortfolioShouldKnowItsPortfolios
	| portfolio childPortfolio grandchildPortfolio|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	grandchildPortfolio := Portfolio new.
	
	portfolio add: childPortfolio.
	childPortfolio add: grandchildPortfolio.

	self assert: (portfolio includes: grandchildPortfolio).
	self assert: 2 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50863625!
test01NewPortfolioShouldBeEmptyAndHaveZeroBalance
	| portfolio |
	
	portfolio := Portfolio new.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50874965!
test08PortfolioShouldKnowOnlyItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Deposit register: 50 on: account2.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.
	self assert: (portfolio includes: account).
	self deny: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50874891!
test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio add: account2.
	Deposit register: 50 on: account2.

	self assert: 150 equals: portfolio balance.
	self assert: 2 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50875742!
test27PortfolioCannotAddAPortfolioKnownByItsFather
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	
	self should: [childPortfolio add: portfolio] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage .
	
	self assert: 1 equals: portfolio totalChildPortfolios .
	self assert: 0 equals: childPortfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50874909!
test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.

	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50874924!
test19PortfolioAccountsShouldBeOfTypeAccount
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio add: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:24' prior: 50876274!
totalPortfolios
	^(childElements select: [:anElement | anElement isKindOf: Portfolio]) 
		sum: [:aPortfolio | 1  + (aPortfolio totalChildPortfolios)] ifEmpty: [0].
	"^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0]."! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:25' prior: 50875808!
test16PortfolioCantAddSameChildPorfolioMoreThanOnce
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.

	self should: [portfolio add: childPortfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:25' prior: 50875856!
test03PortfolioCantAddSameAccountMoreThanOnce
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [portfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:25' prior: 50875256!
test20ChildPortfoliosShouldBeOfTypePortfolio
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio add: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:25' prior: 50875359!
test17PortfolioShouldBeAbleToAddMultipleChildPortfolios
	| portfolio childPortfolio1 childPortfolio2 |
	
	portfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	childPortfolio2 := Portfolio new.
	portfolio add: childPortfolio1.
	portfolio add: childPortfolio2.

	self assert: 0 equals: portfolio balance.
	self assert: 0 equals: portfolio totalAccounts.
	self assert: 2 equals: portfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:25' prior: 50874939!
test02AddEmptyAccountShouldRegisterAccountWithNoBalance
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.

	self assert: 0 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 0 equals: portfolio totalChildPortfolios.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:40:25' prior: 50877379!
totalChildPortfolios
	^(childElements select: [:anElement | anElement isKindOf: Portfolio]) 
		sum: [:aPortfolio | 1  + (aPortfolio totalChildPortfolios)] ifEmpty: [0].
	"^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0]."! !

!methodRemoval: Portfolio #totalPortfolios stamp: 'lb 5/24/2021 16:40:25'!
totalPortfolios
	^(childElements select: [:anElement | anElement isKindOf: Portfolio]) 
		sum: [:aPortfolio | 1  + (aPortfolio totalChildPortfolios)] ifEmpty: [0].
	"^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0]."!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:40:29'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:40:29'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:41:55'!
totalPortfolios
	^childElements sum: [:aFinancesAdministrator | 1  + (aFinancesAdministrator totalPortfolios)] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:42:43' prior: 50877691!
totalChildPortfolios
	"^(childElements select: [:anElement | anElement isKindOf: Portfolio]) 
		sum: [:aPortfolio | 1  + (aPortfolio totalChildPortfolios)] ifEmpty: [0].
	^childElements sum: [:anElement | (anElement isKindOf: Portfolio ) ifTrue: [1  + (anElement totalPortfolios)] ifFalse: [0]] ifEmpty: [0]."
	
	^childElements sum: [:aFinancesAdministrator | aFinancesAdministrator totalPortfolios] ifEmpty: [0].! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'lb 5/24/2021 16:42:55'!
totalPortfolios 

	^ 0! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:44:42'!
FAILURE!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:44:42'!
FAILURE!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:44:42'!
FAILURE!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:44:42'!
FAILURE!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:44:42'!
FAILURE!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:44:42'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:44:42'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:45:08' prior: 50877827!
totalPortfolios
	^childElements sum: [:aFinancesAdministrator | 1  + (aFinancesAdministrator totalPortfolios)] ifEmpty: [1].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:45:13'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:45:13'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:46:50' prior: 50876552 overrides: 50872247!
transactions
	"| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions"
	
	^childElements inject: OrderedCollection new into: [:totalTransactions :aFinancesAdministrator | totalTransactions addAll: (aFinancesAdministrator transactions)].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:46:52'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:46:52'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:46:52'!
FAILURE!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:46:52'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:48:22'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:48:22'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:48:22'!
FAILURE!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:48:22'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:48:33'!
FAILURE!

self transactions!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:52:17' prior: 50878086 overrides: 50872247!
transactions
	"| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions"
	| tt |
	tt := childElements inject: OrderedCollection new into: [:totalTransactions :aFinancesAdministrator | totalTransactions addAll: (aFinancesAdministrator transactions)].
	
	^tt.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:52:19'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:52:19'!
FAILURE!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:52:19'!
FAILURE!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:52:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:52:21'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:53:54' prior: 50878329 overrides: 50872247!
transactions
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions! !

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:53:56'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 16:53:59'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:54:52' prior: 50874461!
elementAlreadyInTree: aFinancesAdministrator

	^ (self includes: aFinancesAdministrator) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio elementAlreadyInTree: aFinancesAdministrator]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:55:05' prior: 50877253!
totalAccounts
	^childElements sum: [:aFinancesAdministrator | aFinancesAdministrator totalAccounts] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:55:12' prior: 50877834!
totalChildPortfolios
	^childElements sum: [:aFinancesAdministrator | aFinancesAdministrator totalPortfolios] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:56:02' prior: 50876975!
add: aFinancesAdministrator 
	self assertBelongsInPortfolio: aFinancesAdministrator.
	self assertNotInTree: aFinancesAdministrator.
	childElements add: aFinancesAdministrator.
	aFinancesAdministrator addTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:56:12' prior: 50876943!
assertBelongsInPortfolio: aFinancesAdministrator 
	(aFinancesAdministrator isKindOf: FinancesAdministrator) ifFalse: [^self error: self class errorInvalidTypeMessage].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:56:18' prior: 50876672!
assertNotInTree: aFinancesAdministrator 
	(self elementAlreadyInTree: aFinancesAdministrator) ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:56:24' prior: 50872709 overrides: 50872243!
balance
	^ childElements sum: [:aFinancesAdministrator | aFinancesAdministrator balance] ifEmpty: [0]. ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:56:38' prior: 50877232!
includes: aFinancesAdministrator
	^(self = aFinancesAdministrator) or: [childElements anySatisfy: [:aChildElement | aChildElement includes: aFinancesAdministrator]].! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'lb 5/24/2021 16:57:15' prior: 50877850!
totalPortfolios 
	^ 0! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'lb 5/24/2021 16:57:18' prior: 50877264!
totalAccounts 
	^ 1! !
!FinancesAdministrator methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:57:26'!
totalAccounts 
	self subclassResponsibility ! !
!FinancesAdministrator methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:57:37'!
totalPortfolios 
	self subclassResponsibility ! !
!FinancesAdministrator methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:57:56'!
includes: aFinancesAdministrator
	self subclassResponsibility ! !
!FinancesAdministrator methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 16:58:12'!
addTo: aPortfolio 
	self subclassResponsibility ! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 17:02:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'lb 5/24/2021 17:02:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'lb 5/24/2021 17:02:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'lb 5/24/2021 17:02:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'lb 5/24/2021 17:02:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'lb 5/24/2021 17:02:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'lb 5/24/2021 17:02:38'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'lb 5/24/2021 17:02:38'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'lb 5/24/2021 17:08:21'!
test08
	| account1 |
	
	account1 := ReceptiveAccount new.
	
	self should: [Deposit register: 'ocho' on: account1] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'lb 5/24/2021 17:08:32'!
ERROR!
!AccountTransaction class methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 17:09:05'!
invalidTypeMessage
	self shouldBeImplemented.! !
!AccountTransaction class methodsFor: 'as yet unclassified' stamp: 'lb 5/24/2021 17:09:37' prior: 50878828!
invalidTypeMessage
	^ 'Invalid type'! !

!testRun: #ReceptiveAccountTest #test08 stamp: 'lb 5/24/2021 17:09:38'!
FAILURE!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'lb 5/24/2021 17:11:28' prior: 50859453!
register: aValue on: account

	| transaction |
	
	(aValue isKindOf: Number)	 ifFalse: [^self error: self invalidTypeMessage].
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'lb 5/24/2021 17:11:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'lb 5/24/2021 17:11:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'lb 5/24/2021 17:11:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'lb 5/24/2021 17:11:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'lb 5/24/2021 17:11:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'lb 5/24/2021 17:11:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'lb 5/24/2021 17:11:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test08 stamp: 'lb 5/24/2021 17:11:32'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'lb 5/24/2021 17:12:54'!
test08AccountTransactionValueShouldBeNumeric
	| account1 |
	
	account1 := ReceptiveAccount new.
	
	self should: [Deposit register: 'ocho' on: account1] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.! !

!methodRemoval: ReceptiveAccountTest #test08 stamp: 'lb 5/24/2021 17:12:59'!
test08
	| account1 |
	
	account1 := ReceptiveAccount new.
	
	self should: [Deposit register: 'ocho' on: account1] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'lb 5/24/2021 17:14:09' prior: 50878879!
test08AccountTransactionValueShouldBeNumeric

	self should: [Deposit register: 100 on: 'This is an account. Trust me.'] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'lb 5/24/2021 17:14:19' prior: 50878899!
test08AccountTransactionValueShouldBeNumeric

	self should: [Withdraw register: 100 on: 'This is an account. Trust me.'] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.! !

----SNAPSHOT----(24 May 2021 17:16:38) CuisUniversity-4532.image priorSource: 17448948!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'lb 5/24/2021 17:18:40'!
test09

	self should: [Withdraw register: 100 on: 'This is an account. Trust me.'] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'lb 5/24/2021 17:18:51' prior: 50878909!
test08AccountTransactionValueShouldBeNumeric
	| account1 |
	
	account1 := ReceptiveAccount new.
	
	self should: [Deposit register: 'ocho' on: account1] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.! !

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'lb 5/24/2021 17:18:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'lb 5/24/2021 17:18:59'!
ERROR!

!testRun: #ReceptiveAccountTest #test09 stamp: 'lb 5/24/2021 17:18:59'!
ERROR!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'lb 5/24/2021 17:19:45' prior: 50878841!
register: aValue on: account

	| transaction |
	
	((aValue isKindOf: Number) and: [account isKindOf: ReceptiveAccount])	 ifFalse: [^self error: self invalidTypeMessage].
	
	transaction := self for: aValue.
	account register: transaction.
		
	^ transaction! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'lb 5/24/2021 17:19:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'lb 5/24/2021 17:19:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'lb 5/24/2021 17:19:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'lb 5/24/2021 17:19:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'lb 5/24/2021 17:19:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'lb 5/24/2021 17:19:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'lb 5/24/2021 17:19:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'lb 5/24/2021 17:19:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test09 stamp: 'lb 5/24/2021 17:19:47'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'lb 5/24/2021 17:20:24'!
test09AccountTransactionShouldBeRegisteredToAReceptiveAccount

	self should: [Withdraw register: 100 on: 'This is an account. Trust me.'] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.! !

!methodRemoval: ReceptiveAccountTest #test09 stamp: 'lb 5/24/2021 17:20:28'!
test09

	self should: [Withdraw register: 100 on: 'This is an account. Trust me.'] raise: Error - MessageNotUnderstood withMessageText: AccountTransaction invalidTypeMessage.!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'lb 5/24/2021 17:20:30'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'lb 5/24/2021 17:20:32'!
PASSED!

----SNAPSHOT----(24 May 2021 17:20:41) CuisUniversity-4532.image priorSource: 17512567!

----STARTUP---- (24 May 2021 19:17:28) as /home/lbiglieri/Downloads/build/CuisUniversity/v1.0/CuisUniversity-4532.image!


!classRenamed: #FinancesAdministrator as: #PortfolioEntry stamp: 'LB 5/24/2021 20:15:48'!
Smalltalk renameClassNamed: #FinancesAdministrator as: #PortfolioEntry!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:15:48' prior: 50878617!
assertBelongsInPortfolio: aFinancesAdministrator 
	(aFinancesAdministrator isKindOf: PortfolioEntry) ifFalse: [^self error: self class errorInvalidTypeMessage].! !
!PortfolioEntry methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:16:13' prior: 50878669!
includes: aPortfolioEntry
	self subclassResponsibility ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:16:35' prior: 50878607!
add: aPortfolioEntry 
	self assertBelongsInPortfolio: aPortfolioEntry.
	self assertNotInTree: aPortfolioEntry.
	childElements add: aPortfolioEntry.
	aPortfolioEntry addTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:16:48' prior: 50879169!
assertBelongsInPortfolio: aPortfolioEntry 
	(aPortfolioEntry isKindOf: PortfolioEntry) ifFalse: [^self error: self class errorInvalidTypeMessage].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:16:53' prior: 50878626!
assertNotInTree: aPortfolioEntry 
	(self elementAlreadyInTree: aPortfolioEntry) ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:16:57' prior: 50878635 overrides: 50872243!
balance
	^ childElements sum: [:aPortfolioEntry | aPortfolioEntry balance] ifEmpty: [0]. ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:17:05' prior: 50878584!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  [dadfolios anySatisfy: [:aDadfolio | aDadfolio elementAlreadyInTree: aPortfolioEntry]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:17:13' prior: 50878642 overrides: 50879178!
includes: aPortfolioEntry
	^(self = aPortfolioEntry) or: [childElements anySatisfy: [:aChildElement | aChildElement includes: aPortfolioEntry]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:17:20' prior: 50878593 overrides: 50878659!
totalAccounts
	^childElements sum: [:aPortfolioEntry | aPortfolioEntry totalAccounts] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:17:24' prior: 50878600!
totalChildPortfolios
	^childElements sum: [:aPortfolioEntry | aPortfolioEntry totalPortfolios] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:17:31' prior: 50877966 overrides: 50878664!
totalPortfolios
	^childElements sum: [:aPortfolioEntry | 1  + (aPortfolioEntry totalPortfolios)] ifEmpty: [1].! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'LB 5/24/2021 20:17:43' prior: 50877247 overrides: 50879178!
includes: aPortfolioEntry
	^self = aPortfolioEntry! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/24/2021 20:18:28'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/24/2021 20:18:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/24/2021 20:18:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/24/2021 20:18:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/24/2021 20:18:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/24/2021 20:18:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/24/2021 20:18:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/24/2021 20:18:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'LB 5/24/2021 20:18:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'LB 5/24/2021 20:18:29'!
PASSED!
!Behavior method!
initialize
	(dadfolios _ [
	(OrderedCollection
		cover: (26 to: 42)
		declaredAt: (26 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (13 to: 21)
		declaredAt: (13 to: 21).
	(childElements _ [
	(OrderedCollection
		cover: (67 to: 83)
		declaredAt: (26 to: 42)) new ] valueCoveringAll:
		{85 to: 87})
		cover: (50 to: 62)
		declaredAt: (50 to: 62).! !
!Behavior method!
balance
	^ [
	(childElements
		cover: (12 to: 24)
		declaredAt: (12 to: 24))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (51 to: 65)
				declaredAt: (33 to: 47)) balance ] valueCoveringAll:
				{67 to: 73} ]
		ifEmpty: [
			0 coverAll:
				{86 to: 86} ]] valueCoveringAll:
		{26 to: 29. 76 to: 83}.! !
!Behavior method!
totalAccounts
	^ [
	(childElements
		cover: (17 to: 29)
		declaredAt: (17 to: 29))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (56 to: 70)
				declaredAt: (38 to: 52)) totalAccounts ] valueCoveringAll:
				{72 to: 84} ]
		ifEmpty: [
			0 coverAll:
				{97 to: 97} ]] valueCoveringAll:
		{31 to: 34. 87 to: 94}.! !
!Behavior method!
totalChildPortfolios
	^ [
	(childElements
		cover: (24 to: 36)
		declaredAt: (24 to: 36))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (63 to: 77)
				declaredAt: (45 to: 59)) totalPortfolios ] valueCoveringAll:
				{79 to: 93} ]
		ifEmpty: [
			0 coverAll:
				{106 to: 106} ]] valueCoveringAll:
		{38 to: 41. 96 to: 103}.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/24/2021 20:26:25'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
add: aPortfolioEntry
	[
	(self coverAll:
		{24 to: 27}) assertBelongsInPortfolio:
		(aPortfolioEntry
			cover: (55 to: 69)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{29 to: 53}.
	[
	(self coverAll:
		{73 to: 76}) assertNotInTree:
		(aPortfolioEntry
			cover: (95 to: 109)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{78 to: 93}.
	[
	(childElements
		cover: (113 to: 125)
		declaredAt: (113 to: 125)) add:
		(aPortfolioEntry
			cover: (132 to: 146)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{127 to: 130}.
	[
	(aPortfolioEntry
		cover: (150 to: 164)
		declaredAt: (6 to: 20)) addTo:
		(self coverAll:
			{173 to: 176}) ] valueCoveringAll:
		{166 to: 171}.! !
!Behavior method!
assertBelongsInPortfolio: aPortfolioEntry
	[
	([
	(aPortfolioEntry
		cover: (46 to: 60)
		declaredAt: (27 to: 41)) isKindOf:
		(PortfolioEntry
			cover: (72 to: 85)
			declaredAt: (72 to: 85)) ] valueCoveringAll:
		{62 to: 70}) ifFalse: [ ^ [
		(self coverAll:
			{99 to: 102}) error:
			([
			([
			(self coverAll:
				{111 to: 114}) class ] valueCoveringAll:
				{116 to: 120}) errorInvalidTypeMessage ] valueCoveringAll:
				{122 to: 144}) ] valueCoveringAll:
			{104 to: 109} ]] valueCoveringAll:
		{88 to: 95}.! !
!Behavior method!
assertNotInTree: aPortfolioEntry
	[
	([
	(self coverAll:
		{37 to: 40}) elementAlreadyInTree:
		(aPortfolioEntry
			cover: (64 to: 78)
			declaredAt: (18 to: 32)) ] valueCoveringAll:
		{42 to: 62}) ifTrue: [ ^ [
		(self coverAll:
			{91 to: 94}) error:
			([
			([
			(self coverAll:
				{103 to: 106}) class ] valueCoveringAll:
				{108 to: 112}) errorElementAlreadyAddedMessage ] valueCoveringAll:
				{114 to: 144}) ] valueCoveringAll:
			{96 to: 101} ]] valueCoveringAll:
		{81 to: 87}.! !
!Behavior method!
elementAlreadyInTree: aPortfolioEntry
	^ [
	([
	(self coverAll:
		{44 to: 47}) includes:
		(aPortfolioEntry
			cover: (59 to: 73)
			declaredAt: (23 to: 37)) ] valueCoveringAll:
		{49 to: 57}) or: [
		[
		(dadfolios
			cover: (82 to: 90)
			declaredAt: (82 to: 90)) anySatisfy: [ :aDadfolio |
			[
			(aDadfolio
				cover: (118 to: 126)
				declaredAt: (106 to: 114)) elementAlreadyInTree:
				(aPortfolioEntry
					cover: (150 to: 164)
					declaredAt: (23 to: 37)) ] valueCoveringAll:
				{128 to: 148} ]] valueCoveringAll:
			{92 to: 102} ]] valueCoveringAll:
		{76 to: 78}.! !
!Behavior method!
includes: aPortfolioEntry
	^ [
	([
	(self coverAll:
		{30 to: 33}) =
		(aPortfolioEntry
			cover: (37 to: 51)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{35 to: 35}) or: [
		[
		(childElements
			cover: (59 to: 71)
			declaredAt: (59 to: 71)) anySatisfy: [ :aChildElement |
			[
			(aChildElement
				cover: (103 to: 115)
				declaredAt: (87 to: 99)) includes:
				(aPortfolioEntry
					cover: (127 to: 141)
					declaredAt: (11 to: 25)) ] valueCoveringAll:
				{117 to: 125} ]] valueCoveringAll:
			{73 to: 83} ]] valueCoveringAll:
		{54 to: 56}.! !
!Behavior method!
addTo: aPortfolio
	^ self.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (11 to: 22)
		declaredAt: (11 to: 22))
		inject:
			(0 coverAll:
				{32 to: 32})
		into: [ :balance :transaction |
			[
			(transaction
				cover: (65 to: 75)
				declaredAt: (51 to: 61)) addTo:
				(balance
					cover: (84 to: 90)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{77 to: 82} ]] valueCoveringAll:
		{24 to: 30. 34 to: 38}.! !
!Behavior method!
totalAccounts
	^ 1 coverAll:
		{18 to: 19}.! !
!Behavior method!
totalPortfolios
	^ 0 coverAll:
		{20 to: 21}.! !

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/24/2021 20:26:25'!
PASSED!
!Behavior method!
errorElementAlreadyAddedMessage
	^ 'Error account already added to this portfolio.' coverAll:
		{35 to: 82}.! !
!Behavior method!
includes: aPortfolioEntry
	^ [
	(self coverAll:
		{29 to: 32}) =
		(aPortfolioEntry
			cover: (36 to: 50)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{34 to: 34}.! !

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/24/2021 20:26:25'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	[
	([
	([
	(aValue
		cover: (53 to: 58)
		declaredAt: (11 to: 16)) isKindOf:
		(Number
			cover: (70 to: 75)
			declaredAt: (70 to: 75)) ] valueCoveringAll:
		{60 to: 68}) and: [
		[
		(account
			cover: (84 to: 90)
			declaredAt: (22 to: 28)) isKindOf:
			(ReceptiveAccount
				cover: (102 to: 117)
				declaredAt: (102 to: 117)) ] valueCoveringAll:
			{92 to: 100} ]] valueCoveringAll:
		{78 to: 81}) ifFalse: [ ^ [
		(self coverAll:
			{133 to: 136}) error:
			([
			(self coverAll:
				{145 to: 148}) invalidTypeMessage ] valueCoveringAll:
				{150 to: 167}) ] valueCoveringAll:
			{138 to: 143} ]] valueCoveringAll:
		{122 to: 129}.
	(transaction _ [
	(self coverAll:
		{189 to: 192}) for:
		(aValue
			cover: (199 to: 204)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{194 to: 197})
		cover: (174 to: 184)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (208 to: 214)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (226 to: 236)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{216 to: 224}.
	^ transaction
		cover: (245 to: 255)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) +
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/24/2021 20:26:25'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	([
	(self coverAll:
		{31 to: 34}) transactions ] valueCoveringAll:
		{36 to: 47}) includes:
		(aTransaction
			cover: (59 to: 70)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{49 to: 57}.! !
!Behavior method!
transactions
	| totalTransactions |
	(totalTransactions _ [
	(OrderedCollection
		cover: (59 to: 75)
		declaredAt: (59 to: 75)) new ] valueCoveringAll:
		{77 to: 79})
		cover: (38 to: 54)
		declaredAt: (17 to: 33).
	[
	(childElements
		cover: (83 to: 95)
		declaredAt: (83 to: 95)) do: [ :element |
		[
		(totalTransactions
			cover: (113 to: 129)
			declaredAt: (17 to: 33)) addAll:
			([
			(element
				cover: (140 to: 146)
				declaredAt: (103 to: 109)) transactions ] valueCoveringAll:
				{148 to: 159}) ] valueCoveringAll:
			{131 to: 137} ]] valueCoveringAll:
		{97 to: 99}.
	^ totalTransactions
		cover: (166 to: 182)
		declaredAt: (17 to: 33).! !
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:26:25'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/24/2021 20:26:25'!
PASSED!
!Behavior method!
addTo: aPortfolio
	[
	(dadfolios
		cover: (20 to: 28)
		declaredAt: (20 to: 28)) add:
		(aPortfolio
			cover: (35 to: 44)
			declaredAt: (8 to: 17)) ] valueCoveringAll:
		{30 to: 33}.! !
!Behavior method!
totalPortfolios
	^ [
	(childElements
		cover: (19 to: 31)
		declaredAt: (19 to: 31))
		sum: [ :aPortfolioEntry |
			[
			(1 coverAll:
				{58 to: 58}) +
				([
				(aPortfolioEntry
					cover: (64 to: 78)
					declaredAt: (40 to: 54)) totalPortfolios ] valueCoveringAll:
					{80 to: 94}) ] valueCoveringAll:
				{61 to: 61} ]
		ifEmpty: [
			1 coverAll:
				{108 to: 108} ]] valueCoveringAll:
		{33 to: 36. 98 to: 105}.! !

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/24/2021 20:26:25'!
PASSED!
!Behavior method!
errorInvalidTypeMessage
	^ 'Error invalid type.' coverAll:
		{27 to: 47}.! !

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:26:25'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/24/2021 20:26:25'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (11 to: 22)
		declaredAt: (11 to: 22))
		inject:
			(0 coverAll:
				{32 to: 32})
		into: [ :balance :transaction |
			[
			(transaction
				cover: (65 to: 75)
				declaredAt: (51 to: 61)) addTo:
				(balance
					cover: (84 to: 90)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{77 to: 82} ]] valueCoveringAll:
		{24 to: 30. 34 to: 38}.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/24/2021 20:27:47'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	[
	([
	([
	(aValue
		cover: (53 to: 58)
		declaredAt: (11 to: 16)) isKindOf:
		(Number
			cover: (70 to: 75)
			declaredAt: (70 to: 75)) ] valueCoveringAll:
		{60 to: 68}) and: [
		[
		(account
			cover: (84 to: 90)
			declaredAt: (22 to: 28)) isKindOf:
			(ReceptiveAccount
				cover: (102 to: 117)
				declaredAt: (102 to: 117)) ] valueCoveringAll:
			{92 to: 100} ]] valueCoveringAll:
		{78 to: 81}) ifFalse: [ ^ [
		(self coverAll:
			{133 to: 136}) error:
			([
			(self coverAll:
				{145 to: 148}) invalidTypeMessage ] valueCoveringAll:
				{150 to: 167}) ] valueCoveringAll:
			{138 to: 143} ]] valueCoveringAll:
		{122 to: 129}.
	(transaction _ [
	(self coverAll:
		{189 to: 192}) for:
		(aValue
			cover: (199 to: 204)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{194 to: 197})
		cover: (174 to: 184)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (208 to: 214)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (226 to: 236)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{216 to: 224}.
	^ transaction
		cover: (245 to: 255)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) +
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/24/2021 20:27:47'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) -
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/24/2021 20:27:47'!
PASSED!
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/24/2021 20:27:47'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/24/2021 20:27:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/24/2021 20:27:47'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/24/2021 20:27:47'!
PASSED!
!Behavior method!
invalidTypeMessage
	^ 'Invalid type' coverAll:
		{23 to: 36}.! !

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'LB 5/24/2021 20:27:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'LB 5/24/2021 20:27:47'!
PASSED!
!PortfolioEntry methodsFor: 'testing' stamp: 'LB 5/24/2021 20:32:17' prior: 50878664!
totalPortfolios 
	^ 0! !

!methodRemoval: ReceptiveAccount #totalPortfolios stamp: 'LB 5/24/2021 20:32:40'!
totalPortfolios 
	^ 0!
!ReceptiveAccount methodsFor: 'testing' stamp: 'LB 5/24/2021 20:33:43' overrides: 50879985!
totalPortfolios 
	^ 0! !
!PortfolioEntry methodsFor: 'testing' stamp: 'LB 5/24/2021 20:33:53' prior: 50879985!
totalPortfolios 
	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'zzzzz' stamp: 'LB 5/24/2021 20:38:32' prior: 50876986 overrides: 50878674!
addTo: aPortfolio
	aPortfolio safetlyAdd: self.! !
!Portfolio methodsFor: 'zzzzz' stamp: 'LB 5/24/2021 20:39:01' prior: 50876970 overrides: 50878674!
addTo: aPortfolio
	aPortfolio safetlyAdd: self.
	dadfolios add: aPortfolio .! !
!Portfolio methodsFor: 'zzzzz' stamp: 'LB 5/24/2021 20:39:39'!
safetlyAdd: aPortfolioEntry
	childElements add: aPortfolioEntry! !
!Portfolio methodsFor: 'zzzzz' stamp: 'LB 5/24/2021 20:39:49' prior: 50879183!
add: aPortfolioEntry 
	self assertBelongsInPortfolio: aPortfolioEntry.
	self assertNotInTree: aPortfolioEntry.

	aPortfolioEntry addTo: self.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/24/2021 20:40:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/24/2021 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/24/2021 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/24/2021 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/24/2021 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/24/2021 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/24/2021 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/24/2021 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'LB 5/24/2021 20:40:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'LB 5/24/2021 20:40:05'!
PASSED!
!Behavior method!
initialize
	(dadfolios _ [
	(OrderedCollection
		cover: (26 to: 42)
		declaredAt: (26 to: 42)) new ] valueCoveringAll:
		{44 to: 46})
		cover: (13 to: 21)
		declaredAt: (13 to: 21).
	(childElements _ [
	(OrderedCollection
		cover: (67 to: 83)
		declaredAt: (26 to: 42)) new ] valueCoveringAll:
		{85 to: 87})
		cover: (50 to: 62)
		declaredAt: (50 to: 62).! !
!Behavior method!
balance
	^ [
	(childElements
		cover: (12 to: 24)
		declaredAt: (12 to: 24))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (51 to: 65)
				declaredAt: (33 to: 47)) balance ] valueCoveringAll:
				{67 to: 73} ]
		ifEmpty: [
			0 coverAll:
				{86 to: 86} ]] valueCoveringAll:
		{26 to: 29. 76 to: 83}.! !
!Behavior method!
totalAccounts
	^ [
	(childElements
		cover: (17 to: 29)
		declaredAt: (17 to: 29))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (56 to: 70)
				declaredAt: (38 to: 52)) totalAccounts ] valueCoveringAll:
				{72 to: 84} ]
		ifEmpty: [
			0 coverAll:
				{97 to: 97} ]] valueCoveringAll:
		{31 to: 34. 87 to: 94}.! !
!Behavior method!
totalChildPortfolios
	^ [
	(childElements
		cover: (24 to: 36)
		declaredAt: (24 to: 36))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (63 to: 77)
				declaredAt: (45 to: 59)) totalPortfolios ] valueCoveringAll:
				{79 to: 93} ]
		ifEmpty: [
			0 coverAll:
				{106 to: 106} ]] valueCoveringAll:
		{38 to: 41. 96 to: 103}.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/24/2021 20:40:15'!
PASSED!
!Behavior method!
initialize
	(transactions _ [
	(OrderedCollection
		cover: (30 to: 46)
		declaredAt: (30 to: 46)) new ] valueCoveringAll:
		{48 to: 50})
		cover: (14 to: 25)
		declaredAt: (14 to: 25).! !
!Behavior method!
add: aPortfolioEntry
	[
	(self coverAll:
		{24 to: 27}) assertBelongsInPortfolio:
		(aPortfolioEntry
			cover: (55 to: 69)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{29 to: 53}.
	[
	(self coverAll:
		{73 to: 76}) assertNotInTree:
		(aPortfolioEntry
			cover: (95 to: 109)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{78 to: 93}.
	[
	(aPortfolioEntry
		cover: (114 to: 128)
		declaredAt: (6 to: 20)) addTo:
		(self coverAll:
			{137 to: 140}) ] valueCoveringAll:
		{130 to: 135}.! !
!Behavior method!
assertBelongsInPortfolio: aPortfolioEntry
	[
	([
	(aPortfolioEntry
		cover: (46 to: 60)
		declaredAt: (27 to: 41)) isKindOf:
		(PortfolioEntry
			cover: (72 to: 85)
			declaredAt: (72 to: 85)) ] valueCoveringAll:
		{62 to: 70}) ifFalse: [ ^ [
		(self coverAll:
			{99 to: 102}) error:
			([
			([
			(self coverAll:
				{111 to: 114}) class ] valueCoveringAll:
				{116 to: 120}) errorInvalidTypeMessage ] valueCoveringAll:
				{122 to: 144}) ] valueCoveringAll:
			{104 to: 109} ]] valueCoveringAll:
		{88 to: 95}.! !
!Behavior method!
assertNotInTree: aPortfolioEntry
	[
	([
	(self coverAll:
		{37 to: 40}) elementAlreadyInTree:
		(aPortfolioEntry
			cover: (64 to: 78)
			declaredAt: (18 to: 32)) ] valueCoveringAll:
		{42 to: 62}) ifTrue: [ ^ [
		(self coverAll:
			{91 to: 94}) error:
			([
			([
			(self coverAll:
				{103 to: 106}) class ] valueCoveringAll:
				{108 to: 112}) errorElementAlreadyAddedMessage ] valueCoveringAll:
				{114 to: 144}) ] valueCoveringAll:
			{96 to: 101} ]] valueCoveringAll:
		{81 to: 87}.! !
!Behavior method!
elementAlreadyInTree: aPortfolioEntry
	^ [
	([
	(self coverAll:
		{44 to: 47}) includes:
		(aPortfolioEntry
			cover: (59 to: 73)
			declaredAt: (23 to: 37)) ] valueCoveringAll:
		{49 to: 57}) or: [
		[
		(dadfolios
			cover: (82 to: 90)
			declaredAt: (82 to: 90)) anySatisfy: [ :aDadfolio |
			[
			(aDadfolio
				cover: (118 to: 126)
				declaredAt: (106 to: 114)) elementAlreadyInTree:
				(aPortfolioEntry
					cover: (150 to: 164)
					declaredAt: (23 to: 37)) ] valueCoveringAll:
				{128 to: 148} ]] valueCoveringAll:
			{92 to: 102} ]] valueCoveringAll:
		{76 to: 78}.! !
!Behavior method!
includes: aPortfolioEntry
	^ [
	([
	(self coverAll:
		{30 to: 33}) =
		(aPortfolioEntry
			cover: (37 to: 51)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{35 to: 35}) or: [
		[
		(childElements
			cover: (59 to: 71)
			declaredAt: (59 to: 71)) anySatisfy: [ :aChildElement |
			[
			(aChildElement
				cover: (103 to: 115)
				declaredAt: (87 to: 99)) includes:
				(aPortfolioEntry
					cover: (127 to: 141)
					declaredAt: (11 to: 25)) ] valueCoveringAll:
				{117 to: 125} ]] valueCoveringAll:
			{73 to: 83} ]] valueCoveringAll:
		{54 to: 56}.! !
!Behavior method!
addTo: aPortfolio
	[
	(aPortfolio
		cover: (20 to: 29)
		declaredAt: (8 to: 17)) safetlyAdd:
		(self coverAll:
			{43 to: 46}) ] valueCoveringAll:
		{31 to: 41}.! !
!Behavior method!
safetlyAdd: aPortfolioEntry
	[
	(childElements
		cover: (30 to: 42)
		declaredAt: (30 to: 42)) add:
		(aPortfolioEntry
			cover: (49 to: 63)
			declaredAt: (13 to: 27)) ] valueCoveringAll:
		{44 to: 47}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (11 to: 22)
		declaredAt: (11 to: 22))
		inject:
			(0 coverAll:
				{32 to: 32})
		into: [ :balance :transaction |
			[
			(transaction
				cover: (65 to: 75)
				declaredAt: (51 to: 61)) addTo:
				(balance
					cover: (84 to: 90)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{77 to: 82} ]] valueCoveringAll:
		{24 to: 30. 34 to: 38}.! !
!Behavior method!
totalAccounts
	^ 1 coverAll:
		{18 to: 19}.! !
!Behavior method!
totalPortfolios
	^ 0 coverAll:
		{20 to: 21}.! !

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/24/2021 20:40:15'!
PASSED!
!Behavior method!
errorElementAlreadyAddedMessage
	^ 'Error account already added to this portfolio.' coverAll:
		{35 to: 82}.! !
!Behavior method!
includes: aPortfolioEntry
	^ [
	(self coverAll:
		{29 to: 32}) =
		(aPortfolioEntry
			cover: (36 to: 50)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{34 to: 34}.! !

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/24/2021 20:40:15'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	[
	([
	([
	(aValue
		cover: (53 to: 58)
		declaredAt: (11 to: 16)) isKindOf:
		(Number
			cover: (70 to: 75)
			declaredAt: (70 to: 75)) ] valueCoveringAll:
		{60 to: 68}) and: [
		[
		(account
			cover: (84 to: 90)
			declaredAt: (22 to: 28)) isKindOf:
			(ReceptiveAccount
				cover: (102 to: 117)
				declaredAt: (102 to: 117)) ] valueCoveringAll:
			{92 to: 100} ]] valueCoveringAll:
		{78 to: 81}) ifFalse: [ ^ [
		(self coverAll:
			{133 to: 136}) error:
			([
			(self coverAll:
				{145 to: 148}) invalidTypeMessage ] valueCoveringAll:
				{150 to: 167}) ] valueCoveringAll:
			{138 to: 143} ]] valueCoveringAll:
		{122 to: 129}.
	(transaction _ [
	(self coverAll:
		{189 to: 192}) for:
		(aValue
			cover: (199 to: 204)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{194 to: 197})
		cover: (174 to: 184)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (208 to: 214)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (226 to: 236)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{216 to: 224}.
	^ transaction
		cover: (245 to: 255)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) +
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/24/2021 20:40:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/24/2021 20:40:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/24/2021 20:40:16'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	([
	(self coverAll:
		{31 to: 34}) transactions ] valueCoveringAll:
		{36 to: 47}) includes:
		(aTransaction
			cover: (59 to: 70)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{49 to: 57}.! !
!Behavior method!
transactions
	| totalTransactions |
	(totalTransactions _ [
	(OrderedCollection
		cover: (59 to: 75)
		declaredAt: (59 to: 75)) new ] valueCoveringAll:
		{77 to: 79})
		cover: (38 to: 54)
		declaredAt: (17 to: 33).
	[
	(childElements
		cover: (83 to: 95)
		declaredAt: (83 to: 95)) do: [ :element |
		[
		(totalTransactions
			cover: (113 to: 129)
			declaredAt: (17 to: 33)) addAll:
			([
			(element
				cover: (140 to: 146)
				declaredAt: (103 to: 109)) transactions ] valueCoveringAll:
				{148 to: 159}) ] valueCoveringAll:
			{131 to: 137} ]] valueCoveringAll:
		{97 to: 99}.
	^ totalTransactions
		cover: (166 to: 182)
		declaredAt: (17 to: 33).! !
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:40:16'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/24/2021 20:40:16'!
PASSED!
!Behavior method!
addTo: aPortfolio
	[
	(aPortfolio
		cover: (20 to: 29)
		declaredAt: (8 to: 17)) safetlyAdd:
		(self coverAll:
			{43 to: 46}) ] valueCoveringAll:
		{31 to: 41}.
	[
	(dadfolios
		cover: (50 to: 58)
		declaredAt: (50 to: 58)) add:
		(aPortfolio
			cover: (65 to: 74)
			declaredAt: (8 to: 17)) ] valueCoveringAll:
		{60 to: 63}.! !
!Behavior method!
totalPortfolios
	^ [
	(childElements
		cover: (19 to: 31)
		declaredAt: (19 to: 31))
		sum: [ :aPortfolioEntry |
			[
			(1 coverAll:
				{58 to: 58}) +
				([
				(aPortfolioEntry
					cover: (64 to: 78)
					declaredAt: (40 to: 54)) totalPortfolios ] valueCoveringAll:
					{80 to: 94}) ] valueCoveringAll:
				{61 to: 61} ]
		ifEmpty: [
			1 coverAll:
				{108 to: 108} ]] valueCoveringAll:
		{33 to: 36. 98 to: 105}.! !

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/24/2021 20:40:16'!
PASSED!
!Behavior method!
errorInvalidTypeMessage
	^ 'Error invalid type.' coverAll:
		{27 to: 47}.! !

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:40:16'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/24/2021 20:40:16'!
PASSED!
!PortfolioEntry methodsFor: 'adding' stamp: 'LB 5/24/2021 20:48:09'!
beAddedTo: aPortfolio 
	self subclassResponsibility ! !

!methodRemoval: PortfolioEntry #addTo: stamp: 'LB 5/24/2021 20:48:09'!
addTo: aPortfolio 
	self subclassResponsibility !
!Portfolio methodsFor: 'adding' stamp: 'LB 5/24/2021 20:48:39' overrides: 50880603!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.
	dadfolios add: aPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:48:39' prior: 50880016!
add: aPortfolioEntry 
	self assertBelongsInPortfolio: aPortfolioEntry.
	self assertNotInTree: aPortfolioEntry.

	aPortfolioEntry beAddedTo: self.! !

!methodRemoval: Portfolio #addTo: stamp: 'LB 5/24/2021 20:48:39'!
addTo: aPortfolio
	aPortfolio safetlyAdd: self.
	dadfolios add: aPortfolio .!
!ReceptiveAccount methodsFor: 'adding' stamp: 'LB 5/24/2021 20:48:59' overrides: 50880603!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 'LB 5/24/2021 20:48:59' prior: 50863204 overrides: 50872243!
balance
	^transactions inject: 0 into: [:balance :transaction | transaction beAddedTo: balance ].! !

!methodRemoval: ReceptiveAccount #addTo: stamp: 'LB 5/24/2021 20:48:59'!
addTo: aPortfolio
	aPortfolio safetlyAdd: self.!
!ReceptiveAccount methodsFor: 'balance' stamp: 'LB 5/24/2021 20:49:36' prior: 50880637 overrides: 50872243!
balance
	^transactions inject: 0 into: [:balance :transaction | transaction addTo: balance ].! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'LB 5/24/2021 20:49:44'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'LB 5/24/2021 20:49:46'!
PASSED!

----SNAPSHOT----(24 May 2021 20:50:51) CuisUniversity-4532.image priorSource: 17520193!

----STARTUP---- (24 May 2021 20:52:26) as /home/lbiglieri/Downloads/build/CuisUniversity/v3.0/CuisUniversity-4532.image!


PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:12:48'!
PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #PortfolioEntry
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioEntry category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:12:52'!
Object subclass: #PortfolioEntry
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

selectors := Portfolio selectors.

selectors do: [:selector ||sourceCode | 
 sourceCode := (Portfolio compiledMethodAt: selector) sourceCode.
 sourceCode _ sourceCode copyReplaceAll: 'aDadfolio' with: 'aParentPortfolio'.
 Portfolio compile: sourceCode].!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50869972 overrides: 50876951!
hasRegistered: aTransaction
	^self transactions includes: aTransaction.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50879209 overrides: 50872243!
balance
	^ childElements sum: [:aPortfolioEntry | aPortfolioEntry balance] ifEmpty: [0]. ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50873974 overrides: 50876957!
initialize
	dadfolios := OrderedCollection new.
	childElements := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50878460 overrides: 50872247!
transactions
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50880618!
add: aPortfolioEntry 
	self assertBelongsInPortfolio: aPortfolioEntry.
	self assertNotInTree: aPortfolioEntry.

	aPortfolioEntry beAddedTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50879240!
totalChildPortfolios
	^childElements sum: [:aPortfolioEntry | aPortfolioEntry totalPortfolios] ifEmpty: [0].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50879200!
assertNotInTree: aPortfolioEntry 
	(self elementAlreadyInTree: aPortfolioEntry) ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50879224 overrides: 50879178!
includes: aPortfolioEntry
	^(self = aPortfolioEntry) or: [childElements anySatisfy: [:aChildElement | aChildElement includes: aPortfolioEntry]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50880011!
safetlyAdd: aPortfolioEntry
	childElements add: aPortfolioEntry! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50879248 overrides: 50879996!
totalPortfolios
	^childElements sum: [:aPortfolioEntry | 1  + (aPortfolioEntry totalPortfolios)] ifEmpty: [1].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50879215!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  [dadfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50880612 overrides: 50880603!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.
	dadfolios add: aPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50879192!
assertBelongsInPortfolio: aPortfolioEntry 
	(aPortfolioEntry isKindOf: PortfolioEntry) ifFalse: [^self error: self class errorInvalidTypeMessage].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:17:54' prior: 50879233 overrides: 50878659!
totalAccounts
	^childElements sum: [:aPortfolioEntry | aPortfolioEntry totalAccounts] ifEmpty: [0].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:17:58'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:19:30'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:19:30' prior: 50880925 overrides: 50880603!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.
	parentPortfolios add: aPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:19:30' prior: 50880854 overrides: 50876957!
initialize
	parentPortfolios := OrderedCollection new.
	childElements := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:19:30' prior: 50880915!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  [parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:19:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:19:35'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:22:33'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios childElements directTransactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:22:32'!
yyy
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	totalTransactions addAll: directTransactions.
	childElements do: [:element | totalTransactions addAll: (element yyy)].
	^totalTransactions
	! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:22:45' prior: 50880861 overrides: 50872247!
transactions
	"| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions"
	^self yyy! !

Object subclass: #PortfolioEntry
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioEntry category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:22:52'!
Object subclass: #PortfolioEntry
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:22:57'!
PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:23:21'!
PortfolioEntry subclass: #ReceptiveAccount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #PortfolioEntry
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioEntry category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:23:25'!
Object subclass: #PortfolioEntry
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:23:31'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'parentPortfolios childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:23:58' prior: 50881243!
yyy
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	totalTransactions addAll: transactions.
	childElements do: [:element | totalTransactions addAll: (element yyy)].
	^totalTransactions
	! !

PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:25:54'!
PortfolioEntry subclass: #Portfolio
	instanceVariableNames: 'childElements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #PortfolioEntry
	instanceVariableNames: 'parentPortfolios transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioEntry category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:25:58'!
Object subclass: #PortfolioEntry
	instanceVariableNames: 'parentPortfolios transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioEntry methodsFor: 'adding' stamp: 'Lb 5/24/2021 21:26:57' prior: 50880603!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.
	parentPortfolios add: aPortfolio .! !

!methodRemoval: Portfolio #beAddedTo: stamp: 'Lb 5/24/2021 21:27:05'!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.
	parentPortfolios add: aPortfolio .!

!methodRemoval: ReceptiveAccount #beAddedTo: stamp: 'Lb 5/24/2021 21:27:11'!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:28:32' prior: 50859546!
register: aTransaction
	transactions add: aTransaction.
	parentPortfolios do: [:aParentPortfolio | aParentPortfolio addTransaction: aTransaction].
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:29:20'!
registerOnParents: aTransaction

	^ parentPortfolios do: [:aParentPortfolio | aParentPortfolio addTransaction: aTransaction]! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:29:20' prior: 50881379!
register: aTransaction
	transactions add: aTransaction.
	self registerOnParents: aTransaction.
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:29:57' prior: 50881387!
registerOnParents: aTransaction

	^ parentPortfolios do: [:aParentPortfolio | aParentPortfolio register: aTransaction]! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:30:35'!
register: aTransaction
	^transactions add: aTransaction.! !
!Portfolio methodsFor: 'adding' stamp: 'Lb 5/24/2021 21:32:20' overrides: 50881364!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.
	parentPortfolios add: aPortfolio .! !
!PortfolioEntry methodsFor: 'adding' stamp: 'Lb 5/24/2021 21:32:28' prior: 50881364!
beAddedTo: aPortfolio
	self subclassResponsibility ! !
!ReceptiveAccount methodsFor: 'adding' stamp: 'Lb 5/24/2021 21:32:34' overrides: 50881417!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.
	parentPortfolios add: aPortfolio .! !
!ReceptiveAccount methodsFor: 'adding' stamp: 'Lb 5/24/2021 21:33:59' prior: 50881422 overrides: 50881417!
beAddedTo: aPortfolio
	aPortfolio safetlyAdd: self.
	parentPortfolios add: aPortfolio.
	transactions do: [:aTransaction | aPortfolio register: aTransaction].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:34:07'!
ERROR!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:34:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:34:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:34:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:34:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:34:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:34:14'!
ERROR!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:34:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:34:39'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:34:39'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:34:39'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:34:39'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:34:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:34:39'!
ERROR!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:34:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:34:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:34:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:34:46'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:34:46'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:34:46'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:34:46'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:34:46'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:34:48'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'Lb 5/24/2021 21:36:16' prior: 50859541 overrides: 50876957!
initialize
	parentPortfolios := OrderedCollection new.
	transactions := OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 'Lb 5/24/2021 21:36:19' prior: 50881074 overrides: 50876957!
initialize
	parentPortfolios := OrderedCollection new.
	childElements := OrderedCollection new.
	transactions := OrderedCollection new.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:36:21'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:36:21'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:36:21'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:36:21'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:36:21'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:36:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:36:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:36:23'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:36:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:36:24'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:36:26'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:36:26'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:36:26'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:36:26'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:36:26'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:36:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:37:03'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Lb 5/24/2021 21:37:42'!
yyy 
	^OrderedCollection new! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:37:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:37:46'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:37:48'!
PASSED!
!Behavior method!
initialize
	(parentPortfolios _ [
	(OrderedCollection
		cover: (33 to: 49)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{51 to: 53})
		cover: (13 to: 28)
		declaredAt: (13 to: 28).
	(childElements _ [
	(OrderedCollection
		cover: (74 to: 90)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{92 to: 94})
		cover: (57 to: 69)
		declaredAt: (57 to: 69).
	(transactions _ [
	(OrderedCollection
		cover: (114 to: 130)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{132 to: 134})
		cover: (98 to: 109)
		declaredAt: (98 to: 109).! !
!Behavior method!
balance
	^ [
	(childElements
		cover: (12 to: 24)
		declaredAt: (12 to: 24))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (51 to: 65)
				declaredAt: (33 to: 47)) balance ] valueCoveringAll:
				{67 to: 73} ]
		ifEmpty: [
			0 coverAll:
				{86 to: 86} ]] valueCoveringAll:
		{26 to: 29. 76 to: 83}.! !
!Behavior method!
totalAccounts
	^ [
	(childElements
		cover: (17 to: 29)
		declaredAt: (17 to: 29))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (56 to: 70)
				declaredAt: (38 to: 52)) totalAccounts ] valueCoveringAll:
				{72 to: 84} ]
		ifEmpty: [
			0 coverAll:
				{97 to: 97} ]] valueCoveringAll:
		{31 to: 34. 87 to: 94}.! !
!Behavior method!
totalChildPortfolios
	^ [
	(childElements
		cover: (24 to: 36)
		declaredAt: (24 to: 36))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (63 to: 77)
				declaredAt: (45 to: 59)) totalPortfolios ] valueCoveringAll:
				{79 to: 93} ]
		ifEmpty: [
			0 coverAll:
				{106 to: 106} ]] valueCoveringAll:
		{38 to: 41. 96 to: 103}.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!
!Behavior method!
initialize
	(parentPortfolios _ [
	(OrderedCollection
		cover: (33 to: 49)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{51 to: 53})
		cover: (13 to: 28)
		declaredAt: (13 to: 28).
	(transactions _ [
	(OrderedCollection
		cover: (73 to: 89)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{91 to: 93})
		cover: (57 to: 68)
		declaredAt: (57 to: 68).! !
!Behavior method!
add: aPortfolioEntry
	[
	(self coverAll:
		{24 to: 27}) assertBelongsInPortfolio:
		(aPortfolioEntry
			cover: (55 to: 69)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{29 to: 53}.
	[
	(self coverAll:
		{73 to: 76}) assertNotInTree:
		(aPortfolioEntry
			cover: (95 to: 109)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{78 to: 93}.
	[
	(aPortfolioEntry
		cover: (114 to: 128)
		declaredAt: (6 to: 20)) beAddedTo:
		(self coverAll:
			{141 to: 144}) ] valueCoveringAll:
		{130 to: 139}.! !
!Behavior method!
assertBelongsInPortfolio: aPortfolioEntry
	[
	([
	(aPortfolioEntry
		cover: (46 to: 60)
		declaredAt: (27 to: 41)) isKindOf:
		(PortfolioEntry
			cover: (72 to: 85)
			declaredAt: (72 to: 85)) ] valueCoveringAll:
		{62 to: 70}) ifFalse: [ ^ [
		(self coverAll:
			{99 to: 102}) error:
			([
			([
			(self coverAll:
				{111 to: 114}) class ] valueCoveringAll:
				{116 to: 120}) errorInvalidTypeMessage ] valueCoveringAll:
				{122 to: 144}) ] valueCoveringAll:
			{104 to: 109} ]] valueCoveringAll:
		{88 to: 95}.! !
!Behavior method!
assertNotInTree: aPortfolioEntry
	[
	([
	(self coverAll:
		{37 to: 40}) elementAlreadyInTree:
		(aPortfolioEntry
			cover: (64 to: 78)
			declaredAt: (18 to: 32)) ] valueCoveringAll:
		{42 to: 62}) ifTrue: [ ^ [
		(self coverAll:
			{91 to: 94}) error:
			([
			([
			(self coverAll:
				{103 to: 106}) class ] valueCoveringAll:
				{108 to: 112}) errorElementAlreadyAddedMessage ] valueCoveringAll:
				{114 to: 144}) ] valueCoveringAll:
			{96 to: 101} ]] valueCoveringAll:
		{81 to: 87}.! !
!Behavior method!
elementAlreadyInTree: aPortfolioEntry
	^ [
	([
	(self coverAll:
		{44 to: 47}) includes:
		(aPortfolioEntry
			cover: (59 to: 73)
			declaredAt: (23 to: 37)) ] valueCoveringAll:
		{49 to: 57}) or: [
		[
		(parentPortfolios
			cover: (82 to: 97)
			declaredAt: (82 to: 97)) anySatisfy: [ :aParentPortfolio |
			[
			(aParentPortfolio
				cover: (132 to: 147)
				declaredAt: (113 to: 128)) elementAlreadyInTree:
				(aPortfolioEntry
					cover: (171 to: 185)
					declaredAt: (23 to: 37)) ] valueCoveringAll:
				{149 to: 169} ]] valueCoveringAll:
			{99 to: 109} ]] valueCoveringAll:
		{76 to: 78}.! !
!Behavior method!
includes: aPortfolioEntry
	^ [
	([
	(self coverAll:
		{30 to: 33}) =
		(aPortfolioEntry
			cover: (37 to: 51)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{35 to: 35}) or: [
		[
		(childElements
			cover: (59 to: 71)
			declaredAt: (59 to: 71)) anySatisfy: [ :aChildElement |
			[
			(aChildElement
				cover: (103 to: 115)
				declaredAt: (87 to: 99)) includes:
				(aPortfolioEntry
					cover: (127 to: 141)
					declaredAt: (11 to: 25)) ] valueCoveringAll:
				{117 to: 125} ]] valueCoveringAll:
			{73 to: 83} ]] valueCoveringAll:
		{54 to: 56}.! !
!Behavior method!
beAddedTo: aPortfolio
	[
	(aPortfolio
		cover: (24 to: 33)
		declaredAt: (12 to: 21)) safetlyAdd:
		(self coverAll:
			{47 to: 50}) ] valueCoveringAll:
		{35 to: 45}.
	[
	(parentPortfolios
		cover: (54 to: 69)
		declaredAt: (54 to: 69)) add:
		(aPortfolio
			cover: (76 to: 85)
			declaredAt: (12 to: 21)) ] valueCoveringAll:
		{71 to: 74}.
	[
	(transactions
		cover: (89 to: 100)
		declaredAt: (89 to: 100)) do: [ :aTransaction |
		[
		(aPortfolio
			cover: (123 to: 132)
			declaredAt: (12 to: 21)) register:
			(aTransaction
				cover: (144 to: 155)
				declaredAt: (108 to: 119)) ] valueCoveringAll:
			{134 to: 142} ]] valueCoveringAll:
		{102 to: 104}.! !
!Behavior method!
safetlyAdd: aPortfolioEntry
	[
	(childElements
		cover: (30 to: 42)
		declaredAt: (30 to: 42)) add:
		(aPortfolioEntry
			cover: (49 to: 63)
			declaredAt: (13 to: 27)) ] valueCoveringAll:
		{44 to: 47}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (11 to: 22)
		declaredAt: (11 to: 22))
		inject:
			(0 coverAll:
				{32 to: 32})
		into: [ :balance :transaction |
			[
			(transaction
				cover: (65 to: 75)
				declaredAt: (51 to: 61)) addTo:
				(balance
					cover: (84 to: 90)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{77 to: 82} ]] valueCoveringAll:
		{24 to: 30. 34 to: 38}.! !
!Behavior method!
totalAccounts
	^ 1 coverAll:
		{18 to: 19}.! !
!Behavior method!
totalPortfolios
	^ 0 coverAll:
		{20 to: 21}.! !

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!
!Behavior method!
errorElementAlreadyAddedMessage
	^ 'Error account already added to this portfolio.' coverAll:
		{35 to: 82}.! !
!Behavior method!
includes: aPortfolioEntry
	^ [
	(self coverAll:
		{29 to: 32}) =
		(aPortfolioEntry
			cover: (36 to: 50)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{34 to: 34}.! !

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	[
	([
	([
	(aValue
		cover: (53 to: 58)
		declaredAt: (11 to: 16)) isKindOf:
		(Number
			cover: (70 to: 75)
			declaredAt: (70 to: 75)) ] valueCoveringAll:
		{60 to: 68}) and: [
		[
		(account
			cover: (84 to: 90)
			declaredAt: (22 to: 28)) isKindOf:
			(ReceptiveAccount
				cover: (102 to: 117)
				declaredAt: (102 to: 117)) ] valueCoveringAll:
			{92 to: 100} ]] valueCoveringAll:
		{78 to: 81}) ifFalse: [ ^ [
		(self coverAll:
			{133 to: 136}) error:
			([
			(self coverAll:
				{145 to: 148}) invalidTypeMessage ] valueCoveringAll:
				{150 to: 167}) ] valueCoveringAll:
			{138 to: 143} ]] valueCoveringAll:
		{122 to: 129}.
	(transaction _ [
	(self coverAll:
		{189 to: 192}) for:
		(aValue
			cover: (199 to: 204)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{194 to: 197})
		cover: (174 to: 184)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (208 to: 214)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (226 to: 236)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{216 to: 224}.
	^ transaction
		cover: (245 to: 255)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (25 to: 36)
		declaredAt: (25 to: 36)) add:
		(aTransaction
			cover: (43 to: 54)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{38 to: 41}.
	[
	(self coverAll:
		{58 to: 61}) registerOnParents:
		(aTransaction
			cover: (82 to: 93)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{63 to: 80}.! !
!Behavior method!
registerOnParents: aTransaction
	^ [
	(parentPortfolios
		cover: (37 to: 52)
		declaredAt: (37 to: 52)) do: [ :aParentPortfolio |
		[
		(aParentPortfolio
			cover: (79 to: 94)
			declaredAt: (60 to: 75)) register:
			(aTransaction
				cover: (106 to: 117)
				declaredAt: (20 to: 31)) ] valueCoveringAll:
			{96 to: 104} ]] valueCoveringAll:
		{54 to: 56}.! !
!Behavior method!
register: aTransaction
	^ [
	(transactions
		cover: (26 to: 37)
		declaredAt: (26 to: 37)) add:
		(aTransaction
			cover: (44 to: 55)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{39 to: 42}.! !
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) +
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	([
	(self coverAll:
		{31 to: 34}) transactions ] valueCoveringAll:
		{36 to: 47}) includes:
		(aTransaction
			cover: (59 to: 70)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{49 to: 57}.! !
!Behavior method!
transactions
	"| totalTransactions |
	totalTransactions := OrderedCollection new.
	childElements do: [:element | totalTransactions addAll: (element transactions)].
	^totalTransactions"
	^ [
	(self coverAll:
		{188 to: 191}) yyy ] valueCoveringAll:
		{193 to: 195}.! !
!Behavior method!
yyy
	| totalTransactions |
	(totalTransactions _ [
	(OrderedCollection
		cover: (50 to: 66)
		declaredAt: (50 to: 66)) new ] valueCoveringAll:
		{68 to: 70})
		cover: (29 to: 45)
		declaredAt: (8 to: 24).
	[
	(totalTransactions
		cover: (74 to: 90)
		declaredAt: (8 to: 24)) addAll:
		(transactions
			cover: (100 to: 111)
			declaredAt: (100 to: 111)) ] valueCoveringAll:
		{92 to: 98}.
	[
	(childElements
		cover: (115 to: 127)
		declaredAt: (115 to: 127)) do: [ :element |
		[
		(totalTransactions
			cover: (145 to: 161)
			declaredAt: (8 to: 24)) addAll:
			([
			(element
				cover: (172 to: 178)
				declaredAt: (135 to: 141)) yyy ] valueCoveringAll:
				{180 to: 182}) ] valueCoveringAll:
			{163 to: 169} ]] valueCoveringAll:
		{129 to: 131}.
	^ totalTransactions
		cover: (189 to: 205)
		declaredAt: (8 to: 24).! !
!Behavior method!
yyy
	^ [
	(OrderedCollection
		cover: (8 to: 24)
		declaredAt: (8 to: 24)) new ] valueCoveringAll:
		{26 to: 28}.! !

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:37:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!
!Behavior method!
beAddedTo: aPortfolio
	[
	(aPortfolio
		cover: (24 to: 33)
		declaredAt: (12 to: 21)) safetlyAdd:
		(self coverAll:
			{47 to: 50}) ] valueCoveringAll:
		{35 to: 45}.
	[
	(parentPortfolios
		cover: (54 to: 69)
		declaredAt: (54 to: 69)) add:
		(aPortfolio
			cover: (76 to: 85)
			declaredAt: (12 to: 21)) ] valueCoveringAll:
		{71 to: 74}.! !
!Behavior method!
totalPortfolios
	^ [
	(childElements
		cover: (19 to: 31)
		declaredAt: (19 to: 31))
		sum: [ :aPortfolioEntry |
			[
			(1 coverAll:
				{58 to: 58}) +
				([
				(aPortfolioEntry
					cover: (64 to: 78)
					declaredAt: (40 to: 54)) totalPortfolios ] valueCoveringAll:
					{80 to: 94}) ] valueCoveringAll:
				{61 to: 61} ]
		ifEmpty: [
			1 coverAll:
				{108 to: 108} ]] valueCoveringAll:
		{33 to: 36. 98 to: 105}.! !

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!
!Behavior method!
errorInvalidTypeMessage
	^ 'Error invalid type.' coverAll:
		{27 to: 47}.! !

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:38:00'!
PASSED!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'Lb 5/24/2021 21:43:35' prior: 50878950!
register: aValue on: account

	| transaction |
	
	((aValue isKindOf: Number) and: [account isKindOf: ReceptiveAccount])	 ifFalse: [^self error: self invalidTypeMessage].
	
	transaction := self for: aValue in: account.
	account register: transaction.
		
	^ transaction! !
!Deposit class methodsFor: 'instance creation' stamp: 'Lb 5/24/2021 21:44:14'!
for: aValue in: in 

	^ self new initializeFor: aValue ! !

!methodRemoval: Deposit class #for: stamp: 'Lb 5/24/2021 21:44:14'!
for: aValue

	^ self new initializeFor: aValue !
!Deposit class methodsFor: 'instance creation' stamp: 'Lb 5/24/2021 21:44:45' prior: 50882704!
for: aValue in: anAccount 

	^ self new initializeFor: aValue ! !
!Deposit methodsFor: 'initialization' stamp: 'Lb 5/24/2021 21:45:37'!
initializeFor: aValue in: anAccount 

	value := aValue ! !
!Deposit class methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:45:37' prior: 50882713!
for: aValue in: anAccount 

	^ self new initializeFor: aValue in: anAccouint ! !

!methodRemoval: Deposit #initializeFor: stamp: 'Lb 5/24/2021 21:45:37'!
initializeFor: aValue

	value := aValue !
!Deposit class methodsFor: 'instance creation' stamp: 'Lb 5/24/2021 21:45:47' prior: 50882723!
for: aValue in: anAccount 

	^ self new initializeFor: aValue in: anAccount ! !

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:46:00'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Deposit methodsFor: 'initialization' stamp: 'Lb 5/24/2021 21:45:59' prior: 50882718!
initializeFor: aValue in: anAccount 

	value := aValue.
	account := anAccount! !
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:46:36'!
initializeFor: aValue in: anAccount 

	"value := aValue.
	account := anAccount"! !

AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:46:40'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #AccountTransaction
	instanceVariableNames: 'value account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:46:49'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #AccountTransaction
	instanceVariableNames: 'value account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 'Lb 5/24/2021 21:46:53'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountTransaction methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 21:46:58' prior: 50882752!
initializeFor: aValue in: anAccount 

	value := aValue.
	account := anAccount! !

!methodRemoval: Deposit #initializeFor:in: stamp: 'Lb 5/24/2021 21:47:05'!
initializeFor: aValue in: anAccount 

	value := aValue.
	account := anAccount!

!methodRemoval: Withdraw #initializeFor: stamp: 'Lb 5/24/2021 21:47:09'!
initializeFor: aValue

	value := aValue!
!AccountTransaction methodsFor: 'value' stamp: 'Lb 5/24/2021 21:47:30' prior: 50859440 overrides: 16881508!
value

	^ value! !

!methodRemoval: Deposit #value stamp: 'Lb 5/24/2021 21:48:12'!
value

	^ value!

!methodRemoval: Withdraw #value stamp: 'Lb 5/24/2021 21:48:45'!
value

	^ value!
!AccountTransaction methodsFor: 'accesing' stamp: 'Lb 5/24/2021 21:49:20'!
account

	^ account! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:49:26'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:49:26'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:49:26'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:49:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:49:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:49:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:49:30'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:49:30'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:49:30'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:49:30'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:49:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:49:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:49:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:50:27'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:50:27'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:50:27'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:50:27'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:50:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:50:41'!
ERROR!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'Lb 5/24/2021 21:52:02'!
for: aValue in: anAccount 

	^ self new initializeFor: aValue in: anAccount ! !

!methodRemoval: Withdraw class #for: stamp: 'Lb 5/24/2021 21:52:08'!
for: aValue

	^ self new initializeFor: aValue !

!methodRemoval: Deposit class #for:in: stamp: 'Lb 5/24/2021 21:52:12'!
for: aValue in: anAccount 

	^ self new initializeFor: aValue in: anAccount !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:52:15'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:52:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:52:15'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:52:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:52:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:52:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:52:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:52:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:52:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:52:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:52:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:52:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:52:47'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:53:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:53:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:53:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:53:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:53:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:53:53'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:53:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:53:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:53:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:53:53'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'Lb 5/24/2021 21:56:23' prior: 50859404!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw account account2 |
	
	account := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	deposit :=  Deposit for: 200 in: account2.
	withdraw := Withdraw for: 50 in: account2.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/24/2021 21:56:26'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 21:56:28'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 22:00:31'!
test31
	| portfolio account transaction |

	portfolio := Portfolio new.
	account :=  ReceptiveAccount new.
	transaction := Deposit register: 10 on: account.

	self should: [portfolio register: transaction] 
		raise: Error - MessageNotUnderstood 
		withMessageText: Portfolio errorTransactionCantBeAddedMessage .! !

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/24/2021 22:00:34'!
ERROR!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 22:00:41'!
errorTransactionCantBeAddedMessage
	self shouldBeImplemented.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 22:00:49' prior: 50883316!
errorTransactionCantBeAddedMessage
	^'error'! !

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/24/2021 22:00:56'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 22:01:46' prior: 50881406!
register: aTransaction
	(self includes: (aTransaction account)) ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
	^transactions add: aTransaction.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/24/2021 22:01:48'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Lb 5/24/2021 22:02:22'!
test32
	| portfolio account transaction |

	portfolio := Portfolio new.
	account :=  ReceptiveAccount new.
	transaction := Deposit register: 10 on: account.
	portfolio add: account.

	self should: [portfolio register: transaction] 
		raise: Error - MessageNotUnderstood 
		withMessageText: Portfolio errorTransactionCantBeAddedMessage .! !

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/24/2021 22:02:24'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 22:03:53' prior: 50883329!
register: aTransaction
	((self includes: (aTransaction account)) or: [transactions includes: aTransaction])
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
		
	^transactions add: aTransaction.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/24/2021 22:03:55'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/24/2021 22:03:55'!
FAILURE!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/24/2021 22:03:55'!
FAILURE!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 22:04:17' prior: 50883467!
register: aTransaction
	((self includes: (aTransaction account)) or: [transactions includes: aTransaction])
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
		
	transactions add: aTransaction.! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 22:04:19' prior: 50883596!
register: aTransaction
	((self includes: (aTransaction account)) and: [transactions includes: aTransaction])
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
		
	transactions add: aTransaction.! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 22:04:41' prior: 50883606!
register: aTransaction
	((self includes: (aTransaction account)) or: [transactions includes: aTransaction])
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
		
	transactions add: aTransaction.! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 22:05:06' prior: 50883616!
register: aTransaction
	(self includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
	(transactions includes: aTransaction)
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
		
	transactions add: aTransaction.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/24/2021 22:05:10'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/24/2021 22:05:10'!
ERROR!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/24/2021 22:05:22' prior: 50883626!
register: aTransaction
	(self includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
	(transactions includes: aTransaction)
		ifTrue: [^self error: self class errorTransactionCantBeAddedMessage ].
		
	transactions add: aTransaction.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/24/2021 22:05:24'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/24/2021 22:05:26'!
PASSED!

----SNAPSHOT----(24 May 2021 22:05:35) CuisUniversity-4532.image priorSource: 17572763!

----SNAPSHOT----(24 May 2021 22:05:52) CuisUniversity-4532.image priorSource: 17675118!

----QUIT----(24 May 2021 22:15:06) CuisUniversity-4532.image priorSource: 17675207!

----STARTUP---- (25 May 2021 16:47:40) as /home/lbiglieri/Downloads/build/CuisUniversity/v3.0/CuisUniversity-4532.image!


!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:48:35'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:48:37'!
PASSED!
!AccountTransaction class methodsFor: 'instance creation' stamp: 'Lb 5/25/2021 16:52:58' prior: 50882693!
register: aValue on: account

	| transaction |
	
	((aValue isKindOf: Number) and: [account isKindOf: ReceptiveAccount])	 ifFalse: [^self error: self invalidTypeMessage].
	
	transaction := self new initializeFor: aValue in: account.
	account register: transaction.
		
	^ transaction! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:53:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:53:08'!
PASSED!

!methodRemoval: AccountTransaction class #for:in: stamp: 'Lb 5/25/2021 16:53:13'!
for: aValue in: anAccount 

	^ self new initializeFor: aValue in: anAccount !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:53:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:53:16'!
ERROR!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:53:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:53:16'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'Lb 5/25/2021 16:53:55' prior: 50883141!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw account account2 |
	
	account := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	deposit :=  Deposit register: 200 on: account2.
	withdraw := Withdraw register: 50 on: account2.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:53:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:53:58'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:53:59'!
PASSED!
!AccountTransaction methodsFor: 'initialization' stamp: 'Lb 5/25/2021 16:55:11'!
initializeFor: aValue on: anAccount 

	value := aValue.
	account := anAccount! !
!AccountTransaction class methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 16:55:11' prior: 50884162!
register: aValue on: account

	| transaction |
	
	((aValue isKindOf: Number) and: [account isKindOf: ReceptiveAccount])	 ifFalse: [^self error: self invalidTypeMessage].
	
	transaction := self new initializeFor: aValue on: account.
	account register: transaction.
		
	^ transaction! !

!methodRemoval: AccountTransaction #initializeFor:in: stamp: 'Lb 5/25/2021 16:55:11'!
initializeFor: aValue in: anAccount 

	value := aValue.
	account := anAccount!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:55:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:55:16'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:55:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:55:30'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:55:48'!
PASSED!
!Portfolio methodsFor: 'initialization' stamp: 'Lb 5/25/2021 16:59:21' prior: 50881662 overrides: 50876957!
initialize
	super initialize.
	childElements := OrderedCollection new.! !
!PortfolioEntry methodsFor: 'initialization' stamp: 'Lb 5/25/2021 16:59:25' prior: 50876957 overrides: 16896425!
initialize
	parentPortfolios := OrderedCollection new.
	transactions := OrderedCollection new.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:59:29'!
PASSED!

!methodRemoval: ReceptiveAccount #initialize stamp: 'Lb 5/25/2021 16:59:41'!
initialize
	parentPortfolios := OrderedCollection new.
	transactions := OrderedCollection new.!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 16:59:44'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:01:19' prior: 50881328!
yyy
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	totalTransactions addAll: transactions.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: (aPortfolioEntry yyy)].
	^totalTransactions
	! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:01:27' prior: 50885447!
yyy
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	totalTransactions addAll: transactions.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:01:28'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:02:04' prior: 50885457!
yyy
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:02:05'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:02:30' prior: 50881254 overrides: 50872247!
transactions
	^self yyy! !
!PortfolioEntry methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:06:24'!
yyy
	self subclassResponsibility ! !
!PortfolioEntry methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:07:21'!
optimizedTransactions
	self subclassResponsibility ! !

!methodRemoval: PortfolioEntry #yyy stamp: 'Lb 5/25/2021 17:07:21'!
yyy
	self subclassResponsibility !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:07:41' overrides: 50885717!
optimizedTransactions
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	! !

!methodRemoval: Portfolio #optimizedTransactions stamp: 'Lb 5/25/2021 17:07:49'!
optimizedTransactions
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:08:08' overrides: 50885717!
optimizedTransactions 
	^OrderedCollection new! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:08:08' overrides: 50885717!
optimizedTransactions
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:08:08' prior: 50885583!
yyy
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry optimizedTransactions].
	^totalTransactions
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:08:08' prior: 50885709 overrides: 50872247!
transactions
	^self optimizedTransactions! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:08:08' prior: 50885748 overrides: 50885717!
optimizedTransactions
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry optimizedTransactions].
	^totalTransactions
	! !

!methodRemoval: ReceptiveAccount #yyy stamp: 'Lb 5/25/2021 17:08:08'!
yyy 
	^OrderedCollection new!

!methodRemoval: Portfolio #yyy stamp: 'Lb 5/25/2021 17:08:08'!
yyy
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry optimizedTransactions].
	^totalTransactions
	!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 17:08:17'!
PASSED!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:10:52'!
assertTransactionNotRegistered: aTransaction
	(transactions includes: aTransaction)
		ifTrue: [^self error: self class errorTransactionCantBeAddedMessage ].! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:11:18' prior: 50883754!
register: aTransaction
	(self includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
	self assertTransactionNotRegistered: aTransaction.
	transactions add: aTransaction.! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:12:24'!
assertPortfolioIncludesTransactionAccount: aTransaction
	(self includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:12:40' prior: 50885952!
register: aTransaction
	self assertPortfolioIncludesTransactionAccount: aTransaction .
	self assertTransactionNotRegistered: aTransaction.
	transactions add: aTransaction.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 17:12:42'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:21:23' prior: 50881080!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  [parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self.]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:27:15'!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or:  [parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self.]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:29:50'!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:29:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 17:29:55'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:30:17' prior: 50886130!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self.]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:30:30' prior: 50886139!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self.]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:30:36' prior: 50886321!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self]]! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:30:51' prior: 50886311!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:36:53'!
searchInParents: aPortfolioEntry
	^parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self]! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:37:17' prior: 50886333!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or: [self searchInParents: aPortfolioEntry]! !
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 17:39:10' prior: 50880885!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or:
		[(self elementAlreadyInTree: aPortfolioEntry withoutSubtree: self)])
			ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !

!methodRemoval: Portfolio #elementAlreadyInTree: stamp: 'Lb 5/25/2021 17:39:20'!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self]].!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 17:39:59'!
PASSED!
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 17:43:48' prior: 50886371!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or:
		[self searchInParents: aPortfolioEntry])
			ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 17:43:53' prior: 50886541!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or:[self searchInParents: aPortfolioEntry])
		ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 17:43:54' prior: 50886550!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or: [self searchInParents: aPortfolioEntry])
		ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:43:56'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:46:27'!
searchInParents: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or: [self searchInParents: aPortfolioEntry]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:46:27' prior: 50886354!
searchInParents: aPortfolioEntry
	^parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio searchInParents: aPortfolioEntry withoutSubtree: self]! !

!methodRemoval: Portfolio #elementAlreadyInTree:withoutSubtree: stamp: 'Lb 5/25/2021 17:46:27'!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or: [self searchInParents: aPortfolioEntry]!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:49:38'!
existsInParents: aPortfolioEntry
	^parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio searchInParents: aPortfolioEntry withoutSubtree: self]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:49:38' prior: 50886684!
searchInParents: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or: [self existsInParents: aPortfolioEntry]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:49:38' prior: 50886559!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or: [self existsInParents: aPortfolioEntry])
		ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !

!methodRemoval: Portfolio #searchInParents: stamp: 'Lb 5/25/2021 17:49:38'!
searchInParents: aPortfolioEntry
	^parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio searchInParents: aPortfolioEntry withoutSubtree: self]!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:51:53'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 17:51:54'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:53:54'!
exists: aPortfolioEntry in: portfolios
		^portfolios anySatisfy: [:aChildElement | aChildElement includes: aPortfolioEntry].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:54:51' prior: 50880894 overrides: 50879178!
includes: aPortfolioEntry
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: childElements].
	"[childElements anySatisfy: [:aChildElement | aChildElement includes: aPortfolioEntry]]."! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:56:12' prior: 50886150!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	"^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: (childElements copy remove: anExceptuatedEntry)]."
	^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 17:56:13'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 17:56:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 17:56:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 17:56:14'!
PASSED!

----STARTUP---- (25 May 2021 18:57:08) as /home/lbiglieri/Downloads/build/CuisUniversity/v3.0/CuisUniversity-4532.image!

!AccountTransaction class methodsFor: 'instance creation' stamp: 'Lb 5/25/2021 16:52:58' prior: 50882693!
register: aValue on: account

	| transaction |
	
	((aValue isKindOf: Number) and: [account isKindOf: ReceptiveAccount])	 ifFalse: [^self error: self invalidTypeMessage].
	
	transaction := self new initializeFor: aValue in: account.
	account register: transaction.
		
	^ transaction! !

!methodRemoval: AccountTransaction class #for:in: stamp: 'Lb 5/25/2021 18:57:17'!
for: aValue in: anAccount 

	^ self new initializeFor: aValue in: anAccount !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 'Lb 5/25/2021 16:53:55' prior: 50883141!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw account account2 |
	
	account := ReceptiveAccount new.
	account2 := ReceptiveAccount new.
	deposit :=  Deposit register: 200 on: account2.
	withdraw := Withdraw register: 50 on: account2.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!AccountTransaction methodsFor: 'initialization' stamp: 'Lb 5/25/2021 16:55:11'!
initializeFor: aValue on: anAccount 

	value := aValue.
	account := anAccount! !
!AccountTransaction class methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 16:55:11' prior: 50887078!
register: aValue on: account

	| transaction |
	
	((aValue isKindOf: Number) and: [account isKindOf: ReceptiveAccount])	 ifFalse: [^self error: self invalidTypeMessage].
	
	transaction := self new initializeFor: aValue on: account.
	account register: transaction.
		
	^ transaction! !

!methodRemoval: AccountTransaction #initializeFor:in: stamp: 'Lb 5/25/2021 18:57:17'!
initializeFor: aValue in: anAccount 

	value := aValue.
	account := anAccount!
!Portfolio methodsFor: 'initialization' stamp: 'Lb 5/25/2021 16:59:21' prior: 50881662 overrides: 50876957!
initialize
	super initialize.
	childElements := OrderedCollection new.! !
!PortfolioEntry methodsFor: 'initialization' stamp: 'Lb 5/25/2021 16:59:25' prior: 50876957 overrides: 16896425!
initialize
	parentPortfolios := OrderedCollection new.
	transactions := OrderedCollection new.! !

!methodRemoval: ReceptiveAccount #initialize stamp: 'Lb 5/25/2021 18:57:17'!
initialize
	parentPortfolios := OrderedCollection new.
	transactions := OrderedCollection new.!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:01:19' prior: 50881328!
yyy
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	totalTransactions addAll: transactions.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: (aPortfolioEntry yyy)].
	^totalTransactions
	! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:01:27' prior: 50887151!
yyy
	| totalTransactions |
	totalTransactions := OrderedCollection new.
	totalTransactions addAll: transactions.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:02:04' prior: 50887161!
yyy
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:02:30' prior: 50881254 overrides: 50872247!
transactions
	^self yyy! !
!PortfolioEntry methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:06:24'!
yyy
	self subclassResponsibility ! !
!PortfolioEntry methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:07:21'!
optimizedTransactions
	self subclassResponsibility ! !

!methodRemoval: PortfolioEntry #yyy stamp: 'Lb 5/25/2021 18:57:17'!
yyy
	self subclassResponsibility !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:07:41' overrides: 50887188!
optimizedTransactions
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	! !

!methodRemoval: Portfolio #optimizedTransactions stamp: 'Lb 5/25/2021 18:57:17'!
optimizedTransactions
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	!
!ReceptiveAccount methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:08:08' overrides: 50887188!
optimizedTransactions 
	^OrderedCollection new! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:08:08' overrides: 50887188!
optimizedTransactions
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry yyy].
	^totalTransactions
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:08:08' prior: 50887171!
yyy
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry optimizedTransactions].
	^totalTransactions
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:08:08' prior: 50887180 overrides: 50872247!
transactions
	^self optimizedTransactions! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:08:08' prior: 50887219 overrides: 50887188!
optimizedTransactions
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry optimizedTransactions].
	^totalTransactions
	! !

!methodRemoval: ReceptiveAccount #yyy stamp: 'Lb 5/25/2021 18:57:17'!
yyy 
	^OrderedCollection new!

!methodRemoval: Portfolio #yyy stamp: 'Lb 5/25/2021 18:57:17'!
yyy
	| totalTransactions |
	totalTransactions := transactions copy.
	childElements do: [:aPortfolioEntry | totalTransactions addAll: aPortfolioEntry optimizedTransactions].
	^totalTransactions
	!
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:10:52'!
assertTransactionNotRegistered: aTransaction
	(transactions includes: aTransaction)
		ifTrue: [^self error: self class errorTransactionCantBeAddedMessage ].! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:11:18' prior: 50883754!
register: aTransaction
	(self includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].
	self assertTransactionNotRegistered: aTransaction.
	transactions add: aTransaction.! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:12:24'!
assertPortfolioIncludesTransactionAccount: aTransaction
	(self includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].! !
!Portfolio methodsFor: 'transactions' stamp: 'Lb 5/25/2021 17:12:40' prior: 50887273!
register: aTransaction
	self assertPortfolioIncludesTransactionAccount: aTransaction .
	self assertTransactionNotRegistered: aTransaction.
	transactions add: aTransaction.! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:21:23' prior: 50881080!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  [parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self.]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:27:15'!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or:  [parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self.]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:29:50'!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:30:17' prior: 50887300!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self.]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:30:30' prior: 50887309!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self.]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:30:36' prior: 50887340!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self]]! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:30:51' prior: 50887330!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self]].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:36:53'!
searchInParents: aPortfolioEntry
	^parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self]! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:37:17' prior: 50887352!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or: [self searchInParents: aPortfolioEntry]! !
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 17:39:10' prior: 50880885!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or:
		[(self elementAlreadyInTree: aPortfolioEntry withoutSubtree: self)])
			ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !

!methodRemoval: Portfolio #elementAlreadyInTree: stamp: 'Lb 5/25/2021 18:57:17'!
elementAlreadyInTree: aPortfolioEntry

	^ (self includes: aPortfolioEntry) or:  
		[parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio elementAlreadyInTree: aPortfolioEntry withoutSubtree: self]].!
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 17:43:48' prior: 50887390!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or:
		[self searchInParents: aPortfolioEntry])
			ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 17:43:53' prior: 50887409!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or:[self searchInParents: aPortfolioEntry])
		ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 17:43:54' prior: 50887418!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or: [self searchInParents: aPortfolioEntry])
		ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:46:27'!
searchInParents: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or: [self searchInParents: aPortfolioEntry]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:46:27' prior: 50887373!
searchInParents: aPortfolioEntry
	^parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio searchInParents: aPortfolioEntry withoutSubtree: self]! !

!methodRemoval: Portfolio #elementAlreadyInTree:withoutSubtree: stamp: 'Lb 5/25/2021 18:57:17'!
elementAlreadyInTree: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or: [self searchInParents: aPortfolioEntry]!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:49:38'!
existsInParents: aPortfolioEntry
	^parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio searchInParents: aPortfolioEntry withoutSubtree: self]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:49:38' prior: 50887435!
searchInParents: aPortfolioEntry withoutSubtree: anExceptuatedEntry

	^ (self includes: aPortfolioEntry exceptuating: anExceptuatedEntry) or: [self existsInParents: aPortfolioEntry]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 17:49:38' prior: 50887427!
assertNotInTree: aPortfolioEntry 
	((self includes: aPortfolioEntry) or: [self existsInParents: aPortfolioEntry])
		ifTrue: [^self error: self class errorElementAlreadyAddedMessage ].! !

!methodRemoval: Portfolio #searchInParents: stamp: 'Lb 5/25/2021 18:57:17'!
searchInParents: aPortfolioEntry
	^parentPortfolios anySatisfy: [:aParentPortfolio | aParentPortfolio searchInParents: aPortfolioEntry withoutSubtree: self]!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:53:54'!
exists: aPortfolioEntry in: portfolios
		^portfolios anySatisfy: [:aChildElement | aChildElement includes: aPortfolioEntry].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:54:51' prior: 50880894 overrides: 50879178!
includes: aPortfolioEntry
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: childElements].
	"[childElements anySatisfy: [:aChildElement | aChildElement includes: aPortfolioEntry]]."! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 17:56:12' prior: 50887320!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	"^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: (childElements copy remove: anExceptuatedEntry)]."
	^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:12:54' prior: 50887510!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	|portfolioEntries|
	portfolioEntries := childElements copy remove: anExceptuatedEntry ifAbsent: childElements.
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: portfolioEntries].
	"^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]"! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:12:57'!
ERROR!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:12:57'!
ERROR!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:12:57'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:12:58'!
ERROR!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:12:58'!
ERROR!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:12:58'!
ERROR!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:12:58'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:12:58'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:13:35' prior: 50887524!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	|portfolioEntries|
	portfolioEntries := childElements copy.
	portfolioEntries remove: anExceptuatedEntry ifAbsent: [^childElements].
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: portfolioEntries].
	"^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]"! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:13:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:13:37'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:14:07' prior: 50887656!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	|portfolioEntries|
	portfolioEntries := childElements copy.
	portfolioEntries remove: anExceptuatedEntry ifAbsent: [^portfolioEntries].
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: portfolioEntries].
	"^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]"! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:14:11' prior: 50887789!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	|portfolioEntries|
	portfolioEntries := childElements copy.
	portfolioEntries remove: anExceptuatedEntry ifAbsent: [portfolioEntries].
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: portfolioEntries].
	"^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]"! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:14:13'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:14:35' prior: 50887806!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	|portfolioEntries|
	portfolioEntries := childElements copy.
	portfolioEntries remove: anExceptuatedEntry ifAbsent: [].
	
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: portfolioEntries].
	"^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]"! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:14:36'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:14:48' prior: 50887939!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	|portfolioEntries|
	portfolioEntries := childElements copy.
	portfolioEntries remove: anExceptuatedEntry ifAbsent: ['doNothing'].
	
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: portfolioEntries].
	"^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]"! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:14:49'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:15:03' prior: 50888072!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	|portfolioEntries|
	portfolioEntries := childElements copy.
	portfolioEntries remove: anExceptuatedEntry ifAbsent: [].
	
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: portfolioEntries].
	"^(self = aPortfolioEntry) or: 
		[childElements anySatisfy: [:aChildElement | (aChildElement ~= anExceptuatedEntry) and: [aChildElement includes: aPortfolioEntry]]]"! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:16:27' prior: 50888205!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	|portfolioEntries|
	portfolioEntries := childElements copy.
	portfolioEntries remove: anExceptuatedEntry ifAbsent: [].
	
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: portfolioEntries].! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:17:42' prior: 50887493!
exists: aPortfolioEntry in: porfolioEntries
		^porfolioEntries anySatisfy: [:aChildElement | aChildElement includes: aPortfolioEntry].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:17:43'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 20:28:38'!
test33
	| portfolio portfolio1 portfolio2 portfolio3 portfolio4 account account1 account2 |

	portfolio := Portfolio new.
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	
	account :=  ReceptiveAccount new.
	account1 :=  ReceptiveAccount new.
	account2 :=  ReceptiveAccount new.
	
	portfolio add: account.
	portfolio add: portfolio1.
	portfolio add: portfolio2.
	portfolio2 add: portfolio3.
	portfolio2 add: portfolio4.
	portfolio3 add: account1.
	portfolio3 add: account2.
	
	self assert: 4 equals: portfolio totalChildPortfolios.! !

!testRun: #PortfolioTest #test33 stamp: 'Lb 5/25/2021 20:28:39'!
FAILURE!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:29:15' prior: 50880908 overrides: 50879996!
totalPortfolios
	^1 + (childElements sum: [:aPortfolioEntry | aPortfolioEntry totalPortfolios] ifEmpty: [0]).! !
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:29:44' prior: 50888382 overrides: 50879996!
totalPortfolios
	^1 + self totalChildPortfolios.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test33 stamp: 'Lb 5/25/2021 20:29:47'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #PortfolioTest #test33 stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 20:29:50'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 20:31:31'!
test31PortfolioCannotRegisterSameTransactionMoreThanOnce
	| portfolio account transaction |

	portfolio := Portfolio new.
	account :=  ReceptiveAccount new.
	transaction := Deposit register: 10 on: account.

	self should: [portfolio register: transaction] 
		raise: Error - MessageNotUnderstood 
		withMessageText: Portfolio errorTransactionCantBeAddedMessage .! !

!methodRemoval: PortfolioTest #test31 stamp: 'Lb 5/25/2021 20:31:31'!
test31
	| portfolio account transaction |

	portfolio := Portfolio new.
	account :=  ReceptiveAccount new.
	transaction := Deposit register: 10 on: account.

	self should: [portfolio register: transaction] 
		raise: Error - MessageNotUnderstood 
		withMessageText: Portfolio errorTransactionCantBeAddedMessage .!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 20:31:51'!
test32PortfolioCannotRegisterSameTransactionMoreThanOnce
	| portfolio account transaction |

	portfolio := Portfolio new.
	account :=  ReceptiveAccount new.
	transaction := Deposit register: 10 on: account.
	portfolio add: account.

	self should: [portfolio register: transaction] 
		raise: Error - MessageNotUnderstood 
		withMessageText: Portfolio errorTransactionCantBeAddedMessage .! !

!methodRemoval: PortfolioTest #test32 stamp: 'Lb 5/25/2021 20:31:51'!
test32
	| portfolio account transaction |

	portfolio := Portfolio new.
	account :=  ReceptiveAccount new.
	transaction := Deposit register: 10 on: account.
	portfolio add: account.

	self should: [portfolio register: transaction] 
		raise: Error - MessageNotUnderstood 
		withMessageText: Portfolio errorTransactionCantBeAddedMessage .!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 20:32:28'!
test32PortfolioCannotRegisterTransactionOfExternalAccount
	| portfolio account transaction |

	portfolio := Portfolio new.
	account :=  ReceptiveAccount new.
	transaction := Deposit register: 10 on: account.
	portfolio add: account.

	self should: [portfolio register: transaction] 
		raise: Error - MessageNotUnderstood 
		withMessageText: Portfolio errorTransactionCantBeAddedMessage .! !

!methodRemoval: PortfolioTest #test32PortfolioCannotRegisterSameTransactionMoreThanOnce stamp: 'Lb 5/25/2021 20:32:28'!
test32PortfolioCannotRegisterSameTransactionMoreThanOnce
	| portfolio account transaction |

	portfolio := Portfolio new.
	account :=  ReceptiveAccount new.
	transaction := Deposit register: 10 on: account.
	portfolio add: account.

	self should: [portfolio register: transaction] 
		raise: Error - MessageNotUnderstood 
		withMessageText: Portfolio errorTransactionCantBeAddedMessage .!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 20:34:44'!
test33PortfolioShouldKnowItsGrandchildPortfolios
	| portfolio portfolio1 portfolio2 portfolio3 portfolio4 account account1 account2 |

	portfolio := Portfolio new.
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	
	account :=  ReceptiveAccount new.
	account1 :=  ReceptiveAccount new.
	account2 :=  ReceptiveAccount new.
	
	portfolio add: account.
	portfolio add: portfolio1.
	portfolio add: portfolio2.
	portfolio2 add: portfolio3.
	portfolio2 add: portfolio4.
	portfolio3 add: account1.
	portfolio3 add: account2.
	
	self assert: 4 equals: portfolio totalChildPortfolios.! !

!methodRemoval: PortfolioTest #test33 stamp: 'Lb 5/25/2021 20:34:44'!
test33
	| portfolio portfolio1 portfolio2 portfolio3 portfolio4 account account1 account2 |

	portfolio := Portfolio new.
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	
	account :=  ReceptiveAccount new.
	account1 :=  ReceptiveAccount new.
	account2 :=  ReceptiveAccount new.
	
	portfolio add: account.
	portfolio add: portfolio1.
	portfolio add: portfolio2.
	portfolio2 add: portfolio3.
	portfolio2 add: portfolio4.
	portfolio3 add: account1.
	portfolio3 add: account2.
	
	self assert: 4 equals: portfolio totalChildPortfolios.!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test31PortfolioCannotRegisterSameTransactionMoreThanOnce stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test32PortfolioCannotRegisterTransactionOfExternalAccount stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #PortfolioTest #test33PortfolioShouldKnowItsGrandchildPortfolios stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 20:34:59'!
PASSED!
!Portfolio methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:35:25' prior: 50887501 overrides: 50879178!
includes: aPortfolioEntry
	^(self = aPortfolioEntry) or: [self exists: aPortfolioEntry in: childElements].! !
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 20:39:37' prior: 50887283!
assertPortfolioIncludesTransactionAccount: aTransaction
	(childElements includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test31PortfolioCannotRegisterSameTransactionMoreThanOnce stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test32PortfolioCannotRegisterTransactionOfExternalAccount stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #PortfolioTest #test33PortfolioShouldKnowItsGrandchildPortfolios stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 20:39:39'!
PASSED!
!Portfolio methodsFor: 'asserts' stamp: 'Lb 5/25/2021 20:40:32'!
assertPortfolioIncludesTransactionAccountDirectly: aTransaction
	(childElements includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'Lb 5/25/2021 20:40:32' prior: 50887292!
register: aTransaction
	self assertPortfolioIncludesTransactionAccountDirectly: aTransaction .
	self assertTransactionNotRegistered: aTransaction.
	transactions add: aTransaction.! !

!methodRemoval: Portfolio #assertPortfolioIncludesTransactionAccount: stamp: 'Lb 5/25/2021 20:40:32'!
assertPortfolioIncludesTransactionAccount: aTransaction
	(childElements includes: (aTransaction account))
		ifFalse: [^self error: self class errorTransactionCantBeAddedMessage ].!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test31PortfolioCannotRegisterSameTransactionMoreThanOnce stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test32PortfolioCannotRegisterTransactionOfExternalAccount stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

!testRun: #PortfolioTest #test33PortfolioShouldKnowItsGrandchildPortfolios stamp: 'Lb 5/25/2021 20:40:36'!
PASSED!

----SNAPSHOT----(25 May 2021 20:40:55) CuisUniversity-4532.image priorSource: 17675296!

----QUIT----(25 May 2021 20:41:11) CuisUniversity-4532.image priorSource: 17843890!

----STARTUP---- (25 May 2021 20:45:22) as /home/lbiglieri/Downloads/build/CuisUniversity/v3.0/CuisUniversity-4532.image!

!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:47:41'!
assert: aPortfolio hasBalance: aBalance totalAccounts: aNumberOfAccounts totalChildPortfolios: aNumberOfPortfolios

	self assert: aBalance equals: aPortfolio balance.
	self assert: aNumberOfAccounts equals: aPortfolio totalAccounts.
	self assert: aNumberOfPortfolios equals: aPortfolio totalChildPortfolios.! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:48:05' prior: 50877501!
test01NewPortfolioShouldBeEmptyAndHaveZeroBalance
	| portfolio |
	
	portfolio := Portfolio new.

	self assert: portfolio hasBalance: 0 totalAccounts: 0 totalChildPortfolios: 0! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:48:14' prior: 50877678!
test02AddEmptyAccountShouldRegisterAccountWithNoBalance
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self assert: portfolio hasBalance: 0 totalAccounts: 1 totalChildPortfolios: 0! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:48:25' prior: 50877628!
test03PortfolioCantAddSameAccountMoreThanOnce
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	
	self should: [portfolio add: account] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage.
	
	self assert: portfolio hasBalance: 0 totalAccounts: 1 totalChildPortfolios: 0! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:48:35' prior: 50877567!
test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	Deposit register: 100 on: account.
	
	portfolio add: account.
	
	self assert: portfolio hasBalance: 100 totalAccounts: 1 totalChildPortfolios: 0! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:48:49' prior: 50877392!
test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount
	| portfolio account |
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	self assert: portfolio hasBalance: 100 totalAccounts: 1 totalChildPortfolios: 0! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:49:00' prior: 50877532!
test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio add: account2.
	Deposit register: 50 on: account2.
	
	self assert: portfolio hasBalance: 150 totalAccounts: 2 totalChildPortfolios: 0! !

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:49:05'!
PASSED!

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test31PortfolioCannotRegisterSameTransactionMoreThanOnce stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test32PortfolioCannotRegisterTransactionOfExternalAccount stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!

!testRun: #PortfolioTest #test33PortfolioShouldKnowItsGrandchildPortfolios stamp: 'Lb 5/25/2021 20:49:08'!
PASSED!
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:49:24' prior: 50877447!
test07PortfolioShouldKnowItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	portfolio add: account2.
	Deposit register: 50 on: account2.
	
	self assert: portfolio hasBalance: 150 totalAccounts: 2 totalChildPortfolios: 0.
	
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:49:35' prior: 50877512!
test08PortfolioShouldKnowOnlyItsAccounts
	| portfolio account account2|
	
	portfolio := Portfolio new.
	account := ReceptiveAccount new.
	portfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	Deposit register: 50 on: account2.
	
	self assert: portfolio hasBalance: 100 totalAccounts: 1 totalChildPortfolios: 0.
	self assert: (portfolio includes: account).
	self deny: (portfolio includes: account2).! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:50:08' prior: 50877433!
test15PortfolioShouldBeAbleToAddAChildPortfolio
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.
	
	self assert: portfolio hasBalance: 0 totalAccounts: 0 totalChildPortfolios: 1.! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:50:19' prior: 50877610!
test16PortfolioCantAddSameChildPorfolioMoreThanOnce
	| portfolio childPortfolio |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	portfolio add: childPortfolio.

	self should: [portfolio add: childPortfolio.] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorElementAlreadyAddedMessage.
	
	self assert: portfolio hasBalance: 0 totalAccounts: 0 totalChildPortfolios: 1.! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:50:31' prior: 50877661!
test17PortfolioShouldBeAbleToAddMultipleChildPortfolios
	| portfolio childPortfolio1 childPortfolio2 |
	
	portfolio := Portfolio new.
	childPortfolio1 := Portfolio new.
	childPortfolio2 := Portfolio new.
	portfolio add: childPortfolio1.
	portfolio add: childPortfolio2.

	self assert: portfolio hasBalance: 0 totalAccounts: 0 totalChildPortfolios: 2.! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:50:40' prior: 50877467!
test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	portfolio add: childPortfolio.
	
	self assert: 100 equals: portfolio balance.
	self assert: 1 equals: portfolio totalAccounts.
	self assert: 1 equals: portfolio totalChildPortfolios.
	
	self assert: portfolio hasBalance: 100 totalAccounts: 1 totalChildPortfolios: 1.! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:50:43' prior: 50889573!
test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances
	| portfolio childPortfolio account |
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	portfolio add: childPortfolio.
	
	self assert: portfolio hasBalance: 100 totalAccounts: 1 totalChildPortfolios: 1.! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:50:51' prior: 50877582!
test19PortfolioAccountsShouldBeOfTypeAccount
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio add: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.
	
	self assert: portfolio hasBalance: 0 totalAccounts: 0 totalChildPortfolios: 0.! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:51:01' prior: 50877646!
test20ChildPortfoliosShouldBeOfTypePortfolio
	| portfolio |
	
	portfolio := Portfolio new.
	
	self should: [portfolio add: 'test'] raise: Error - MessageNotUnderstood withMessageText: Portfolio errorInvalidTypeMessage.

	self assert: portfolio hasBalance: 0 totalAccounts: 0 totalChildPortfolios: 0.! !
!PortfolioTest methodsFor: 'testing' stamp: 'Lb 5/25/2021 20:51:16' prior: 50877407!
test21PortfolioShouldKnowItsChildPortfoliosAccounts
	| portfolio childPortfolio childPortfolio2 account account2|
	
	portfolio := Portfolio new.
	childPortfolio := Portfolio new.
	childPortfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	childPortfolio add: account.
	Deposit register: 100 on: account.
	
	account2 := ReceptiveAccount new.
	childPortfolio2 add: account2.
	Deposit register: 50 on: account2.
	
	portfolio add: childPortfolio.
	portfolio add: childPortfolio2.

	self assert: portfolio hasBalance: 150 totalAccounts: 2 totalChildPortfolios: 2.
	
	self assert: (portfolio includes: account).
	self assert: (portfolio includes: account2).! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test31PortfolioCannotRegisterSameTransactionMoreThanOnce stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test32PortfolioCannotRegisterTransactionOfExternalAccount stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!

!testRun: #PortfolioTest #test33PortfolioShouldKnowItsGrandchildPortfolios stamp: 'Lb 5/25/2021 20:51:48'!
PASSED!
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(childElements _ [
	(OrderedCollection
		cover: (49 to: 65)
		declaredAt: (49 to: 65)) new ] valueCoveringAll:
		{67 to: 69})
		cover: (32 to: 44)
		declaredAt: (32 to: 44).! !
!Behavior method!
initialize
	(parentPortfolios _ [
	(OrderedCollection
		cover: (33 to: 49)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{51 to: 53})
		cover: (13 to: 28)
		declaredAt: (13 to: 28).
	(transactions _ [
	(OrderedCollection
		cover: (73 to: 89)
		declaredAt: (33 to: 49)) new ] valueCoveringAll:
		{91 to: 93})
		cover: (57 to: 68)
		declaredAt: (57 to: 68).! !
!Behavior method!
balance
	^ [
	(childElements
		cover: (12 to: 24)
		declaredAt: (12 to: 24))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (51 to: 65)
				declaredAt: (33 to: 47)) balance ] valueCoveringAll:
				{67 to: 73} ]
		ifEmpty: [
			0 coverAll:
				{86 to: 86} ]] valueCoveringAll:
		{26 to: 29. 76 to: 83}.! !
!Behavior method!
totalAccounts
	^ [
	(childElements
		cover: (17 to: 29)
		declaredAt: (17 to: 29))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (56 to: 70)
				declaredAt: (38 to: 52)) totalAccounts ] valueCoveringAll:
				{72 to: 84} ]
		ifEmpty: [
			0 coverAll:
				{97 to: 97} ]] valueCoveringAll:
		{31 to: 34. 87 to: 94}.! !
!Behavior method!
totalChildPortfolios
	^ [
	(childElements
		cover: (24 to: 36)
		declaredAt: (24 to: 36))
		sum: [ :aPortfolioEntry |
			[
			(aPortfolioEntry
				cover: (63 to: 77)
				declaredAt: (45 to: 59)) totalPortfolios ] valueCoveringAll:
				{79 to: 93} ]
		ifEmpty: [
			0 coverAll:
				{106 to: 106} ]] valueCoveringAll:
		{38 to: 41. 96 to: 103}.! !

!testRun: #PortfolioTest #test01NewPortfolioShouldBeEmptyAndHaveZeroBalance stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
add: aPortfolioEntry
	[
	(self coverAll:
		{24 to: 27}) assertBelongsInPortfolio:
		(aPortfolioEntry
			cover: (55 to: 69)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{29 to: 53}.
	[
	(self coverAll:
		{73 to: 76}) assertNotInTree:
		(aPortfolioEntry
			cover: (95 to: 109)
			declaredAt: (6 to: 20)) ] valueCoveringAll:
		{78 to: 93}.
	[
	(aPortfolioEntry
		cover: (114 to: 128)
		declaredAt: (6 to: 20)) beAddedTo:
		(self coverAll:
			{141 to: 144}) ] valueCoveringAll:
		{130 to: 139}.! !
!Behavior method!
assertBelongsInPortfolio: aPortfolioEntry
	[
	([
	(aPortfolioEntry
		cover: (46 to: 60)
		declaredAt: (27 to: 41)) isKindOf:
		(PortfolioEntry
			cover: (72 to: 85)
			declaredAt: (72 to: 85)) ] valueCoveringAll:
		{62 to: 70}) ifFalse: [ ^ [
		(self coverAll:
			{99 to: 102}) error:
			([
			([
			(self coverAll:
				{111 to: 114}) class ] valueCoveringAll:
				{116 to: 120}) errorInvalidTypeMessage ] valueCoveringAll:
				{122 to: 144}) ] valueCoveringAll:
			{104 to: 109} ]] valueCoveringAll:
		{88 to: 95}.! !
!Behavior method!
assertNotInTree: aPortfolioEntry
	[
	([
	([
	(self coverAll:
		{38 to: 41}) includes:
		(aPortfolioEntry
			cover: (53 to: 67)
			declaredAt: (18 to: 32)) ] valueCoveringAll:
		{43 to: 51}) or: [
		[
		(self coverAll:
			{75 to: 78}) existsInParents:
			(aPortfolioEntry
				cover: (97 to: 111)
				declaredAt: (18 to: 32)) ] valueCoveringAll:
			{80 to: 95} ]] valueCoveringAll:
		{70 to: 72}) ifTrue: [ ^ [
		(self coverAll:
			{127 to: 130}) error:
			([
			([
			(self coverAll:
				{139 to: 142}) class ] valueCoveringAll:
				{144 to: 148}) errorElementAlreadyAddedMessage ] valueCoveringAll:
				{150 to: 180}) ] valueCoveringAll:
			{132 to: 137} ]] valueCoveringAll:
		{117 to: 123}.! !
!Behavior method!
includes: aPortfolioEntry
	^ [
	([
	(self coverAll:
		{30 to: 33}) =
		(aPortfolioEntry
			cover: (37 to: 51)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{35 to: 35}) or: [
		[
		(self coverAll:
			{59 to: 62})
			exists:
				(aPortfolioEntry
					cover: (72 to: 86)
					declaredAt: (11 to: 25))
			in:
				(childElements
					cover: (92 to: 104)
					declaredAt: (92 to: 104)) ] valueCoveringAll:
			{64 to: 70. 88 to: 90} ]] valueCoveringAll:
		{54 to: 56}.! !
!Behavior method!
exists: aPortfolioEntry in: porfolioEntries
	^ [
	(porfolioEntries
		cover: (48 to: 62)
		declaredAt: (29 to: 43)) anySatisfy: [ :aChildElement |
		[
		(aChildElement
			cover: (94 to: 106)
			declaredAt: (78 to: 90)) includes:
			(aPortfolioEntry
				cover: (118 to: 132)
				declaredAt: (9 to: 23)) ] valueCoveringAll:
			{108 to: 116} ]] valueCoveringAll:
		{64 to: 74}.! !
!Behavior method!
existsInParents: aPortfolioEntry
	^ [
	(parentPortfolios
		cover: (36 to: 51)
		declaredAt: (36 to: 51)) anySatisfy: [ :aParentPortfolio |
		[
		(aParentPortfolio
			cover: (86 to: 101)
			declaredAt: (67 to: 82))
			searchInParents:
				(aPortfolioEntry
					cover: (120 to: 134)
					declaredAt: (18 to: 32))
			withoutSubtree:
				(self coverAll:
					{152 to: 155}) ] valueCoveringAll:
			{103 to: 118. 136 to: 150} ]] valueCoveringAll:
		{53 to: 63}.! !
!Behavior method!
beAddedTo: aPortfolio
	[
	(aPortfolio
		cover: (24 to: 33)
		declaredAt: (12 to: 21)) safetlyAdd:
		(self coverAll:
			{47 to: 50}) ] valueCoveringAll:
		{35 to: 45}.
	[
	(parentPortfolios
		cover: (54 to: 69)
		declaredAt: (54 to: 69)) add:
		(aPortfolio
			cover: (76 to: 85)
			declaredAt: (12 to: 21)) ] valueCoveringAll:
		{71 to: 74}.
	[
	(transactions
		cover: (89 to: 100)
		declaredAt: (89 to: 100)) do: [ :aTransaction |
		[
		(aPortfolio
			cover: (123 to: 132)
			declaredAt: (12 to: 21)) register:
			(aTransaction
				cover: (144 to: 155)
				declaredAt: (108 to: 119)) ] valueCoveringAll:
			{134 to: 142} ]] valueCoveringAll:
		{102 to: 104}.! !
!Behavior method!
safetlyAdd: aPortfolioEntry
	[
	(childElements
		cover: (30 to: 42)
		declaredAt: (30 to: 42)) add:
		(aPortfolioEntry
			cover: (49 to: 63)
			declaredAt: (13 to: 27)) ] valueCoveringAll:
		{44 to: 47}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (11 to: 22)
		declaredAt: (11 to: 22))
		inject:
			(0 coverAll:
				{32 to: 32})
		into: [ :balance :transaction |
			[
			(transaction
				cover: (65 to: 75)
				declaredAt: (51 to: 61)) addTo:
				(balance
					cover: (84 to: 90)
					declaredAt: (42 to: 48)) ] valueCoveringAll:
				{77 to: 82} ]] valueCoveringAll:
		{24 to: 30. 34 to: 38}.! !
!Behavior method!
totalAccounts
	^ 1 coverAll:
		{18 to: 19}.! !
!Behavior method!
totalPortfolios
	^ 0 coverAll:
		{20 to: 21}.! !

!testRun: #PortfolioTest #test02AddEmptyAccountShouldRegisterAccountWithNoBalance stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
errorElementAlreadyAddedMessage
	^ 'Error account already added to this portfolio.' coverAll:
		{35 to: 82}.! !
!Behavior method!
includes: aPortfolioEntry
	^ [
	(self coverAll:
		{29 to: 32}) =
		(aPortfolioEntry
			cover: (36 to: 50)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{34 to: 34}.! !

!testRun: #PortfolioTest #test03PortfolioCantAddSameAccountMoreThanOnce stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	[
	([
	([
	(aValue
		cover: (53 to: 58)
		declaredAt: (11 to: 16)) isKindOf:
		(Number
			cover: (70 to: 75)
			declaredAt: (70 to: 75)) ] valueCoveringAll:
		{60 to: 68}) and: [
		[
		(account
			cover: (84 to: 90)
			declaredAt: (22 to: 28)) isKindOf:
			(ReceptiveAccount
				cover: (102 to: 117)
				declaredAt: (102 to: 117)) ] valueCoveringAll:
			{92 to: 100} ]] valueCoveringAll:
		{78 to: 81}) ifFalse: [ ^ [
		(self coverAll:
			{133 to: 136}) error:
			([
			(self coverAll:
				{145 to: 148}) invalidTypeMessage ] valueCoveringAll:
				{150 to: 167}) ] valueCoveringAll:
			{138 to: 143} ]] valueCoveringAll:
		{122 to: 129}.
	(transaction _ [
	([
	(self coverAll:
		{189 to: 192}) new ] valueCoveringAll:
		{194 to: 196})
		initializeFor:
			(aValue
				cover: (213 to: 218)
				declaredAt: (11 to: 16))
		on:
			(account
				cover: (224 to: 230)
				declaredAt: (22 to: 28)) ] valueCoveringAll:
		{198 to: 211. 220 to: 222})
		cover: (174 to: 184)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (234 to: 240)
		declaredAt: (22 to: 28)) register:
		(transaction
			cover: (252 to: 262)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{242 to: 250}.
	^ transaction
		cover: (271 to: 281)
		declaredAt: (34 to: 44).! !
!Behavior method!
initializeFor: aValue on: anAccount
	(value _ aValue
		cover: (49 to: 54)
		declaredAt: (16 to: 21))
		cover: (40 to: 44)
		declaredAt: (40 to: 44).
	(account _ anAccount
		cover: (69 to: 77)
		declaredAt: (27 to: 35))
		cover: (58 to: 64)
		declaredAt: (58 to: 64).! !
!Behavior method!
register: aTransaction
	[
	(transactions
		cover: (25 to: 36)
		declaredAt: (25 to: 36)) add:
		(aTransaction
			cover: (43 to: 54)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{38 to: 41}.
	[
	(self coverAll:
		{58 to: 61}) registerOnParents:
		(aTransaction
			cover: (82 to: 93)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{63 to: 80}.! !
!Behavior method!
registerOnParents: aTransaction
	^ [
	(parentPortfolios
		cover: (37 to: 52)
		declaredAt: (37 to: 52)) do: [ :aParentPortfolio |
		[
		(aParentPortfolio
			cover: (79 to: 94)
			declaredAt: (60 to: 75)) register:
			(aTransaction
				cover: (106 to: 117)
				declaredAt: (20 to: 31)) ] valueCoveringAll:
			{96 to: 104} ]] valueCoveringAll:
		{54 to: 56}.! !
!Behavior method!
register: aTransaction
	[
	(self coverAll:
		{25 to: 28}) assertPortfolioIncludesTransactionAccountDirectly:
		(aTransaction
			cover: (81 to: 92)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{30 to: 79}.
	[
	(self coverAll:
		{97 to: 100}) assertTransactionNotRegistered:
		(aTransaction
			cover: (134 to: 145)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{102 to: 132}.
	[
	(transactions
		cover: (149 to: 160)
		declaredAt: (149 to: 160)) add:
		(aTransaction
			cover: (167 to: 178)
			declaredAt: (11 to: 22)) ] valueCoveringAll:
		{162 to: 165}.! !
!Behavior method!
assertPortfolioIncludesTransactionAccountDirectly: aTransaction
	[
	([
	(childElements
		cover: (67 to: 79)
		declaredAt: (67 to: 79)) includes:
		([
		(aTransaction
			cover: (92 to: 103)
			declaredAt: (52 to: 63)) account ] valueCoveringAll:
			{105 to: 111}) ] valueCoveringAll:
		{81 to: 89}) ifFalse: [ ^ [
		(self coverAll:
			{128 to: 131}) error:
			([
			([
			(self coverAll:
				{140 to: 143}) class ] valueCoveringAll:
				{145 to: 149}) errorTransactionCantBeAddedMessage ] valueCoveringAll:
				{151 to: 184}) ] valueCoveringAll:
			{133 to: 138} ]] valueCoveringAll:
		{117 to: 124}.! !
!Behavior method!
account
	^ account
		cover: (13 to: 19)
		declaredAt: (13 to: 19).! !
!Behavior method!
assertTransactionNotRegistered: aTransaction
	[
	([
	(transactions
		cover: (48 to: 59)
		declaredAt: (48 to: 59)) includes:
		(aTransaction
			cover: (71 to: 82)
			declaredAt: (33 to: 44)) ] valueCoveringAll:
		{61 to: 69}) ifTrue: [ ^ [
		(self coverAll:
			{97 to: 100}) error:
			([
			([
			(self coverAll:
				{109 to: 112}) class ] valueCoveringAll:
				{114 to: 118}) errorTransactionCantBeAddedMessage ] valueCoveringAll:
				{120 to: 153}) ] valueCoveringAll:
			{102 to: 107} ]] valueCoveringAll:
		{87 to: 93}.! !
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) +
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #PortfolioTest #test04PortfolioShouldBeAbleToAddAnAccountWithANonZeroBalance stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioShouldRecognizeTransactionInAnAlreadyExistingAccount stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioBalanceShouldBeTheSumOfItsAccountsBalances stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioShouldKnowItsAccounts stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioShouldKnowOnlyItsAccounts stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	([
	(self coverAll:
		{31 to: 34}) transactions ] valueCoveringAll:
		{36 to: 47}) includes:
		(aTransaction
			cover: (59 to: 70)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{49 to: 57}.! !
!Behavior method!
transactions
	^ [
	(self coverAll:
		{16 to: 19}) optimizedTransactions ] valueCoveringAll:
		{21 to: 41}.! !
!Behavior method!
optimizedTransactions
	| totalTransactions |
	(totalTransactions _ [
	(transactions
		cover: (68 to: 79)
		declaredAt: (68 to: 79)) copy ] valueCoveringAll:
		{81 to: 84})
		cover: (47 to: 63)
		declaredAt: (26 to: 42).
	[
	(childElements
		cover: (88 to: 100)
		declaredAt: (88 to: 100)) do: [ :aPortfolioEntry |
		[
		(totalTransactions
			cover: (126 to: 142)
			declaredAt: (26 to: 42)) addAll:
			([
			(aPortfolioEntry
				cover: (152 to: 166)
				declaredAt: (108 to: 122)) optimizedTransactions ] valueCoveringAll:
				{168 to: 188}) ] valueCoveringAll:
			{144 to: 150} ]] valueCoveringAll:
		{102 to: 104}.
	^ totalTransactions
		cover: (194 to: 210)
		declaredAt: (26 to: 42).! !
!Behavior method!
optimizedTransactions
	^ [
	(OrderedCollection
		cover: (26 to: 42)
		declaredAt: (26 to: 42)) new ] valueCoveringAll:
		{44 to: 46}.! !

!testRun: #PortfolioTest #test09PortfolioShouldRecognizeATransactionInOneOfItsAccounts stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioShouldKnowOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test11PortfolioShouldKnowItsAccountsTransactions stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioShouldIncludeTheTransactionOfItsOnlyAccount stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioShouldIncludeOnlyItsAccountsTransactions stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioShouldIncludeItsAccountsTransactions stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
beAddedTo: aPortfolio
	[
	(aPortfolio
		cover: (24 to: 33)
		declaredAt: (12 to: 21)) safetlyAdd:
		(self coverAll:
			{47 to: 50}) ] valueCoveringAll:
		{35 to: 45}.
	[
	(parentPortfolios
		cover: (54 to: 69)
		declaredAt: (54 to: 69)) add:
		(aPortfolio
			cover: (76 to: 85)
			declaredAt: (12 to: 21)) ] valueCoveringAll:
		{71 to: 74}.! !
!Behavior method!
totalPortfolios
	^ [
	(1 coverAll:
		{19 to: 19}) +
		([
		(self coverAll:
			{23 to: 26}) totalChildPortfolios ] valueCoveringAll:
			{28 to: 47}) ] valueCoveringAll:
		{21 to: 21}.! !

!testRun: #PortfolioTest #test15PortfolioShouldBeAbleToAddAChildPortfolio stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test16PortfolioCantAddSameChildPorfolioMoreThanOnce stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test17PortfolioShouldBeAbleToAddMultipleChildPortfolios stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test18PortfolioBalanceShouldConsiderItsChildPortfoliosBalances stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
errorInvalidTypeMessage
	^ 'Error invalid type.' coverAll:
		{27 to: 47}.! !

!testRun: #PortfolioTest #test19PortfolioAccountsShouldBeOfTypeAccount stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test20ChildPortfoliosShouldBeOfTypePortfolio stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test21PortfolioShouldKnowItsChildPortfoliosAccounts stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test22PortfolioShouldIncludeItsChildPorfoliosAccountsTransactions stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test23PortfolioCannotAddItself stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
searchInParents: aPortfolioEntry withoutSubtree: anExceptuatedEntry
	^ [
	([
	(self coverAll:
		{74 to: 77})
		includes:
			(aPortfolioEntry
				cover: (89 to: 103)
				declaredAt: (18 to: 32))
		exceptuating:
			(anExceptuatedEntry
				cover: (119 to: 136)
				declaredAt: (50 to: 67)) ] valueCoveringAll:
		{79 to: 87. 105 to: 117}) or: [
		[
		(self coverAll:
			{144 to: 147}) existsInParents:
			(aPortfolioEntry
				cover: (166 to: 180)
				declaredAt: (18 to: 32)) ] valueCoveringAll:
			{149 to: 164} ]] valueCoveringAll:
		{139 to: 141}.! !
!Behavior method!
includes: aPortfolioEntry exceptuating: anExceptuatedEntry
	| portfolioEntries |
	(portfolioEntries _ [
	(childElements
		cover: (101 to: 113)
		declaredAt: (101 to: 113)) copy ] valueCoveringAll:
		{115 to: 118})
		cover: (81 to: 96)
		declaredAt: (62 to: 77).
	[
	(portfolioEntries
		cover: (122 to: 137)
		declaredAt: (62 to: 77))
		remove:
			(anExceptuatedEntry
				cover: (147 to: 164)
				declaredAt: (41 to: 58))
		ifAbsent: [ ]] valueCoveringAll:
		{139 to: 145. 166 to: 174}.
	^ [
	([
	(self coverAll:
		{185 to: 188}) =
		(aPortfolioEntry
			cover: (192 to: 206)
			declaredAt: (11 to: 25)) ] valueCoveringAll:
		{190 to: 190}) or: [
		[
		(self coverAll:
			{214 to: 217})
			exists:
				(aPortfolioEntry
					cover: (227 to: 241)
					declaredAt: (11 to: 25))
			in:
				(portfolioEntries
					cover: (247 to: 262)
					declaredAt: (62 to: 77)) ] valueCoveringAll:
			{219 to: 225. 243 to: 245} ]] valueCoveringAll:
		{209 to: 211}.! !

!testRun: #PortfolioTest #test24PortfolioCannotAddAnAccountAlreadyAddedToItsFather stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test25PortfolioShouldKnowItsOnlyPortfolio stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test26PortfolioShouldKnowItsPortfolios stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test27PortfolioCannotAddAPortfolioKnownByItsFather stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test28PortfolioCannotAddAnAccountAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test29PortfolioCannotAddAPortfolioAlreadyKnownByItsAncestors stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test30PortfolioCanBeAddedToMultiplePortfolios stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
errorTransactionCantBeAddedMessage
	^ 'error' coverAll:
		{38 to: 44}.! !

!testRun: #PortfolioTest #test31PortfolioCannotRegisterSameTransactionMoreThanOnce stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test32PortfolioCannotRegisterTransactionOfExternalAccount stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #PortfolioTest #test33PortfolioShouldKnowItsGrandchildPortfolios stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
addTo: aBalanceValue
	^ [
	(aBalanceValue
		cover: (24 to: 36)
		declaredAt: (8 to: 20)) -
		(value
			cover: (40 to: 44)
			declaredAt: (40 to: 44)) ] valueCoveringAll:
		{38 to: 38}.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
value
	^ value
		cover: (11 to: 15)
		declaredAt: (11 to: 15).! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!
!Behavior method!
invalidTypeMessage
	^ 'Invalid type' coverAll:
		{23 to: 36}.! !

!testRun: #ReceptiveAccountTest #test08AccountTransactionValueShouldBeNumeric stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test09AccountTransactionShouldBeRegisteredToAReceptiveAccount stamp: 'Lb 5/25/2021 20:53:52'!
PASSED!