

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (16 June 2021 17:58:11) as C:\Users\Lukee\Desktop\Facultad\Ingenier√≠a 1\CuisUniversity\TPs\windows64\CuisUniversity-4532.image!


----End fileIn of D:\Downloads\TusLibros.st----!

TestCase subclass: #MerchantProcessorInnerInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterfaceTest category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 18:03:39'!
TestCase subclass: #MerchantProcessorInnerInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterfaceTest methodsFor: 'no messages' stamp: 'lmalvarez 6/16/2021 18:04:47'!
test01

	| creditCard |
	! !

!classDefinition: #MerchantProcessorInnerInterfaceTest category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 18:09:34'!
TestCase subclass: #MerchantProcessorInnerInterfaceTest
	instanceVariableNames: 'builder'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 18:09:42'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:09:29'!
test01CheckIfCreditCardWasStolen

	| creditCard |
	
	creditCard := builder validCreditCard.
	
	self assert: MerchantProcessorInnerInterface new checkIfStolen: creditCard.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:10:00' prior: 50859996!
test01CheckIfCreditCardWasStolen

	| creditCard |
	
	creditCard := builder validCreditCard.
	
	self assert: (MerchantProcessorInnerInterface new checkIfStolen: creditCard).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:10:06'!
ERROR!

MisLibrosStoreTest subclass: #MerchantProcessorInnerInterfaceTest
	instanceVariableNames: 'builder'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

MisLibrosStoreTest subclass: #MerchantProcessorInnerInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterfaceTest category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 18:10:47'!
MisLibrosStoreTest subclass: #MerchantProcessorInnerInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:10:54'!
ERROR!

!methodRemoval: MerchantProcessorInnerInterfaceTest #test01 stamp: 'lmalvarez 6/16/2021 18:11:00'!
test01

	| creditCard |
	!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:11:10'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:11:10'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:11:14'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:11:27'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:11:27'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:11:35'!
checkIfStolen: aCreditCard 
	self shouldBeImplemented.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:11:43' prior: 50860066!
checkIfStolen: aCreditCard 
	
	^ true! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:11:44'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:11:47'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:11:47'!
PASSED!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:18:42'!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface outerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.	
	
	innerInterface := MerchantProcessorInnerInterface new.
	
	outerInterface := Dictionary new.
	outerInterface at: creditCardA put: false.
	outerInterface at: creditCardB put: true.
	
	self deny: ( innerInterface checkIfStolen: creditCardA).
	self assert: ( innerInterface checkIfStolen: creditCardB).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:18:44'!
FAILURE!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:18:44'!
FAILURE!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:18:50'!
FAILURE!

Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'outerinterface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 18:19:36'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'outerinterface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:20:28'!
initializeWith: anOuterInterface

	outerinterface := anOuterInterface .! !
!MerchantProcessorInnerInterface class methodsFor: 'no messages' stamp: 'lmalvarez 6/16/2021 18:21:06'!
communicatingWith: anOuterInterface

	^ self new initializeWith: anOuterInterface .! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:21:31' prior: 50860072!
checkIfStolen: aCreditCard 
	
	^ outerinterface checkIfStolen: aCreditCard.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:21:50' prior: 50860150!
checkIfStolen: aCreditCard 
	
	^ outerinterface at: aCreditCard .! !

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:21:53'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:21:53'!
ERROR!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:22:50' prior: 50860089!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface outerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.	
	
	innerInterface := MerchantProcessorInnerInterface new.
	
	outerInterface := Dictionary new.
	outerInterface at: creditCardA put: false.
	outerInterface at: creditCardB put: true.
	
	self deny: ( innerInterface checkIfStolen: creditCardA).
	self assert: ( innerInterface checkIfStolen: creditCardB).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:22:53'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:22:53'!
ERROR!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:25:13' prior: 50860173!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface outerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.	
	
	innerInterface := MerchantProcessorInnerInterface new.
	
	outerInterface := OrderedCollection new.
	outerInterface add: creditCardB.
	
	self deny: ( innerInterface checkIfStolen: creditCardA).
	self assert: ( innerInterface checkIfStolen: creditCardB).! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:25:21' prior: 50860157!
checkIfStolen: aCreditCard 
	
	^ outerinterface includes: aCreditCard .! !

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:25:23'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:25:23'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:25:54' prior: 50860222!
checkIfStolen: aCreditCard 
	
	^ outerinterface includes: aCreditCard.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:27:18' prior: 50860203!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface outerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.	
	
	outerInterface := OrderedCollection new.
	outerInterface add: creditCardB.
	
	innerInterface := MerchantProcessorInnerInterface communicatingWith: outerInterface.
	
	self deny: ( innerInterface checkIfStolen: creditCardA).
	self assert: ( innerInterface checkIfStolen: creditCardB).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:27:19'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:27:19'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:27:19'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:27:19'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:27:23'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:27:24'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:27:29'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:27:29'!
ERROR!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:28:26' prior: 50860006!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicatingWith: OrderedCollection new.
	
	self assert: ( innerInterface checkIfStolen: creditCard ).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:28:29'!
FAILURE!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:28:29'!
FAILURE!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:29:00' prior: 50860300!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicatingWith: (OrderedCollection with: creditCard).
	
	self assert: ( innerInterface checkIfStolen: creditCard ).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:29:03'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:29:04'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 18:29:04'!
PASSED!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:30:15'!
test01StolenCreditCardShouldBeNotified

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicatingWith: (OrderedCollection with: creditCard).
	
	self assert: ( innerInterface checkIfStolen: creditCard ).! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:30:23'!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicatingWith: (OrderedCollection with: creditCard).
	
	self assert: ( innerInterface checkIfStolen: creditCard ).!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 18:32:27'!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicatingWith: (OrderedCollection with: creditCard).
	
	self assert: ( innerInterface checkIfStolen: creditCard ).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01StolenCreditCardShouldBeNotified stamp: 'lmalvarez 6/16/2021 18:32:30'!
PASSED!

!methodRemoval: MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 18:32:32'!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicatingWith: (OrderedCollection with: creditCard).
	
	self assert: ( innerInterface checkIfStolen: creditCard ).!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 19:21:47'!
test03CheckIfCreditCardIsFalse

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicatingWith: (OrderedCollection with: creditCard).
	
	self assert: ( innerInterface checkIfFalse: creditCard ).! !

----STARTUP---- (16 June 2021 19:22:06) as C:\Users\Lukee\Desktop\Facultad\Ingenier√≠a 1\CuisUniversity\TPs\windows64\CuisUniversity-4532.image!


----End fileIn of D:\Downloads\TusLibros.st----!

MisLibrosStoreTest subclass: #MerchantProcessorInnerInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterfaceTest category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 19:23:05'!
MisLibrosStoreTest subclass: #MerchantProcessorInnerInterfaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 19:24:22'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterfaceTest methodsFor: 'no messages' stamp: 'lmalvarez 6/16/2021 19:24:32'!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	
	self assert: (innerInterface checkIfStolen: creditCard).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:25:01'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:25:01'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'no messages' stamp: 'lmalvarez 6/16/2021 19:25:17'!
checkIfStolen: aCreditCard

	^ true.! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:25:22'!
PASSED!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 19:26:45'!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.
	
	innerInterface := MerchantProcessorInnerInterface communicatingWith: (OrderedCollection with: creditCardB).
	
	self deny: (innerInterface checkIfStolen: creditCardA).
	self assert: (innerInterface checkIfStolen: creditCardB).! !

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 19:27:20'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'outerInterface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterface methodsFor: 'initialization' stamp: 'lmalvarez 6/16/2021 19:27:19'!
initializeWith: anOuterInterface

	outerInterface := anOuterInterface.! !
!MerchantProcessorInnerInterface class methodsFor: 'instance creation' stamp: 'lmalvarez 6/16/2021 19:28:05'!
communicateWith: anOuterInterface

	^ self new initializeWith: anOuterInterface.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 19:28:22' prior: 50861083!
checkIfStolen: aCreditCard

	^ outerInterface includes: aCreditCard.! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:28:25'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 19:28:25'!
ERROR!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 19:28:43' prior: 50861092!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.
	
	innerInterface := MerchantProcessorInnerInterface communicateWith: (OrderedCollection with: creditCardB).
	
	self deny: (innerInterface checkIfStolen: creditCardA).
	self assert: (innerInterface checkIfStolen: creditCardB).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 19:28:44'!
PASSED!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 19:28:55' prior: 50861064!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicateWith: OrderedCollection new.
	
	self assert: (innerInterface checkIfStolen: creditCard).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:28:57'!
FAILURE!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:28:57'!
FAILURE!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:29:08'!
FAILURE!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 19:29:08'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:29:08'!
FAILURE!
!MerchantProcessorInnerInterfaceTest methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 19:29:29' prior: 50861167!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicateWith: (OrderedCollection with: creditCard ).
	
	self assert: (innerInterface checkIfStolen: creditCard).! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 19:29:30'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 19:29:30'!
PASSED!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 19:30:28'!
test03CheckIfCreditCardIsFalse

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface communicateWith: (OrderedCollection with: creditCard ).
	
	self assert: (innerInterface checkIfFalse: creditCard).! !

----SNAPSHOT----(16 June 2021 19:30:35) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (16 June 2021 19:31:19) as C:\Users\Lukee\Desktop\Facultad\Ingenier√≠a 1\CuisUniversity\TPs\TryingShit\CuisUniversity-4532.image!

!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:32:56' prior: 50861201!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	
	self assert: (innerInterface checkIfStolen: creditCard).! !

!methodRemoval: MerchantProcessorInnerInterface class #communicateWith: stamp: 'lmalvarez 6/16/2021 20:33:08'!
communicateWith: anOuterInterface

	^ self new initializeWith: anOuterInterface.!

!methodRemoval: MerchantProcessorInnerInterface #initializeWith: stamp: 'lmalvarez 6/16/2021 20:33:13'!
initializeWith: anOuterInterface

	outerInterface := anOuterInterface.!

Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 20:33:16'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!methodRemoval: MerchantProcessorInnerInterface #checkIfStolen: stamp: 'lmalvarez 6/16/2021 20:33:23'!
checkIfStolen: aCreditCard

	^ outerInterface includes: aCreditCard.!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:34:18' prior: 50861242!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	
	self assert: (innerInterface validatePurcharseFor: 500 payingWith: creditCard).! !

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 20:35:13'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'stolenRejection'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:35:12'!
rejectAllCreditCardsForBeingStolen

	stolenRejection := true.! !

Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'stolenRejection validate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 20:36:23'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'stolenRejection validate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterface methodsFor: 'initialization' stamp: 'lmalvarez 6/16/2021 20:36:47' overrides: 16896425!
initialize

	stolenRejection := false.
	validate := true.! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 20:37:01'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 20:37:01'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:37:09'!
validatePurcharseFor: aSmallInteger payingWith: aCreditCard 
	self shouldBeImplemented.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:38:17' prior: 50861342!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard 
	
	stolenRejection ifTrue: [self error: self stolenCreditCardSignalError. ].! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 20:38:20'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:38:24'!
stolenCreditCardSignalError
	self shouldBeImplemented.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:38:46' prior: 50861361!
stolenCreditCardSignalError
	
	^ ' Error - Stolen Credit Card ' ! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 20:38:47'!
ERROR!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:39:45' prior: 50861285!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 20:39:47'!
PASSED!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:40:34' prior: 50861145!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.
	
	innerInterface := MerchantProcessorInnerInterface new.
	
	
	
	self deny: (innerInterface checkIfStolen: creditCardA).
	self assert: (innerInterface checkIfStolen: creditCardB).! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:41:08' prior: 50861397!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.
	
	innerInterface := MerchantProcessorInnerInterface new.
	
	
	
	self deny: (innerInterface checkIfStolen: creditCardA).
	
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCardB]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:41:27' prior: 50861412!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.
	
	innerInterface := MerchantProcessorInnerInterface new.
	
	self deny: (innerInterface checkIfStolen: creditCardA).

	innerInterface rejectAllCreditCardsForBeingStolen.
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCardB]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test02DifferenciateBetweenStolenAndNotStolenCreditCards stamp: 'lmalvarez 6/16/2021 20:43:05'!
test02DifferenciateBetweenStolenAndNotStolenCreditCards

	| creditCardA creditCardB innerInterface |
	
	creditCardA := builder validCreditCard.
	creditCardB := builder validCreditCard.
	
	innerInterface := MerchantProcessorInnerInterface new.
	
	self deny: (innerInterface checkIfStolen: creditCardA).

	innerInterface rejectAllCreditCardsForBeingStolen.
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCardB]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:44:30' prior: 50861222!
test03CheckIfCreditCardIsFalse

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForFalsification.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.! !

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:44:35'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:44:40'!
rejectAllCreditCardsForFalsification
	self shouldBeImplemented.! !

Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'stolenRejection falsification validate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 20:45:21'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'stolenRejection falsification validate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:45:42'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:45:42'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:45:47'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:45:47'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:46:15' prior: 50861307!
rejectAllCreditCardsForBeingStolen

	falsification := false.
	stolenRejection := true.! !
!MerchantProcessorInnerInterface methodsFor: 'initialization' stamp: 'lmalvarez 6/16/2021 20:46:23' prior: 50861328 overrides: 16896425!
initialize

	falsification := false.
	stolenRejection := false.
	validate := true.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:46:48' prior: 50861492!
rejectAllCreditCardsForFalsification
	
	stolenRejection := false.
	falsification := true.! !

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 20:46:57'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'stolen falsification validate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:46:57' prior: 50861349!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard 
	
	stolen ifTrue: [self error: self stolenCreditCardSignalError. ].! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:46:57' prior: 50861544!
rejectAllCreditCardsForFalsification
	
	stolen := false.
	falsification := true.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:46:57' prior: 50861537 overrides: 16896425!
initialize

	falsification := false.
	stolen := false.
	validate := true.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:46:57' prior: 50861529!
rejectAllCreditCardsForBeingStolen

	falsification := false.
	stolen := true.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:47:10'!
test02CheckIfCreditCardIsFalse

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForFalsification.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:47:10'!
test03CheckIfCreditCardIsFalse

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForFalsification.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:47:16'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:47:20'!
falseCreditCardSignalError
	self shouldBeImplemented.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:47:32' prior: 50861624!
falseCreditCardSignalError
	
	^ ' Error - False Credit Card '! !

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:47:33'!
FAILURE!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:47:45'!
FAILURE!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:47:45'!
FAILURE!

Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'stolen falsification '
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 20:48:48'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'stolen falsification'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterface methodsFor: 'initialization' stamp: 'lmalvarez 6/16/2021 20:48:57' prior: 50861576 overrides: 16896425!
initialize

	falsification := false.
	stolen := false.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:49:25' prior: 50861560!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard 
	
	stolen ifTrue: [self error: self stolenCreditCardSignalError. ].
	falsification ifTrue: [self error: self falseCreditCardSignalError . ].! !

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:49:27'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 20:49:29'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:49:29'!
PASSED!

Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'errorDescriptor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 20:55:16'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'errorDescriptor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'error'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 20:55:23'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'error'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterface methodsFor: 'initialization' stamp: 'lmalvarez 6/16/2021 20:57:17' prior: 50861663 overrides: 16896425!
initialize
! !

!methodRemoval: MerchantProcessorInnerInterface #initialize stamp: 'lmalvarez 6/16/2021 20:57:21'!
initialize
!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:57:48' prior: 50861583!
rejectAllCreditCardsForBeingStolen

	error := self stolenCreditCardSignalError.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:58:02' prior: 50861568!
rejectAllCreditCardsForFalsification
	
	error := self falseCreditCardSignalError.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 20:58:23' prior: 50861669!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard 
	
	self error: error. ! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 20:58:32'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 20:58:32'!
PASSED!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:58:38' prior: 50861377!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 20:59:37'!
test03CheckIfCreditCardHasSufficientAmountToPay

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotHavingEnoghMoney.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:00:09'!
test03CheckIfCreditCardHasSufficientCreditToPay

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientAmountToPay stamp: 'lmalvarez 6/16/2021 21:00:11'!
test03CheckIfCreditCardHasSufficientAmountToPay

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotHavingEnoghMoney.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:00:40' prior: 50861787!
test03CheckIfCreditCardHasSufficientCreditToPay

	| creditCard innerInterface |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.! !

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:00:44'!
ERROR!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:00:44'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:00:48'!
rejectAllCreditCardsForNotSufficientCredit
	self shouldBeImplemented.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:01:06' prior: 50861845!
rejectAllCreditCardsForNotSufficientCredit
	error := self creditNotSufficientSignalError.! !

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:01:08'!
ERROR!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:01:11'!
creditNotSufficientSignalError
	self shouldBeImplemented.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:01:29' prior: 50861863!
creditNotSufficientSignalError
	
	^ ' Error - Not Enogh Credit '! !

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:01:31'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:01:34'!
PASSED!

Object subclass: #Cashier
	instanceVariableNames: 'innerInterface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 21:03:44'!
Object subclass: #Cashier
	instanceVariableNames: 'innerInterface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'error messages' stamp: 'lmalvarez 6/16/2021 21:04:00' overrides: 16896425!
initialize

	innerInterface := MerchantProcessorInnerInterface new.! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test09CartShouldBeAbleToTellTheTotalValueOfProductsInsideIt stamp: 'lmalvarez 6/16/2021 21:04:16'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CartTest #test09CartShouldBeAbleToTellTheTotalValueOfProductsInsideIt stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:04:18'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'lmalvarez 6/16/2021 21:04:56' prior: 50860802!
checkout: aCart charging: aCreditCard on: aMonthOfYear registeringOn: aSalesBook

	self assertThatCartIsEmpty: aCart.
	self assertThat: aCreditCard isExpiredOn: aMonthOfYear.

	innerInterface validatePurcharseFor: aCart total payingWith: aCreditCard.

	aSalesBook add: aCart total.
		
	^ aCart total.
	! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:05:08'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:05:08'!
ERROR!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:05:08'!
ERROR!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:05:08'!
PASSED!
!Cashier methodsFor: 'initialization' stamp: 'lmalvarez 6/16/2021 21:06:36'!
initializeWith: anInnerInterface

	innerInterface := anInnerInterface.! !

!methodRemoval: Cashier #initialize stamp: 'lmalvarez 6/16/2021 21:06:38'!
initialize

	innerInterface := MerchantProcessorInnerInterface new.!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:08:40' prior: 50861727!
rejectAllCreditCardsForBeingStolen

	error := [self error: self falseCreditCardSignalError ]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:08:58' prior: 50862038!
rejectAllCreditCardsForBeingStolen

	error := [self error: self stolenCreditCardSignalError ]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:09:07' prior: 50861734!
rejectAllCreditCardsForFalsification
	
	error := [self error: self falseCreditCardSignalError ].! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:09:23' prior: 50861852!
rejectAllCreditCardsForNotSufficientCredit

	error := [self error: self creditNotSufficientSignalError.].! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:10:10' overrides: 16896425!
initialize

	error := [ ].! !
!Cashier class methodsFor: 'no messages' stamp: 'lmalvarez 6/16/2021 21:13:44'!
with: anInnerInterface

	^ self new initializeWith: anInnerInterface .! !
!CashierTest methodsFor: 'test' stamp: 'lmalvarez 6/16/2021 21:14:07' prior: 50860560!
test01CannotCheckoutAnEmptyCart

	| cashier salesBook |
	
	cashier := Cashier with: MerchantProcessorInnerInterface new.
	salesBook := OrderedCollection new.
	
	self should: [ cashier checkout: builder emptyCart 
					charging: builder validCreditCard 
					on: builder today 
					registeringOn: salesBook ]
		raise: Error
		withExceptionDo: [ :anError | 
				self assert: anError messageText equals: cashier cannotCheckoutAnEmptyCartSignalError.
				self assert: salesBook isEmpty. ].
	! !
!CashierTest methodsFor: 'test' stamp: 'lmalvarez 6/16/2021 21:14:11' prior: 50860577!
test02CheckoutACartWithOnlyOneItem

	| cashier salesBook total |
	
	cashier := Cashier with: MerchantProcessorInnerInterface new.
	salesBook := OrderedCollection new.
	
	total := cashier checkout: builder oneProductCart 
				charging: builder validCreditCard 
				on: builder today
				registeringOn: salesBook.
	
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: total.! !
!CashierTest methodsFor: 'test' stamp: 'lmalvarez 6/16/2021 21:14:16' prior: 50860591!
test03CheckoutACartWithManyItems

	| cashier salesBook total |
	
	cashier := Cashier with: MerchantProcessorInnerInterface new.
	salesBook := OrderedCollection new.
	
	total := cashier checkout: builder twoProductCart 
				charging: builder validCreditCard 
				on: builder today 
				registeringOn: salesBook.
	
	self assert: salesBook size equals: 1.
	self assert: salesBook first equals: total.! !
!CashierTest methodsFor: 'test' stamp: 'lmalvarez 6/16/2021 21:14:19' prior: 50860605!
test04CashierShouldNotCheckOutAnExpiredCreditCard

	| cashier salesBook |
	
	cashier := Cashier with: MerchantProcessorInnerInterface new.
	salesBook := OrderedCollection new.
	
	self should: [ cashier checkout: builder oneProductCart 
					charging: builder expiredCreditCard 
					on: builder today
					registeringOn: salesBook. ]	
		raise: Error
		withExceptionDo: [ :anError | 
				self assert: anError messageText equals: cashier expiredCreditCardSignalError.
				self assert: salesBook isEmpty. ].
		
		! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:15:28'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:15:28'!
ERROR!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:15:28'!
ERROR!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:15:28'!
PASSED!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:15:51' prior: 50861741!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard 
	
	error value.! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:15:57'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:15:57'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:15:57'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:15:57'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CartTest #test09CartShouldBeAbleToTellTheTotalValueOfProductsInsideIt stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:15:59'!
PASSED!

!classDefinition: #MerchantProcessorInnerInterface category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 21:16:39'!
Object subclass: #MerchantProcessorInnerInterface
	instanceVariableNames: 'behaviour'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:16:39' prior: 50862059!
rejectAllCreditCardsForNotSufficientCredit

	behaviour := [self error: self creditNotSufficientSignalError.].! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:16:39' prior: 50862067 overrides: 16896425!
initialize

	behaviour := [ ].! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:16:39' prior: 50862045!
rejectAllCreditCardsForBeingStolen

	behaviour := [self error: self stolenCreditCardSignalError ]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:16:39' prior: 50862162!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard 
	
	behaviour value.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:16:39' prior: 50862052!
rejectAllCreditCardsForFalsification
	
	behaviour := [self error: self falseCreditCardSignalError ].! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:18:34' prior: 50862273!
rejectAllCreditCardsForBeingStolen

	behaviour := [:aCashier | aCashier executeStolenCreditCardSignalError ]! !
!Cashier methodsFor: 'checkout' stamp: 'lmalvarez 6/16/2021 21:19:03'!
executeStolenCreditCardSignalError

	self error: self stolenCreditCardSignalError.! !
!Cashier methodsFor: 'error signals' stamp: 'lmalvarez 6/16/2021 21:19:47'!
stolenCreditCardSignalError

	^ ' Error - Stolen Credit Card ' ! !
!Cashier methodsFor: 'error signals' stamp: 'lmalvarez 6/16/2021 21:20:43'!
creditNotSufficientSignalError
	
	^ ' Error - Not Enogh Credit '! !
!Cashier methodsFor: 'error signals' stamp: 'lmalvarez 6/16/2021 21:21:04'!
falseCreditCardSignalError
	
	^ ' Error - False Credit Card '! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:21:19' prior: 50862287!
rejectAllCreditCardsForFalsification
	
	behaviour := [:aCashier | aCashier executeFalseCreditCardSignalError ]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:23:09' prior: 50862260!
rejectAllCreditCardsForNotSufficientCredit

	behaviour := [:aCashier | aCashier executeCreditNotSufficientCreditCardSignalError ]! !
!Cashier methodsFor: 'error signals' stamp: 'lmalvarez 6/16/2021 21:23:26'!
executeCreditNotSufficientCreditCardSignalError

	self error: self creditNotSufficientSignalError .! !
!Cashier methodsFor: 'error signals' stamp: 'lmalvarez 6/16/2021 21:23:44'!
executeFalseCreditCardSignalError

	self error: self falseCreditCardSignalError.! !
!Cashier methodsFor: 'error signals' stamp: 'lmalvarez 6/16/2021 21:24:41'!
executeError: anError

	self error: anError.! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:25:23' prior: 50862323!
rejectAllCreditCardsForFalsification
	
	behaviour := [:aCashier | aCashier executeError: aCashier falseCreditCardSignalError]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:28:17' prior: 50862355!
rejectAllCreditCardsForFalsification
	
	behaviour := [:aCashier | aCashier executeError: self falseCreditCardSignalError]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:28:39' prior: 50862331!
rejectAllCreditCardsForNotSufficientCredit

	behaviour := [:aCashier | aCashier executeError: self creditNotSufficientSignalError ]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:28:51' prior: 50862295!
rejectAllCreditCardsForBeingStolen

	behaviour := [:aCashier | aCashier executeError: self stolenCreditCardSignalError ]! !

!methodRemoval: Cashier #stolenCreditCardSignalError stamp: 'lmalvarez 6/16/2021 21:28:59'!
stolenCreditCardSignalError

	^ ' Error - Stolen Credit Card ' !

!methodRemoval: Cashier #falseCreditCardSignalError stamp: 'lmalvarez 6/16/2021 21:29:01'!
falseCreditCardSignalError
	
	^ ' Error - False Credit Card '!

!methodRemoval: Cashier #executeStolenCreditCardSignalError stamp: 'lmalvarez 6/16/2021 21:29:03'!
executeStolenCreditCardSignalError

	self error: self stolenCreditCardSignalError.!

!methodRemoval: Cashier #executeFalseCreditCardSignalError stamp: 'lmalvarez 6/16/2021 21:29:05'!
executeFalseCreditCardSignalError

	self error: self falseCreditCardSignalError.!

!methodRemoval: Cashier #executeCreditNotSufficientCreditCardSignalError stamp: 'lmalvarez 6/16/2021 21:29:06'!
executeCreditNotSufficientCreditCardSignalError

	self error: self creditNotSufficientSignalError .!

!methodRemoval: Cashier #creditNotSufficientSignalError stamp: 'lmalvarez 6/16/2021 21:29:08'!
creditNotSufficientSignalError
	
	^ ' Error - Not Enogh Credit '!
!Cashier methodsFor: 'error messages' stamp: 'lmalvarez 6/16/2021 21:29:57' prior: 50862349!
executeError: anInterfaceError

	self error: anInterfaceError.! !
!Cashier methodsFor: 'checkout' stamp: 'lmalvarez 6/16/2021 21:34:14'!
finishPurchaseOf: anAmount registeringOn: aSalesBook

	aSalesBook add: anAmount.
		
	^ anAmount total.
	! !
!Cashier methodsFor: 'checkout' stamp: 'lmalvarez 6/16/2021 21:34:36' prior: 50862425!
finishPurchaseOf: anAmount registeringOn: aSalesBook

	aSalesBook add: anAmount.
		
	^ anAmount .
	! !
!Cashier methodsFor: 'checkout' stamp: 'lmalvarez 6/16/2021 21:34:45' prior: 50862001!
checkout: aCart charging: aCreditCard on: aMonthOfYear registeringOn: aSalesBook

	self assertThatCartIsEmpty: aCart.
	self assertThat: aCreditCard isExpiredOn: aMonthOfYear.

	^ innerInterface validatePurcharseFor: aCart total payingWith: aCreditCard.

	! !
!MerchantProcessorInnerInterface methodsFor: 'initialization' stamp: 'lmalvarez 6/16/2021 21:37:09' prior: 50862268 overrides: 16896425!
initialize

	behaviour := [:aCashier :aPurchase | aCashier   ].! !
!MerchantProcessorInnerInterface methodsFor: 'initialization' stamp: 'lmalvarez 6/16/2021 21:37:47' prior: 50862451 overrides: 16896425!
initialize

	behaviour := [:aCashier :aPurchase :aSalesBook | aCashier finishPurchaseOf: aPurchase registeringOn: aSalesBook ].! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:40:26'!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard requestedBy: aCashier registeringOn: aSalesBook
	
	behaviour value: aCashier value: anAmountToPay value: aSalesBook .! !

!methodRemoval: MerchantProcessorInnerInterface #validatePurcharseFor:payingWith: stamp: 'lmalvarez 6/16/2021 21:42:55'!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard 
	
	behaviour value.!
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:43:57' prior: 50862380!
rejectAllCreditCardsForBeingStolen

	behaviour := [:aCashier :aPurchase :aSalesBook  | aCashier executeError: self stolenCreditCardSignalError ]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:44:02' prior: 50862363!
rejectAllCreditCardsForFalsification
	
	behaviour := [:aCashier :aPurchase :aSalesBook  | aCashier executeError: self falseCreditCardSignalError]! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:44:06' prior: 50862371!
rejectAllCreditCardsForNotSufficientCredit

	behaviour := [:aCashier :aPurchase :aSalesBook  | aCashier executeError: self creditNotSufficientSignalError ]! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:44:44' prior: 50861756!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:45:47' prior: 50862509!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook ]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:45:50' prior: 50862525!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [ innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook ]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:46:08' prior: 50861589!
test02CheckIfCreditCardIsFalse

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForFalsification.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:46:26' prior: 50861820!
test03CheckIfCreditCardHasSufficientCreditToPay

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:46:58' prior: 50862565!
test02CheckIfCreditCardIsFalse

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForFalsification.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:47:03' prior: 50862584!
test03CheckIfCreditCardHasSufficientCreditToPay

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.! !

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 21:47:08'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 21:47:08'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:47:08'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:47:20'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:47:20'!
ERROR!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:47:21'!
ERROR!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:47:21'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:47:30'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:47:30'!
ERROR!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:47:30'!
ERROR!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:47:30'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'lmalvarez 6/16/2021 21:48:32' prior: 50862438!
checkout: aCart charging: aCreditCard on: aMonthOfYear registeringOn: aSalesBook

	self assertThatCartIsEmpty: aCart.
	self assertThat: aCreditCard isExpiredOn: aMonthOfYear.

	^ innerInterface validatePurcharseFor: aCart total payingWith: aCreditCard requestedBy: self registeringOn: aSalesBook .

	! !
!MerchantProcessorInnerInterface methodsFor: 'as yet unclassified' stamp: 'lmalvarez 6/16/2021 21:48:44' prior: 50862466!
validatePurcharseFor: anAmountToPay payingWith: aCreditCard requestedBy: aCashier registeringOn: aSalesBook
	
	^ behaviour value: aCashier value: anAmountToPay value: aSalesBook .! !

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:48:58'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:48:58'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:48:58'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:48:58'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 21:48:59'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 21:48:59'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 21:48:59'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'lmalvarez 6/16/2021 21:49:00'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'lmalvarez 6/16/2021 21:49:00'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'lmalvarez 6/16/2021 21:49:00'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'lmalvarez 6/16/2021 21:49:00'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'lmalvarez 6/16/2021 21:49:00'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'lmalvarez 6/16/2021 21:49:00'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'lmalvarez 6/16/2021 21:49:00'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'lmalvarez 6/16/2021 21:49:00'!
PASSED!

!testRun: #CartTest #test09CartShouldBeAbleToTellTheTotalValueOfProductsInsideIt stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:49:01'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CartTest #test09CartShouldBeAbleToTellTheTotalValueOfProductsInsideIt stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:49:05'!
PASSED!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:53:22'!
test01StolenCreditCardShouldBeRejected

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [ innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook ]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test01CheckIfCreditCardWasStolen stamp: 'lmalvarez 6/16/2021 21:53:25'!
test01CheckIfCreditCardWasStolen

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [ innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook ]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:53:40'!
test02FalseCreditCardShouldBeRejected

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForFalsification.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test02CheckIfCreditCardIsFalse stamp: 'lmalvarez 6/16/2021 21:53:40'!
test02CheckIfCreditCardIsFalse

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForFalsification.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:54:29'!
test03CreditCardWithUnsifficientCreditShouldBeRejected

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test03CheckIfCreditCardHasSufficientCreditToPay stamp: 'lmalvarez 6/16/2021 21:54:29'!
test03CheckIfCreditCardHasSufficientCreditToPay

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:54:45'!
test03CreditCardWithInsifficientCreditShouldBeRejected

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test03CreditCardWithUnsifficientCreditShouldBeRejected stamp: 'lmalvarez 6/16/2021 21:54:45'!
test03CreditCardWithUnsifficientCreditShouldBeRejected

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:54:50'!
test03CreditCardWithInsufficientCreditShouldBeRejected

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.! !

!methodRemoval: MerchantProcessorInnerInterfaceTest #test03CreditCardWithInsifficientCreditShouldBeRejected stamp: 'lmalvarez 6/16/2021 21:54:50'!
test03CreditCardWithInsifficientCreditShouldBeRejected

	| creditCard innerInterface cashier salesBook |
	
	creditCard := builder validCreditCard.
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	cashier := Cashier with: innerInterface.
	salesBook := OrderedCollection new.
	
	self should: [innerInterface validatePurcharseFor: 500 payingWith: creditCard requestedBy: cashier registeringOn: salesBook]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.!
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:57:06' prior: 50863036!
test03CreditCardWithInsufficientCreditShouldBeRejected

	|  innerInterface |
	
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForNotSufficientCredit.
	
	self should: [ innerInterface validatePurcharseFor: 500
						    payingWith: builder validCreditCard 
						    requestedBy: (Cashier with: innerInterface)
						    registeringOn: OrderedCollection new ]
		raise: Error
		withMessageText: innerInterface creditNotSufficientSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:57:32' prior: 50862911!
test02FalseCreditCardShouldBeRejected

	|  innerInterface |
	
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForFalsification.
	
	self should: [innerInterface validatePurcharseFor: 500
						    payingWith: builder validCreditCard 
						    requestedBy: (Cashier with: innerInterface)
						    registeringOn: OrderedCollection new]
		raise: Error
		withMessageText: innerInterface falseCreditCardSignalError.! !
!MerchantProcessorInnerInterfaceTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 21:57:51' prior: 50862871!
test01StolenCreditCardShouldBeRejected

	| innerInterface |
	
	innerInterface := MerchantProcessorInnerInterface new.
	innerInterface rejectAllCreditCardsForBeingStolen.
	
	self should: [ innerInterface validatePurcharseFor: 500
						    payingWith: builder validCreditCard 
						    requestedBy: (Cashier with: innerInterface)
						    registeringOn: OrderedCollection new ]
		raise: Error
		withMessageText: innerInterface stolenCreditCardSignalError.! !

MisLibrosStoreTest subclass: #CreditCardTest
	instanceVariableNames: 'errorMessage builderMessage'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCardTest category: 'TusLibros' stamp: 'lmalvarez 6/16/2021 21:59:03'!
MisLibrosStoreTest subclass: #CreditCardTest
	instanceVariableNames: 'errorMessage builderMessage'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCardTest methodsFor: 'assertions' stamp: 'lmalvarez 6/16/2021 22:00:57'!
assertInvalidCreditCardField: aCreditCardField

	self should: [ (builderMessage asMessageWith: aCreditCardField) sendTo: builder ]
		raise: Error
		withMessageText: errorMessage.
! !
!CreditCardTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 22:02:27' prior: 50860634!
test01CreditCardMustHaveNumberWith16Digits

	builderMessage := #validCreditCardWithNumber:.
	errorMessage := CreditCard invalidCreditCardNumberSignalError.

	self assertInvalidCreditCardNumber:  '00001111222233334'.
	self assertInvalidCreditCardNumber:  '000011112222333'.
	self assertInvalidCreditCardNumber:  '000011112222333A'.
			
		! !
!CreditCardTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 22:02:48' prior: 50863156!
test01CreditCardMustHaveNumberWith16Digits

	builderMessage := #validCreditCardWithNumber:.
	errorMessage := CreditCard invalidCreditCardNumberSignalError.

	self assertInvalidCreditCardField:  '00001111222233334'.
	self assertInvalidCreditCardField:  '000011112222333'.
	self assertInvalidCreditCardField:  '000011112222333A'.
			
		! !
!CreditCardTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 22:04:01' prior: 50860644!
test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter

	builderMessage := #validCreditCardWithOwner:.
	errorMessage := CreditCard invalidOwnerNameSignalError.
	
	self assertInvalidCreditCardField: '  '.! !
!CreditCardTest methodsFor: 'tests' stamp: 'lmalvarez 6/16/2021 22:04:47' prior: 50860653!
test03CreditCardMustHaveSecurityNumberWith3Digits

	builderMessage := #validCreditCardWithSecurityNumber:.
	errorMessage := CreditCard invalidCreditCardSecurityNumberSignalError.

	self assertInvalidCreditCardField:  '1234'.
	self assertInvalidCreditCardField:  '12'.
	self assertInvalidCreditCardField:  '12A'.
			
		! !

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:04:51'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:04:51'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:04:51'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:04:53'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:04:53'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:04:53'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:04:56'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:04:56'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:04:56'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:04:56'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:04:56'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:04:56'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:04:57'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:04:57'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:04:57'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:04:58'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:04:58'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:04:59'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:04:59'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:04:59'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:05:00'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:05:05'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:05:05'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:05:05'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 22:05:12'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 22:05:12'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 22:05:12'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 22:05:12'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 22:05:12'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 22:05:12'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 22:05:12'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 22:05:12'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01StolenCreditCardShouldBeRejected stamp: 'lmalvarez 6/16/2021 22:05:13'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02FalseCreditCardShouldBeRejected stamp: 'lmalvarez 6/16/2021 22:05:13'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CreditCardWithInsufficientCreditShouldBeRejected stamp: 'lmalvarez 6/16/2021 22:05:13'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 22:05:45'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 22:05:45'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 22:05:45'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 22:05:45'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:05:46'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:05:46'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:05:46'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CartTest #test09CartShouldBeAbleToTellTheTotalValueOfProductsInsideIt stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CashierTest #test01CannotCheckoutAnEmptyCart stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CashierTest #test02CheckoutACartWithOnlyOneItem stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CashierTest #test03CheckoutACartWithManyItems stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CashierTest #test04CashierShouldNotCheckOutAnExpiredCreditCard stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CreditCardTest #test01CreditCardMustHaveNumberWith16Digits stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CreditCardTest #test02CreditCardMustHaveAnOwnerNameWithAtLeastOneLetter stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #CreditCardTest #test03CreditCardMustHaveSecurityNumberWith3Digits stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test01StolenCreditCardShouldBeRejected stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test02FalseCreditCardShouldBeRejected stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!testRun: #MerchantProcessorInnerInterfaceTest #test03CreditCardWithInsufficientCreditShouldBeRejected stamp: 'lmalvarez 6/16/2021 22:05:48'!
PASSED!

!methodRemoval: CreditCardTest #assertInvalidCreditCardNumber: stamp: 'lmalvarez 6/16/2021 22:06:04'!
assertInvalidCreditCardNumber: aCreditCardNumber

	self should: [ builder validCreditCardWithNumber: aCreditCardNumber ]
		raise: Error
		withMessageText: CreditCard  invalidCreditCardNumberSignalError.
!

!methodRemoval: CreditCardTest #assertInvalidSecurityNumber: stamp: 'lmalvarez 6/16/2021 22:06:06'!
assertInvalidSecurityNumber: aSecurityNumber

	self should: [ builder validCreditCardWithSecurityNumber: aSecurityNumber ]
		raise: Error
		withMessageText: CreditCard  invalidCreditCardSecurityNumberSignalError.
!

----SNAPSHOT----(16 June 2021 22:07:53) CuisUniversity-4532.image priorSource: 16946641!