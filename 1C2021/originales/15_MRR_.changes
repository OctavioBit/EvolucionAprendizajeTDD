

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (27 May 2021 16:10:25) as /home/duerunner/UBA/Inge1/linux64/CuisUniversity-4532.image!


----QUIT----(27 May 2021 19:07:29) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (28 May 2021 18:57:17) as /home/duerunner/UBA/Inge1/linux64/CuisUniversity-4532.image!


----End fileIn of /home/duerunner/UBA/Inge1/2021-1c/15-Stack/Stack-Solution-2.st----!

----STARTUP---- (29 May 2021 21:59:02) as /home/duerunner/UBA/Inge1/linux64/CuisUniversity-4532.image!


----End fileIn of /home/duerunner/Downloads/24-PortfolioTreePrinter_Portfolio-Ejercicio.st----!

----QUIT----(30 May 2021 15:41:00) CuisUniversity-4532.image priorSource: 16885894!

----STARTUP---- (31 May 2021 18:36:38) as /home/duerunner/UBA/Inge1/linux64/CuisUniversity-4532.image!


Date!

----QUIT----(1 June 2021 21:45:31) CuisUniversity-4532.image priorSource: 16953108!

----STARTUP---- (2 June 2021 17:09:31) as /home/duerunner/UBA/Inge1/linux64/CuisUniversity-4532.image!


----QUIT----(2 June 2021 17:09:39) CuisUniversity-4532.image priorSource: 16953305!

----STARTUP---- (3 June 2021 17:22:38) as /home/duerunner/UBA/Inge1/linux64/CuisUniversity-4532.image!


!classRemoval: #Transfer stamp: 'dd 6/3/2021 17:23:23'!
Object subclass: #Transfer
	instanceVariableNames: 'transferIn transferOut value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #TreePrinter stamp: 'dd 6/3/2021 17:23:24'!
Report subclass: #TreePrinter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #TreeAccountsSummariesPrinter stamp: 'dd 6/3/2021 17:23:25'!
Report subclass: #TreeAccountsSummariesPrinter
	instanceVariableNames: 'depth'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #TransferNet stamp: 'dd 6/3/2021 17:23:27'!
Report subclass: #TransferNet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountSummary stamp: 'dd 6/3/2021 17:23:27'!
Report subclass: #AccountSummary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Report stamp: 'dd 6/3/2021 17:23:28'!
Object subclass: #Report
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccount stamp: 'dd 6/3/2021 17:23:29'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Portfolio stamp: 'dd 6/3/2021 17:23:30'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'financialAssets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #FinancialAsset stamp: 'dd 6/3/2021 17:23:32'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents alias'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Withdraw stamp: 'dd 6/3/2021 17:23:33'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #TransferOut stamp: 'dd 6/3/2021 17:23:34'!
TransferLeg subclass: #TransferOut
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #TransferIn stamp: 'dd 6/3/2021 17:23:35'!
TransferLeg subclass: #TransferIn
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #TransferLeg stamp: 'dd 6/3/2021 17:23:36'!
AccountTransaction subclass: #TransferLeg
	instanceVariableNames: 'myTransfer'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #Deposit stamp: 'dd 6/3/2021 17:23:37'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #AccountTransaction stamp: 'dd 6/3/2021 17:23:38'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #TransferTest stamp: 'dd 6/3/2021 17:23:39'!
TestCase subclass: #TransferTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReportTest stamp: 'dd 6/3/2021 17:23:40'!
TestCase subclass: #ReportTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #ReceptiveAccountTest stamp: 'dd 6/3/2021 17:23:41'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classRemoval: #PortfolioTest stamp: 'dd 6/3/2021 17:23:42'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

----End fileIn of /home/duerunner/UBA/Inge1/inge1-1c-2021/18-Portfolio2/Portfolio-Solucion.st----!

----End fileIn of /home/duerunner/UBA/Inge1/2021-1c/19-MarsRover-El regreso/MarsRover-WithHeading.st----!

TestCase subclass: #VentanaTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #VentanaTest category: 'MarsRover-WithHeading' stamp: 'dd 6/3/2021 20:02:38'!
TestCase subclass: #VentanaTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!VentanaTest methodsFor: 'nil' stamp: 'dd 6/3/2021 20:02:52'!
test01! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:05:15' prior: 50863911!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	log = OrderedCollection new.
	marsRover addLog: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:08:30'!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window = self.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window positionTextFieldModel.! !

!classDefinition: #Log category: 'MarsRover-WithHeading' stamp: 'dd 6/3/2021 20:14:22'!
Object subclass: #Log
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:14:06' prior: 50863915!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	 = Log new.
	marsRover addLog: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:14:39' prior: 50863942!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log = Log new.
	marsRover addLog: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.! !

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:18:19'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:18:19'!
ERROR!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:18:22'!
ERROR!
!MarsRover methodsFor: 'logs' stamp: 'dd 6/3/2021 20:19:30'!
addLog: anUndefinedObject 
	self shouldBeImplemented.! !

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:19:45'!
ERROR!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'dd 6/3/2021 20:21:01'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'logs' stamp: 'dd 6/3/2021 20:20:58' prior: 50863968!
addLog: aLog 
	logger :=aLog ! !
!MarsRover methodsFor: 'command processing' stamp: 'dd 6/3/2021 20:22:17' prior: 50863604!
processCommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [ logger add: 'f' ^ self moveForward].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !
!MarsRover methodsFor: 'command processing' stamp: 'dd 6/3/2021 20:22:24' prior: 50863987!
processCommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [ logger add: 'f'. ^ self moveForward].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/3/2021 20:24:14' prior: 50863586!
moveNorth
	
	position := position + (0@1).
	logger add: position.! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:24:21'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:24:21'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:24:21'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:24:21'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:24:21'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:24:21'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:24:21'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:24:21'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:24:28'!
ERROR!

!classDefinition: #Log category: 'MarsRover-WithHeading' stamp: 'dd 6/3/2021 20:25:57'!
Object subclass: #Log
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Log methodsFor: 'nil' stamp: 'dd 6/3/2021 20:25:56'!
add: 	aString
	log add:  aString! !
!Log methodsFor: 'nil' stamp: 'dd 6/3/2021 20:26:49' overrides: 16896425!
initialize
	log := OrderedCollection new.! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:27:09'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:27:09'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:27:09'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:27:09'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:27:09'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:27:09'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:27:09'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:27:09'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:27:13'!
ERROR!
!MarsRover methodsFor: 'command processing' stamp: 'dd 6/3/2021 20:27:31' prior: 50864001!
processCommand: aCommand

	(self isForwardCommand: aCommand) ifTrue: [ ^ self moveForward].
	(self isBackwardCommand: aCommand) ifTrue: [ ^ self moveBackward ].
	(self isRotateRightCommand: aCommand) ifTrue: [ ^ self rotateRight ].
	(self isRotateLeftCommand: aCommand) ifTrue: [ ^ self rotateLeft ].

	self signalInvalidCommand.! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:27:40'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:27:40'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:27:40'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:27:40'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:27:40'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:27:40'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:27:43'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'dd 6/3/2021 20:28:32' prior: 50863523!
initializeAt: aPosition heading: aHeading

	position := aPosition.
	head := aHeading 
! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:28:49'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:28:49'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:28:49'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:28:49'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:28:49'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:28:49'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:28:51'!
ERROR!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:29:35'!
ERROR!
!MarsRover methodsFor: 'moving' stamp: 'dd 6/3/2021 20:30:01' prior: 50864015!
moveNorth
	
	position := position + (0@1).
	logger isNil ifFalse: [
	logger add: position.]! !

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:30:04'!
FAILURE!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:30:16'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:30:18'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:30:19'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:30:20'!
ERROR!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:30:38'!
FAILURE!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:30:52' prior: 50863952!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLog: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.! !

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:30:54'!
ERROR!
!Log methodsFor: 'nil' stamp: 'dd 6/3/2021 20:31:19' overrides: 16880927!
size
	log size! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:31:21'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:31:21'!
FAILURE!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:31:21'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:31:28' prior: 50864261 overrides: 16880927!
size
	^log size! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:31:35'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:31:35'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:31:35'!
ERROR!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:31:37'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:31:56'!
first
	^log first! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:32:00'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:32:00'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:32:00'!
ERROR!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:38:18' prior: 50864249!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.! !
!MarsRover methodsFor: 'logs' stamp: 'dd 6/3/2021 20:39:03'!
addLogToPosition: aLog 
	logger :=aLog ! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:39:05'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:39:05'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:39:05'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:40:43'!
addPosition: 	aString
	log add:  aString! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/3/2021 20:40:59' prior: 50864229!
moveNorth
	
	position := position + (0@1).
	logger isNil ifFalse: [
	logger addPosition: position.]! !

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:41:05'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:41:05'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:41:05'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:41:05'!
ERROR!

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'dd 6/3/2021 20:42:13'!
Object subclass: #Window
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:42:09' prior: 50863925!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addWindow: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window positionTextFieldModel.! !

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:42:23'!
ERROR!
!MarsRover methodsFor: 'window' stamp: 'dd 6/3/2021 20:43:10'!
addWindow: aWindow 
	self shouldBeImplemented.! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:44:24' prior: 50864483!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window positionTextFieldModel.! !

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:44:28'!
ERROR!
!MarsRover methodsFor: 'window' stamp: 'dd 6/3/2021 20:44:40'!
addPositionWindow: aWindow 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'dd 6/3/2021 20:44:51'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head logger window'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'window' stamp: 'dd 6/3/2021 20:44:48' prior: 50864512!
addPositionWindow: aWindow 
	window addPosition: aWindow ! !

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:44:52'!
ERROR!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:45:55' prior: 50864500!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window position.! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/3/2021 20:46:38' prior: 50864460!
moveNorth
	
	position := position + (0@1).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.].! !

!classDefinition: #Window category: 'MarsRover-WithHeading' stamp: 'dd 6/3/2021 20:47:20'!
Object subclass: #Window
	instanceVariableNames: 'position'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!Window methodsFor: 'nil' stamp: 'dd 6/3/2021 20:47:19'!
addPosition: aPosition
	position := aPosition ! !
!Window methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 20:47:43'!
position
	^position! !

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:47:58'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:47:58'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:47:58'!
ERROR!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:47:58'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:47:58'!
ERROR!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:47:58'!
ERROR!

!methodRemoval: MarsRover #addWindow: stamp: 'dd 6/3/2021 20:48:35'!
addWindow: aWindow 
	self shouldBeImplemented.!
!MarsRover methodsFor: 'window' stamp: 'dd 6/3/2021 20:48:53' prior: 50864525!
addPositionWindow: aWindow 
	window := aWindow ! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 20:48:59'!
PASSED!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:15:43'!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'ff'.
	self assert: 2 equals: log size.
	self assert: 1@2 equals: log first.
	self assert: 1@3 equals: log second.! !

!testRun: #VentanaTest #test03 stamp: 'dd 6/3/2021 21:15:45'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:16:04'!
second
	self shouldBeImplemented.! !
!Log methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:16:20' prior: 50864641!
second
	log second! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/3/2021 21:20:35' prior: 50863590!
moveSouth
	
	position := position + (0@-1).
	logger isNil ifFalse: [
	logger addPosition: position.].! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:20:43' prior: 50864628!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'bb'.
	self assert: 2 equals: log size.
	self assert: 1@-1 equals: log first.
	self assert: 1@-2 equals: log second.! !

!testRun: #VentanaTest #test03 stamp: 'dd 6/3/2021 21:20:43'!
FAILURE!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:21:16' prior: 50864656!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'bb'.
	self assert: 2 equals: log size.
	self assert: 1@-0 equals: log first.
	self assert: 1@-1 equals: (log at: 2).! !

!testRun: #VentanaTest #test03 stamp: 'dd 6/3/2021 21:21:18'!
ERROR!
!Log methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:21:56' overrides: 16880774!
at:aSize
	^log at:aSize ! !

!testRun: #VentanaTest #test03 stamp: 'dd 6/3/2021 21:21:59'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 21:22:00'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 21:22:00'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/3/2021 21:22:00'!
PASSED!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:22:12' prior: 50864533!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'bb'.
	self assert: 1@2 equals: window position.! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:22:18' prior: 50864697!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window position.! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:22:49'!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'bb'.
	self assert: 1@00 equals: window position.
	! !

!testRun: #VentanaTest #test04 stamp: 'dd 6/3/2021 21:22:51'!
FAILURE!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:23:05' prior: 50864717!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'bb'.
	self assert: 1@0 equals: window position.
	! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/3/2021 21:23:50' prior: 50864649!
moveSouth
	
	position := position + (0@-1).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.].! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/3/2021 21:23:51'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/3/2021 21:23:51'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/3/2021 21:23:51'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/3/2021 21:23:51'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/3/2021 21:23:52'!
PASSED!

!testRun: #VentanaTest #test04 stamp: 'dd 6/3/2021 21:23:52'!
FAILURE!

!testRun: #VentanaTest #test04 stamp: 'dd 6/3/2021 21:23:52'!
FAILURE!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:24:53' prior: 50864730!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'bb'.
	self assert: 1@-1 equals: window position.
	! !

!testRun: #VentanaTest #test04 stamp: 'dd 6/3/2021 21:24:56'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/3/2021 21:24:56'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/3/2021 21:24:56'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/3/2021 21:24:56'!
PASSED!

!testRun: #VentanaTest #test04 stamp: 'dd 6/3/2021 21:24:56'!
PASSED!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:21:16' prior: 50864670!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'bb'.
	self assert: 2 equals: log size.
	self assert: 1@-0 equals: log first.
	self assert: 1@-1 equals: (log at: 2).! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:21:16' prior: 50864817!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'bb'.
	self assert: 2 equals: log size.
	self assert: 1@-0 equals: log first.
	self assert: 1@-1 equals: (log at: 2).! !

!testRun: #VentanaTest #test03 stamp: 'dd 6/3/2021 21:26:10'!
PASSED!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:27:30'!
test05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.

	
	marsRover process: 'bb'.
	self assert: 2 equals: log1 size.
	self assert: 1@-0 equals: log1 first.
	self assert: 1@-1 equals: (log1 at: 2).! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:30:37' prior: 50864843!
test05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 3 equals: log1 size.
	self assert: 3 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 first.
	self assert: 1@2 equals: window2 first.
	
	! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:30:51' prior: 50864859!
test05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 3 equals: log1 size.
	self assert: 3 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/3/2021 21:30:54' prior: 50864881!
test05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !

!testRun: #VentanaTest #test05 stamp: 'dd 6/3/2021 21:31:05'!
FAILURE!
!MarsRover methodsFor: 'logs' stamp: 'dd 6/3/2021 21:31:55' prior: 50863983!
addLog: aLog 
	logger add: aLog ! !

----QUIT----(4 June 2021 09:30:40) CuisUniversity-4532.image priorSource: 16953495!

----STARTUP---- (5 June 2021 20:33:51) as /home/duerunner/UBA/Inge1/linux64/CuisUniversity-4532.image!

!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:40:43'!
xtest05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !

!methodRemoval: VentanaTest #test05 stamp: 'dd 6/5/2021 20:40:43'!
test05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:42:38' prior: 50864796!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
		
	marsRover process: 'bb'.
	self assert: 1@-1 equals: window position.
	
	marsRover process: 'bb'.
	self assert: 1@-1 equals: window position.
	
	marsRover process: 'bb'.
	self assert: 1@-1 equals: window position.
	
	marsRover process: 'bb'.
	self assert: 1@-1 equals: window position.
! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:44:42' prior: 50864981!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.	
	
	marsRover process: 'rf'.
	self assert: 1@2 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
! !

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:44:44'!
FAILURE!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:45:52' prior: 50864998!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.	
	
	marsRover process: 'rf'.
	self assert: 1@2 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
	
	marsRover process: 'lf'.
	self assert: 0@1 equals: window position.
	
	! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:46:34' prior: 50865013!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.	
	
	marsRover process: 'rf'.
	self assert: 1@2 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
	
	marsRover process: 'lf'.
	self assert: 0@1 equals: window position.
	
	! !

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:46:40'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:47:34' prior: 50863578!
moveEast
	
	position := position + (1@0).
	window isNil ifFalse: [
	window addPosition: position.].! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/5/2021 20:47:36'!
PASSED!

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:47:36'!
FAILURE!

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:47:36'!
FAILURE!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:48:05' prior: 50865028!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.	
	
	marsRover process: 'rf'.
	self assert: 2@1 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
	
	marsRover process: 'lf'.
	self assert: 1@0 equals: window position.
	
	! !

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:48:07'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:48:19' prior: 50863594!
moveWest
	
	position := position + (-1@0).
	window isNil ifFalse: [
	window addPosition: position.].! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:48:22'!
PASSED!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:49:09' prior: 50865099!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.	
	
	marsRover process: 'rf'.
	self assert: 2@1 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
	
	marsRover process: 'lf'.
	self assert: 1@0 equals: window position.
	
	marsRover process: 'rrf'.
	self assert: 1@1 equals: window position.
	
	! !

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:49:11'!
PASSED!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:54:11' prior: 50864829!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
		
	marsRover process: 'rf'.
	self assert: 1 equals: log size.
	self assert: 2@1 equals: (log at:1).
	
	marsRover process: 'llf'.
	self assert: 2 equals: log size.
	self assert: 1@1 equals: (log at:2).
	
	marsRover process: 'lf'.
	self assert: 3 equals: log size.
	self assert: 1@0 equals: (log at: 3).
	
	marsRover process: 'rrf'.
	self assert: 4 equals: log size.
	self assert: 1@1 equals: (log at:4).
	! !
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:54:13' prior: 50865233!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
		
	marsRover process: 'rf'.
	self assert: 1 equals: log size.
	self assert: 2@1 equals: (log at:1).
	
	marsRover process: 'llf'.
	self assert: 2 equals: log size.
	self assert: 1@1 equals: (log at:2).
	
	marsRover process: 'lf'.
	self assert: 3 equals: log size.
	self assert: 1@0 equals: (log at: 3).
	
	marsRover process: 'rrf'.
	self assert: 4 equals: log size.
	self assert: 1@1 equals: (log at:4).
	! !

!testRun: #VentanaTest #test03 stamp: 'dd 6/5/2021 20:54:15'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:54:47' prior: 50865045!
moveEast
	
	position := position + (1@0).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.].! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/5/2021 20:54:49'!
FAILURE!

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:54:49'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/5/2021 20:54:49'!
FAILURE!
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:55:01' prior: 50865116!
moveWest
	
	position := position + (-1@0).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.].! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 20:55:03'!
PASSED!
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:56:25' prior: 50864543!
moveNorth
	
	position := position + (0@1).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.].! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:56:32' prior: 50865376!
moveNorth
	
	position := position + (0@1).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.].! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:56:46'!
changePositionTo

	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.]! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:56:46' prior: 50865384!
moveNorth
	
	position := position + (0@1).
	self changePositionTo.! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:57:13' prior: 50865392!
changePositionTo

	position := position + (0@1).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.]! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:58:07'!
changePositionTo: aNewPosition

	position := position + (0@1).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 20:58:07' prior: 50865399!
moveNorth
	
	position := position + (0@1).
	self changePositionTo: position + (0@1).! !

!methodRemoval: MarsRover #changePositionTo stamp: 'dd 6/5/2021 20:58:07'!
changePositionTo

	position := position + (0@1).
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.]!
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:58:23' prior: 50865412!
changePositionTo: aNewPosition

	position := aNewPosition.
	logger isNil ifFalse: [
	logger addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.]! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:58:37' prior: 50865421!
moveNorth
	
	self changePositionTo: position + (0@1).! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:58:52' prior: 50864740!
moveSouth
	
	self changePositionTo: position + (0@-1).! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:59:16' prior: 50865331!
moveWest
	
	self changePositionTo: position + (-1@0).
! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 20:59:34' prior: 50865275!
moveEast
	
	self changePositionTo: position + (1@0).! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #VentanaTest #test01 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #VentanaTest #test02 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #VentanaTest #test03 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!

!testRun: #VentanaTest #test04 stamp: 'dd 6/5/2021 20:59:39'!
PASSED!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:04:55'!
test01OnePositionChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.! !

!methodRemoval: VentanaTest #test01 stamp: 'dd 6/5/2021 21:04:55'!
test01

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:05:38'!
test02OnePositionChangeIsObservedByWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window position.! !

!methodRemoval: VentanaTest #test02 stamp: 'dd 6/5/2021 21:05:38'!
test02

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window position.!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:06:08'!
test03AllPositionChangesAreObservedByLogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
		
	marsRover process: 'rf'.
	self assert: 1 equals: log size.
	self assert: 2@1 equals: (log at:1).
	
	marsRover process: 'llf'.
	self assert: 2 equals: log size.
	self assert: 1@1 equals: (log at:2).
	
	marsRover process: 'lf'.
	self assert: 3 equals: log size.
	self assert: 1@0 equals: (log at: 3).
	
	marsRover process: 'rrf'.
	self assert: 4 equals: log size.
	self assert: 1@1 equals: (log at:4).
	! !

!methodRemoval: VentanaTest #test03 stamp: 'dd 6/5/2021 21:06:08'!
test03

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := Log new.
	marsRover addLogToPosition: log.
		
	marsRover process: 'rf'.
	self assert: 1 equals: log size.
	self assert: 2@1 equals: (log at:1).
	
	marsRover process: 'llf'.
	self assert: 2 equals: log size.
	self assert: 1@1 equals: (log at:2).
	
	marsRover process: 'lf'.
	self assert: 3 equals: log size.
	self assert: 1@0 equals: (log at: 3).
	
	marsRover process: 'rrf'.
	self assert: 4 equals: log size.
	self assert: 1@1 equals: (log at:4).
	!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:06:24'!
test04AllPositionChangesAreObservedByWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.	
	
	marsRover process: 'rf'.
	self assert: 2@1 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
	
	marsRover process: 'lf'.
	self assert: 1@0 equals: window position.
	
	marsRover process: 'rrf'.
	self assert: 1@1 equals: window position.
	
	! !

!methodRemoval: VentanaTest #test04 stamp: 'dd 6/5/2021 21:06:24'!
test04

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := Window new.
	marsRover addPositionWindow: window.	
	
	marsRover process: 'rf'.
	self assert: 2@1 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
	
	marsRover process: 'lf'.
	self assert: 1@0 equals: window position.
	
	marsRover process: 'rrf'.
	self assert: 1@1 equals: window position.
	
	!
!VentanaTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:06:47'!
test05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !

!testRun: #VentanaTest #test05 stamp: 'dd 6/5/2021 21:06:49'!
FAILURE!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'dd 6/5/2021 21:08:01'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionObservers window'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:08:01' prior: 50864927!
addLog: aLog 
	positionObservers add: aLog ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:08:01' prior: 50865434!
changePositionTo: aNewPosition

	position := aNewPosition.
	positionObservers isNil ifFalse: [
	positionObservers addPosition: position.].
	window isNil ifFalse: [
	window addPosition: position.]! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:08:01' prior: 50864409!
addLogToPosition: aLog 
	positionObservers :=aLog ! !
!MarsRover methodsFor: 'logs' stamp: 'dd 6/5/2021 21:08:09' prior: 50865669!
addLogToPosition: aLog 
	positionObservers add: aLog ! !

!methodRemoval: MarsRover #addLog: stamp: 'dd 6/5/2021 21:08:16'!
addLog: aLog 
	positionObservers add: aLog !
!MarsRover methodsFor: 'window' stamp: 'dd 6/5/2021 21:08:39' prior: 50864583!
addPositionWindow: aWindow 
	positionObservers add: aWindow ! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 21:10:13' prior: 50865659!
changePositionTo: aNewPosition

	position := aNewPosition.
	positionObservers do: [ :observer | observer addPosition: position].! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/5/2021 21:10:21' prior: 50865687!
changePositionTo: aNewPosition

	position := aNewPosition.
	positionObservers do: [ :observer | observer addPosition: position].! !

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 21:10:23'!
PASSED!

!testRun: #VentanaTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #VentanaTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #VentanaTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #VentanaTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:10:23'!
ERROR!

!testRun: #VentanaTest #test05 stamp: 'dd 6/5/2021 21:10:23'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'dd 6/5/2021 21:10:59' prior: 50864178!
initializeAt: aPosition heading: aHeading

	position := aPosition.
	head := aHeading.
	positionObservers := OrderedCollection new.! !

Object subclass: #MarsRover
	instanceVariableNames: 'position head positionObservers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'dd 6/5/2021 21:11:10'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionObservers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!testRun: #VentanaTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:11:34'!
PASSED!

!testRun: #VentanaTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:11:34'!
PASSED!

!testRun: #VentanaTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:11:34'!
PASSED!

!testRun: #VentanaTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:11:34'!
PASSED!

!testRun: #VentanaTest #test05 stamp: 'dd 6/5/2021 21:11:34'!
PASSED!

!classRenamed: #VentanaTest as: #MarsRoverObserverTest stamp: 'dd 6/5/2021 21:11:57'!
Smalltalk renameClassNamed: #VentanaTest as: #MarsRoverObserverTest!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:13:36'!
test05AMarsRoverCanHaveMultiplePositionsObservers

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !

!methodRemoval: MarsRoverObserverTest #test05 stamp: 'dd 6/5/2021 21:13:36'!
test05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:13:59'!
test06

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !

!methodRemoval: MarsRoverObserverTest #xtest05 stamp: 'dd 6/5/2021 21:14:05'!
xtest05

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := Window new.
	window2 := Window new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:14:53' prior: 50865839!
test06

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := Window new.
	
	marsRover addPositionWindow: window1.
	
	self assert: window1 position.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:17:59' prior: 50865883!
test06

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := Window new.
	
	marsRover addPositionWindow: window1.
	
	self should: [window1 position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: Window positionHasNotBeenUpdatedYet equals: error]
	! !
!Window class methodsFor: 'nil' stamp: 'dd 6/5/2021 21:19:22'!
positionHasNotBeenUpdatedYet
	^'Windows Mars Rover position has not been updated yet.'! !
!Window class methodsFor: 'error' stamp: 'dd 6/5/2021 21:19:54' prior: 50865905!
positionHasNotBeenUpdatedYet
	^'Mars Rover position has not been updated yet for the first time.'! !
!Window class methodsFor: 'error' stamp: 'dd 6/5/2021 21:20:19' prior: 50865911!
positionHasNotBeenUpdatedYet
	^'Mars Rover position has not been updated for the first time yet.'! !
!Window class methodsFor: 'error' stamp: 'dd 6/5/2021 21:20:21' prior: 50865917!
positionHasNotBeenUpdatedYet
	^'Mars Rover position has not been updated for the first time yet.'! !

!classRenamed: #Window as: #MarsRoverWindow stamp: 'dd 6/5/2021 21:20:32'!
Smalltalk renameClassNamed: #Window as: #MarsRoverWindow!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:20:32' prior: 50865588!
test04AllPositionChangesAreObservedByWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addPositionWindow: window.	
	
	marsRover process: 'rf'.
	self assert: 2@1 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
	
	marsRover process: 'lf'.
	self assert: 1@0 equals: window position.
	
	marsRover process: 'rrf'.
	self assert: 1@1 equals: window position.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:20:32' prior: 50865893!
test06

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	
	self should: [window1 position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow positionHasNotBeenUpdatedYet equals: error]
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:20:32' prior: 50865528!
test02OnePositionChangeIsObservedByWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addPositionWindow: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window position.! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:20:32' prior: 50865794!
test05AMarsRoverCanHaveMultiplePositionsObservers

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := Log new.
	log2 := Log new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := MarsRoverWindow new.
	window2 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !

!classRenamed: #Log as: #MarsRoverLogger stamp: 'dd 6/5/2021 21:20:54'!
Smalltalk renameClassNamed: #Log as: #MarsRoverLogger!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:20:55' prior: 50865548!
test03AllPositionChangesAreObservedByLogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addLogToPosition: log.
		
	marsRover process: 'rf'.
	self assert: 1 equals: log size.
	self assert: 2@1 equals: (log at:1).
	
	marsRover process: 'llf'.
	self assert: 2 equals: log size.
	self assert: 1@1 equals: (log at:2).
	
	marsRover process: 'lf'.
	self assert: 3 equals: log size.
	self assert: 1@0 equals: (log at: 3).
	
	marsRover process: 'rrf'.
	self assert: 4 equals: log size.
	self assert: 1@1 equals: (log at:4).
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:20:55' prior: 50865979!
test05AMarsRoverCanHaveMultiplePositionsObservers

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := MarsRoverLogger new.
	log2 := MarsRoverLogger new.
	marsRover addLogToPosition: log1.
	marsRover addLogToPosition: log2.

	window1 := MarsRoverWindow new.
	window2 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:20:55' prior: 50865507!
test01OnePositionChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addLogToPosition: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:21:30'!
test0

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	
	self should: [window1 position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow positionHasNotBeenUpdatedYet equals: error]
	! !

!testRun: #MarsRoverObserverTest #test0 stamp: 'dd 6/5/2021 21:21:30'!
FAILURE!

!testRun: #MarsRoverObserverTest #test06 stamp: 'dd 6/5/2021 21:21:42'!
FAILURE!
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:23:19' prior: 50864562!
position
	position isNil ifTrue: [self error: self class positionHasNotBeenUpdatedYet ].
	^position! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:23:37'!
assertPositionHasBeenUpdatedBefore

	^ position isNil ifTrue: [self error: self class positionHasNotBeenUpdatedYet ]! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:23:37' prior: 50866086!
position
	self assertPositionHasBeenUpdatedBefore.
	^position! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:24:02'!
assertPositionHasBeenUpdated

	^ position isNil ifTrue: [self error: self class positionHasNotBeenUpdatedYet ]! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:24:02' prior: 50866099!
position
	self assertPositionHasBeenUpdated.
	^position! !

!methodRemoval: MarsRoverWindow #assertPositionHasBeenUpdatedBefore stamp: 'dd 6/5/2021 21:24:02'!
assertPositionHasBeenUpdatedBefore

	^ position isNil ifTrue: [self error: self class positionHasNotBeenUpdatedYet ]!

!testRun: #MarsRoverObserverTest #test0 stamp: 'dd 6/5/2021 21:24:06'!
FAILURE!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test06 stamp: 'dd 6/5/2021 21:24:06'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 21:24:06'!
PASSED!

!testRun: #MarsRoverObserverTest #test06 stamp: 'dd 6/5/2021 21:24:09'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:24:36' prior: 50865953!
test06

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	
	self should: [window1 position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow positionHasNotBeenUpdatedYet equals: error messageText]
	! !

!testRun: #MarsRoverObserverTest #test06 stamp: 'dd 6/5/2021 21:24:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test06 stamp: 'dd 6/5/2021 21:24:41'!
PASSED!

!testRun: #MarsRoverObserverTest #test0 stamp: 'dd 6/5/2021 21:24:41'!
FAILURE!

!testRun: #MarsRoverObserverTest #test0 stamp: 'dd 6/5/2021 21:24:41'!
FAILURE!

!methodRemoval: MarsRoverObserverTest #test0 stamp: 'dd 6/5/2021 21:25:15'!
test0

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	
	self should: [window1 position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow positionHasNotBeenUpdatedYet equals: error]
	!

!testRun: #MarsRoverObserverTest #test06 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test06 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 21:25:24'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:26:48'!
test07

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	logger := MarsRoverLogger new.
	
	marsRover addPosition: logger.
	
	self should: [logger at: 1]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger positionHasNotBeenUpdatedYet equals: error messageText]
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:27:11' prior: 50866337!
test07

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	logger := MarsRoverLogger new.
	
	marsRover addLogToPosition: logger.
	
	self should: [logger at: 1]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger positionHasNotBeenUpdatedYet equals: error messageText]
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:29:07' prior: 50866351!
test07

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	logger := MarsRoverLogger new.
	
	marsRover addLogToPosition: logger.
	
	self should: [logger first]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger positionHasNotBeenUpdatedYet equals: error messageText]
	
	
	self should: [logger at:1]
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger indexIsOutOfRange equals: error messageText]
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:29:19'!
xtest07

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	logger := MarsRoverLogger new.
	
	marsRover addLogToPosition: logger.
	
	self should: [logger first]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger positionHasNotBeenUpdatedYet equals: error messageText]
	
	
	self should: [logger at:1]
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger indexIsOutOfRange equals: error messageText]
	! !

!methodRemoval: MarsRoverObserverTest #test07 stamp: 'dd 6/5/2021 21:29:19'!
test07

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	logger := MarsRoverLogger new.
	
	marsRover addLogToPosition: logger.
	
	self should: [logger first]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger positionHasNotBeenUpdatedYet equals: error messageText]
	
	
	self should: [logger at:1]
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger indexIsOutOfRange equals: error messageText]
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:30:13'!
test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	
	self should: [window1 position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow positionHasNotBeenUpdatedYet equals: error messageText]
	! !

!methodRemoval: MarsRoverObserverTest #test06 stamp: 'dd 6/5/2021 21:30:13'!
test06

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	
	self should: [window1 position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow positionHasNotBeenUpdatedYet equals: error messageText]
	!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 21:30:43'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:30:51'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:30:51'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:30:51'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:30:51'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:30:51'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 21:30:51'!
PASSED!
!MarsRover methodsFor: 'logs' stamp: 'dd 6/5/2021 21:32:09'!
addPositionObserver: aLog 
	positionObservers add: aLog ! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:32:09' prior: 50866055!
test01OnePositionChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addPositionObserver: log.
	
	marsRover process: 'f'.
	self assert: 1 equals: log size.
	self assert: 1@2 equals: log first.! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:32:09' prior: 50866008!
test03AllPositionChangesAreObservedByLogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addPositionObserver: log.
		
	marsRover process: 'rf'.
	self assert: 1 equals: log size.
	self assert: 2@1 equals: (log at:1).
	
	marsRover process: 'llf'.
	self assert: 2 equals: log size.
	self assert: 1@1 equals: (log at:2).
	
	marsRover process: 'lf'.
	self assert: 3 equals: log size.
	self assert: 1@0 equals: (log at: 3).
	
	marsRover process: 'rrf'.
	self assert: 4 equals: log size.
	self assert: 1@1 equals: (log at:4).
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:32:09' prior: 50866383!
xtest07

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	logger := MarsRoverLogger new.
	
	marsRover addPositionObserver: logger.
	
	self should: [logger first]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger positionHasNotBeenUpdatedYet equals: error messageText]
	
	
	self should: [logger at:1]
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger indexIsOutOfRange equals: error messageText]
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:32:09' prior: 50866030!
test05AMarsRoverCanHaveMultiplePositionsObservers

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := MarsRoverLogger new.
	log2 := MarsRoverLogger new.
	marsRover addPositionObserver: log1.
	marsRover addPositionObserver: log2.

	window1 := MarsRoverWindow new.
	window2 := MarsRoverWindow new.
	
	marsRover addPositionWindow: window1.
	marsRover addPositionWindow: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !

!methodRemoval: MarsRover #addLogToPosition: stamp: 'dd 6/5/2021 21:32:09'!
addLogToPosition: aLog 
	positionObservers add: aLog !

!methodRemoval: MarsRover #addPositionObserver: stamp: 'dd 6/5/2021 21:33:17'!
addPositionObserver: aLog 
	positionObservers add: aLog !
!MarsRover methodsFor: 'window' stamp: 'dd 6/5/2021 21:33:41'!
addPositionObserver: aWindow 
	positionObservers add: aWindow ! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:33:41' prior: 50865934!
test04AllPositionChangesAreObservedByWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addPositionObserver: window.	
	
	marsRover process: 'rf'.
	self assert: 2@1 equals: window position.
	
	marsRover process: 'llf'.
	self assert: 1@1 equals: window position.
	
	marsRover process: 'lf'.
	self assert: 1@0 equals: window position.
	
	marsRover process: 'rrf'.
	self assert: 1@1 equals: window position.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:33:41' prior: 50865967!
test02OnePositionChangeIsObservedByWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	window := MarsRoverWindow new.
	marsRover addPositionObserver: window.
	
	marsRover process: 'f'.
	self assert: 1@2 equals: window position.! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:33:41' prior: 50866532!
test05AMarsRoverCanHaveMultiplePositionsObservers

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := MarsRoverLogger new.
	log2 := MarsRoverLogger new.
	marsRover addPositionObserver: log1.
	marsRover addPositionObserver: log2.

	window1 := MarsRoverWindow new.
	window2 := MarsRoverWindow new.
	
	marsRover addPositionObserver: window1.
	marsRover addPositionObserver: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:33:41' prior: 50866418!
test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet

	| marsRover window1 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window1 := MarsRoverWindow new.
	
	marsRover addPositionObserver: window1.
	
	self should: [window1 position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow positionHasNotBeenUpdatedYet equals: error messageText]
	! !

!methodRemoval: MarsRover #addPositionWindow: stamp: 'dd 6/5/2021 21:33:41'!
addPositionWindow: aWindow 
	positionObservers add: aWindow !
!MarsRover methodsFor: 'window' stamp: 'dd 6/5/2021 21:34:13' prior: 50866565!
addPositionObserver: aPositionObserver 
	positionObservers add: aPositionObserver! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:36:12'!
test07OneHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Este' equals: log first.
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:36:35' prior: 50866653!
test07OneHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: log first.
	! !

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:36:56'!
ERROR!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:37:08'!
addHeadingObserver: aMarsRoverLogger 
	self shouldBeImplemented.! !

!classDefinition: #MarsRover category: 'MarsRover-WithHeading' stamp: 'dd 6/5/2021 21:37:28'!
Object subclass: #MarsRover
	instanceVariableNames: 'position head positionObservers headingObservers'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:37:26' prior: 50866682!
addHeadingObserver: aMarsRoverLogger 
	headingObservers add: aMarsRoverLogger ! !

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:37:31'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'dd 6/5/2021 21:38:09' prior: 50865753!
initializeAt: aPosition heading: aHeading

	position := aPosition.
	head := aHeading.
	positionObservers := OrderedCollection new.
	headingObservers := OrderedCollection  new.! !

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:40:09'!
FAILURE!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:40:09'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 21:41:50' prior: 50863528!
headEast
	
	head := MarsRoverHeadingEast new.
	headingObservers add: 'Apuntando al Este'! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 21:41:55' prior: 50866721!
headEast
	
	head := MarsRoverHeadingEast new.
	headingObservers add: 'Apuntando al Este'! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:41:58'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 21:41:58'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:41:58'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 21:44:59' prior: 50866727!
headEast
	
	head := MarsRoverHeadingEast new.
	headingObservers do:[:observer| observer add: 'Apuntando al Este'].! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:45:45'!
addHeading: 	aString
	log add:  aString! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:45:45' prior: 50864456!
addPosition: 	aString
	log addHeading:  aString! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:45:45' prior: 50866799!
headEast
	
	head := MarsRoverHeadingEast new.
	headingObservers do:[:observer| observer addHeading: 'Apuntando al Este'].! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:45:45' prior: 50866647!
addPositionObserver: aPositionObserver 
	positionObservers addHeading: aPositionObserver! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:45:45' prior: 50864069!
add: 	aString
	log addHeading:  aString! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:45:45' prior: 50866696!
addHeadingObserver: aMarsRoverLogger 
	headingObservers addHeading: aMarsRoverLogger ! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:45:45' prior: 50866806!
addHeading: 	aString
	log addHeading:  aString! !

!methodRemoval: MarsRoverLogger #add: stamp: 'dd 6/5/2021 21:45:45'!
add: 	aString
	log addHeading:  aString!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:45:51'!
ERROR!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:45:51'!
ERROR!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:45:51'!
ERROR!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:45:51'!
ERROR!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:45:51'!
ERROR!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 21:45:51'!
ERROR!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:45:51'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 21:45:51'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:46:06'!
ERROR!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:46:41'!
add: 	aString
	log addHeading:  aString! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:46:41' prior: 50866811!
addPosition: 	aString
	log add:  aString! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:46:41' prior: 50866816!
headEast
	
	head := MarsRoverHeadingEast new.
	headingObservers do:[:observer| observer add: 'Apuntando al Este'].! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:46:41' prior: 50866840!
addHeading: 	aString
	log add:  aString! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:46:41' prior: 50866834!
addHeadingObserver: aMarsRoverLogger 
	headingObservers add: aMarsRoverLogger ! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:46:41' prior: 50866823!
addPositionObserver: aPositionObserver 
	positionObservers add: aPositionObserver! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:46:41' prior: 50866914!
add: 	aString
	log add:  aString! !

!methodRemoval: MarsRoverLogger #addHeading: stamp: 'dd 6/5/2021 21:46:41'!
addHeading: 	aString
	log add:  aString!

!methodRemoval: MarsRoverLogger #add: stamp: 'dd 6/5/2021 21:48:10'!
add: 	aString
	log add:  aString!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:48:23' prior: 50866919!
addPosition: 	aString
	log add: aString! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:48:25'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 21:48:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:48:25'!
ERROR!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:48:40'!
ERROR!
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 21:49:01' prior: 50866924!
headEast
	
	head := MarsRoverHeadingEast new.
	headingObservers do:[:observer| observer addHeading: 'Apuntando al Este'].! !

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:49:03'!
ERROR!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:49:13'!
addHeading: aString 
	self shouldBeImplemented.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:49:36' prior: 50867045!
addHeading: aString 
	log add: aString.! !

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:49:39'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:49:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:49:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:49:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:49:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:49:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 21:49:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:49:47'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:50:49'!
test07OneHeadingChangeIsObservedByAWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	marsRover addHeadingObserver: window.
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Este' equals: window heading.
	! !

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 21:50:59'!
ERROR!
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:51:16'!
addHeading: aString 
	self shouldBeImplemented.! !

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'dd 6/5/2021 21:51:48'!
Object subclass: #MarsRoverWindow
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:51:47' prior: 50867099!
addHeading: aString 
	heading := aString.! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:51:50'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:51:50'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:51:50'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:51:50'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:51:50'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 21:51:50'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:51:50'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 21:51:50'!
ERROR!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 21:51:50'!
ERROR!
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:52:07'!
heading
	self shouldBeImplemented.
	^heading! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:52:20' prior: 50867150!
heading
	^heading! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:52:35'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 21:52:35'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 21:52:35'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 21:52:35'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 21:52:35'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 21:52:35'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 21:52:35'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 21:52:35'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:52:53'!
test08OneHeadingChangeIsObservedByAWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	marsRover addHeadingObserver: window.
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Este' equals: window heading.
	! !

!methodRemoval: MarsRoverObserverTest #test07OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 21:52:53'!
test07OneHeadingChangeIsObservedByAWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	marsRover addHeadingObserver: window.
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Este' equals: window heading.
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:54:21'!
test09MultipleHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: log first.
	! !
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:55:08'!
updatePosition: aPosition
	position := aPosition ! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:55:08'!
updatePosition: 	aString
	log add: aString! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:55:08' prior: 50865694!
changePositionTo: aNewPosition

	position := aNewPosition.
	positionObservers do: [ :observer | observer updatePosition: position].! !

!methodRemoval: MarsRoverWindow #addPosition: stamp: 'dd 6/5/2021 21:55:08'!
addPosition: aPosition
	position := aPosition !

!methodRemoval: MarsRoverLogger #addPosition: stamp: 'dd 6/5/2021 21:55:08'!
addPosition: 	aString
	log add: aString!
!MarsRoverWindow methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:55:22'!
updateHeading: aString 
	heading := aString.! !
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:55:22'!
updateHeading: aString 
	log add: aString.! !
!MarsRover methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 21:55:22' prior: 50867034!
headEast
	
	head := MarsRoverHeadingEast new.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Este'].! !

!methodRemoval: MarsRoverWindow #addHeading: stamp: 'dd 6/5/2021 21:55:22'!
addHeading: aString 
	heading := aString.!

!methodRemoval: MarsRoverLogger #addHeading: stamp: 'dd 6/5/2021 21:55:22'!
addHeading: aString 
	log add: aString.!

Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverObserver category: 'MarsRover-WithHeading' stamp: 'dd 6/5/2021 22:00:48'!
Object subclass: #MarsRoverObserver
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverLogger category: 'MarsRover-WithHeading' stamp: 'dd 6/5/2021 22:01:08'!
MarsRoverObserver subclass: #MarsRoverLogger
	instanceVariableNames: 'log'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!

!classDefinition: #MarsRoverWindow category: 'MarsRover-WithHeading' stamp: 'dd 6/5/2021 22:01:18'!
MarsRoverObserver subclass: #MarsRoverWindow
	instanceVariableNames: 'position heading'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover-WithHeading'!
!MarsRoverObserver methodsFor: 'nil' stamp: 'dd 6/5/2021 22:01:36'!
updateHeading: aString 
	self subclassResponsibility.! !
!MarsRoverObserver methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:01:54'!
updatePosition: aString 
	self subclassResponsibility.! !

!methodRemoval: MarsRoverLogger #second stamp: 'dd 6/5/2021 22:03:39'!
second
	log second!
!MarsRoverLogger methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:04:10' prior: 50864352!
first
	^self at:1! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:05:57'!
xtest09MultipleHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: log first.
	! !

!methodRemoval: MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:05:57'!
test09MultipleHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: log first.
	!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:06:05'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:06:05'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:06:05'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:06:05'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:06:05'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:06:05'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:06:05'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:06:05'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:06:13'!
test09MultipleHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: log first.
	! !

!methodRemoval: MarsRoverObserverTest #xtest09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:06:13'!
xtest09MultipleHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: log first.
	!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:07:59' prior: 50867387!
test09MultipleHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: (log at:1).
	
	self assert: 2 equals: log size.
	self assert: 'Apuntando al Sur' equals: (log at:2).
	
	self assert: 3 equals: log size.
	self assert: 'Apuntando al Oeste' equals: (log at:3).
	
	self assert: 4 equals: log size.
	self assert: 'Apuntando al Norte' equals: (log at:4).! !

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:07:59'!
FAILURE!
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:12:12' prior: 50863532!
headNorth
	
	head := MarsRoverHeadingNorth new.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Norte'].! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:12:25' prior: 50863536!
headSouth
	
	head := MarsRoverHeadingSouth new.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Sur'].! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:12:36' prior: 50863540!
headWest
	
	head := MarsRoverHeadingWest new.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Oeste'].! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:12:38'!
FAILURE!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 22:12:38'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:12:38'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:13:21' prior: 50867413!
test09MultipleHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: (log at:1).
	
	marsRover process: 'r'.
	self assert: 2 equals: log size.
	self assert: 'Apuntando al Sur' equals: (log at:2).
	
	marsRover process: 'r'.
	self assert: 3 equals: log size.
	self assert: 'Apuntando al Oeste' equals: (log at:3).
	
	marsRover process: 'r'.
	self assert: 4 equals: log size.
	self assert: 'Apuntando al Norte' equals: (log at:4).! !

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 22:13:23'!
PASSED!
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:14:35'!
changeHeadingTo

	head := MarsRoverHeadingEast new.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Este']! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:14:35' prior: 50867261!
headEast
	
	self changeHeadingTo.! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:15:02'!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Este']! !

!methodRemoval: MarsRover #changeHeadingTo stamp: 'dd 6/5/2021 22:15:25'!
changeHeadingTo

	head := MarsRoverHeadingEast new.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Este']!
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:15:41' prior: 50867638!
headEast
	
	self changeHeadingTo: MarsRoverHeadingEast new.! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:15:45' prior: 50867656!
headEast
	
	self changeHeadingTo: MarsRoverHeadingEast new.! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:19:34' prior: 50867438!
headNorth
	
	self changeHeadingTo: MarsRoverHeadingNorth new.! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:19:49' prior: 50867642!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Este'].
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Norte'].! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:20:07' prior: 50867445!
headSouth
	
	self changeHeadingTo: MarsRoverHeadingSouth new.! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:20:16' prior: 50867671!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Este'].
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Norte'].
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Sur'].! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:20:26' prior: 50867452!
headWest
	
	head := MarsRoverHeadingWest new.! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:20:34' prior: 50867686!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Este'].
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Norte'].
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Sur'].
	headingObservers do:[:observer| observer updateHeading: 'Apuntando al Oeste'].! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:20:55' prior: 50867698!
headWest
	
	self changeHeadingTo: MarsRoverHeadingWest new.! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 22:24:47' prior: 50867703!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	headingObservers do:[:observer| observer updateHeading: aNewHeading ].! !
!MarsRoverLogger methodsFor: 'update' stamp: 'dd 6/5/2021 22:27:20' prior: 50867256 overrides: 50867314!
updateHeading: aHeading
	
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'Apuntando al Este'].
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'Apuntando al Norte'].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'Apuntando al Sur'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'Apuntando al Oeste'].
	! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:27:24'!
FAILURE!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 22:27:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:27:24'!
FAILURE!
!MarsRoverWindow methodsFor: 'update' stamp: 'dd 6/5/2021 22:29:23' prior: 50867251 overrides: 50867314!
updateHeading: aHeading
	
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading := 'Apuntando al Este'].
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading := 'Apuntando al Norte'].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading := 'Apuntando al Sur'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading := 'Apuntando al Oeste'].
	! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 22:29:25'!
PASSED!
!MarsRoverWindow methodsFor: 'update' stamp: 'dd 6/5/2021 22:30:08' prior: 50867820 overrides: 50867314!
updateHeading: aHeading
	
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading := 'Apuntando al Este'].
	"(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading := 'Apuntando al Norte'].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading := 'Apuntando al Sur'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading := 'Apuntando al Oeste'].
	"! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 22:30:10'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:31:43'!
test10MultipleHeadingChangeIsObservedByAWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverLogger new.
	marsRover addHeadingObserver: window.
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Este' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Sur' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Oeste' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Norte' equals: (window heading).! !
!MarsRoverWindow methodsFor: 'update' stamp: 'dd 6/5/2021 22:32:58' prior: 50867906 overrides: 50867314!
updateHeading: aHeading
	
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [heading := 'Apuntando al Este'].
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading := 'Apuntando al Norte'].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading := 'Apuntando al Sur'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading := 'Apuntando al Oeste'].! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:33:01'!
ERROR!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 22:33:01'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:33:01'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:33:27' prior: 50867991!
test10MultipleHeadingChangeIsObservedByAWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	marsRover addHeadingObserver: window.
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Este' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Sur' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Oeste' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Norte' equals: (window heading).! !

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 22:33:29'!
PASSED!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:39:55'!
test11AMarsRoverCanHaveMultipleHeadingObservers

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := MarsRoverLogger new.
	log2 := MarsRoverLogger new.
	marsRover addPositionObserver: log1.
	marsRover addPositionObserver: log2.

	window1 := MarsRoverWindow new.
	window2 := MarsRoverWindow new.
	
	marsRover addPositionObserver: window1.
	marsRover addPositionObserver: window2.

	marsRover process: 'f'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 1@2 equals: log1 first.
	self assert: 1@2 equals: log2 first.
	
	self assert: 1@2 equals: window1 position.
	self assert: 1@2 equals: window2 position.
	
	! !
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:41:17' prior: 50868203!
test11AMarsRoverCanHaveMultipleHeadingObservers

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := MarsRoverLogger new.
	log2 := MarsRoverLogger new.
	marsRover addHeadingObserver: log1.
	marsRover addHeadingObserver: log2.

	window1 := MarsRoverWindow new.
	window2 := MarsRoverWindow new.
	
	marsRover addHeadingObserver: window1.
	marsRover addHeadingObserver: window2.

	marsRover process: 'r'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 'Apuntando al Este' equals: log1 first.
	self assert: 'Apuntando al Este' equals: log2 first.
	
	self assert: 'Apuntando al Este' equals: window1 position.
	self assert: 'Apuntando al Este' equals: window2 position.
	
	! !

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/5/2021 22:41:20'!
ERROR!
!MarsRoverObserverTest methodsFor: 'as yet unclassified' stamp: 'dd 6/5/2021 22:42:08' prior: 50868229!
test11AMarsRoverCanHaveMultipleHeadingObservers

	| marsRover log1 log2 window1 window2 |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log1 := MarsRoverLogger new.
	log2 := MarsRoverLogger new.
	
	marsRover addHeadingObserver: log1.
	marsRover addHeadingObserver: log2.

	window1 := MarsRoverWindow new.
	window2 := MarsRoverWindow new.
	
	marsRover addHeadingObserver: window1.
	marsRover addHeadingObserver: window2.

	marsRover process: 'r'.
	self assert: 1 equals: log1 size.
	self assert: 1 equals: log2 size.
	
	self assert: 'Apuntando al Este' equals: log1 first.
	self assert: 'Apuntando al Este' equals: log2 first.
	
	self assert: 'Apuntando al Este' equals: window1 heading.
	self assert: 'Apuntando al Este' equals: window2 heading.
	
	! !

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 22:42:08'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/5/2021 22:42:08'!
PASSED!
!MarsRoverObserver methodsFor: 'update' stamp: 'dd 6/5/2021 22:45:44' prior: 50867314!
updateHeading: aNewHeading
	self subclassResponsibility.! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:47:19'!
visitMarsRoverEast: aMarsRover
	self subclassResponsibility ! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:47:30'!
visitMarsRoverNorth: aMarsRover
	self subclassResponsibility ! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:47:36'!
visitMarsRoverSouth: aMarsRover
	self subclassResponsibility ! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:47:46'!
visitMarsRoverWest: aMarsRover
	self subclassResponsibility ! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:48:20' overrides: 50868352!
visitMarsRoverWest: aMarsRover
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:48:27' overrides: 50868337!
visitMarsRoverEast: aMarsRover
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:48:37' overrides: 50868347!
visitMarsRoverSouth: aMarsRover
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:48:46' overrides: 50868342!
visitMarsRoverNorth: aMarsRover
	! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:49:57' overrides: 50868337!
visitMarsRoverEast: aMarsRover
	! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:06' overrides: 50868342!
visitMarsRoverNorth: aMarsRover
	! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:13' overrides: 50868347!
visitMarsRoverSouth: aMarsRover
	! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:20' overrides: 50868352!
visitMarsRoverWest: aMarsRover
	! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:39'!
visitMarsRoverHeadingEast: aMarsRover
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:39'!
visitMarsRoverHeadingEast: aMarsRover
	! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:39'!
visitMarsRoverHeadingEast: aMarsRover
	self subclassResponsibility ! !

!methodRemoval: MarsRoverWindow #visitMarsRoverEast: stamp: 'dd 6/5/2021 22:50:39'!
visitMarsRoverEast: aMarsRover
	!

!methodRemoval: MarsRoverLogger #visitMarsRoverEast: stamp: 'dd 6/5/2021 22:50:39'!
visitMarsRoverEast: aMarsRover
	!

!methodRemoval: MarsRoverObserver #visitMarsRoverEast: stamp: 'dd 6/5/2021 22:50:39'!
visitMarsRoverEast: aMarsRover
	self subclassResponsibility !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:51'!
visitMarsRoverHeadingNorth: aMarsRover
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:51'!
visitMarsRoverHeadingNorth: aMarsRover
	! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:50:51'!
visitMarsRoverHeadingNorth: aMarsRover
	self subclassResponsibility ! !

!methodRemoval: MarsRoverWindow #visitMarsRoverNorth: stamp: 'dd 6/5/2021 22:50:51'!
visitMarsRoverNorth: aMarsRover
	!

!methodRemoval: MarsRoverLogger #visitMarsRoverNorth: stamp: 'dd 6/5/2021 22:50:51'!
visitMarsRoverNorth: aMarsRover
	!

!methodRemoval: MarsRoverObserver #visitMarsRoverNorth: stamp: 'dd 6/5/2021 22:50:51'!
visitMarsRoverNorth: aMarsRover
	self subclassResponsibility !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:51:05'!
visitMarsRoverHeadingSouth: aMarsRover
	self subclassResponsibility ! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:51:05' overrides: 50868448!
visitMarsRoverHeadingSouth: aMarsRover
	! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:51:05' overrides: 50868448!
visitMarsRoverHeadingSouth: aMarsRover
	! !

!methodRemoval: MarsRoverObserver #visitMarsRoverSouth: stamp: 'dd 6/5/2021 22:51:05'!
visitMarsRoverSouth: aMarsRover
	self subclassResponsibility !

!methodRemoval: MarsRoverLogger #visitMarsRoverSouth: stamp: 'dd 6/5/2021 22:51:05'!
visitMarsRoverSouth: aMarsRover
	!

!methodRemoval: MarsRoverWindow #visitMarsRoverSouth: stamp: 'dd 6/5/2021 22:51:06'!
visitMarsRoverSouth: aMarsRover
	!
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:51:29'!
visitMarsRoverHeadingWest: aMarsRover
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:51:29'!
visitMarsRoverHeadingWest: aMarsRover
	! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 22:51:29'!
visitMarsRoverHeadingWest: aMarsRover
	self subclassResponsibility ! !

!methodRemoval: MarsRoverWindow #visitMarsRoverWest: stamp: 'dd 6/5/2021 22:51:29'!
visitMarsRoverWest: aMarsRover
	!

!methodRemoval: MarsRoverLogger #visitMarsRoverWest: stamp: 'dd 6/5/2021 22:51:30'!
visitMarsRoverWest: aMarsRover
	!

!methodRemoval: MarsRoverObserver #visitMarsRoverWest: stamp: 'dd 6/5/2021 22:51:30'!
visitMarsRoverWest: aMarsRover
	self subclassResponsibility !
!MarsRoverHeading methodsFor: 'visiting' stamp: 'dd 6/5/2021 22:53:11'!
accept
	self subclassResponsibility ! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 23:08:22' prior: 50867723!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	headingObservers do:[:observer| observer visit: self].'updateHeading: aNewHeading'! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/5/2021 23:11:44' prior: 50868505!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	headingObservers do:[:observer| observer updateHeading: aNewHeading].! !
!MarsRoverLogger methodsFor: 'update' stamp: 'dd 6/5/2021 23:12:16' prior: 50867731 overrides: 50868332!
updateHeading: aHeading
	aHeading accept: self.
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [log add: 'Apuntando al Este'].
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [log add: 'Apuntando al Norte'].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [log add: 'Apuntando al Sur'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [log add: 'Apuntando al Oeste'].
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:12:43'!
visitMarsRoverHeadingEast
	log add: 'Apuntando al Este'	! !

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingEast: stamp: 'dd 6/5/2021 23:12:51'!
visitMarsRoverHeadingEast: aMarsRover
	!
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:28'!
visitMarsRoverHeadingNorth
	! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:28'!
visitMarsRoverHeadingNorth
	self subclassResponsibility ! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:28' overrides: 50868548!
visitMarsRoverHeadingNorth
	! !

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingNorth: stamp: 'dd 6/5/2021 23:13:28'!
visitMarsRoverHeadingNorth: aMarsRover
	!

!methodRemoval: MarsRoverObserver #visitMarsRoverHeadingNorth: stamp: 'dd 6/5/2021 23:13:28'!
visitMarsRoverHeadingNorth: aMarsRover
	self subclassResponsibility !

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingNorth: stamp: 'dd 6/5/2021 23:13:28'!
visitMarsRoverHeadingNorth: aMarsRover
	!
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:40'!
visitMarsRoverHeadingSouth
	! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:40'!
visitMarsRoverHeadingSouth
	self subclassResponsibility ! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:40' overrides: 50868576!
visitMarsRoverHeadingSouth
	! !

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingSouth: stamp: 'dd 6/5/2021 23:13:40'!
visitMarsRoverHeadingSouth: aMarsRover
	!

!methodRemoval: MarsRoverObserver #visitMarsRoverHeadingSouth: stamp: 'dd 6/5/2021 23:13:40'!
visitMarsRoverHeadingSouth: aMarsRover
	self subclassResponsibility !

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingSouth: stamp: 'dd 6/5/2021 23:13:40'!
visitMarsRoverHeadingSouth: aMarsRover
	!
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:53'!
visitMarsRoverHeadingWest
	self subclassResponsibility ! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:53' overrides: 50868600!
visitMarsRoverHeadingWest
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:13:53' overrides: 50868600!
visitMarsRoverHeadingWest
	! !

!methodRemoval: MarsRoverObserver #visitMarsRoverHeadingWest: stamp: 'dd 6/5/2021 23:13:53'!
visitMarsRoverHeadingWest: aMarsRover
	self subclassResponsibility !

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingWest: stamp: 'dd 6/5/2021 23:13:53'!
visitMarsRoverHeadingWest: aMarsRover
	!

!methodRemoval: MarsRoverLogger #visitMarsRoverHeadingWest: stamp: 'dd 6/5/2021 23:13:53'!
visitMarsRoverHeadingWest: aMarsRover
	!
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:14:06'!
visitMarsRoverHeadingEast
	! !
!MarsRoverObserver methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:14:06'!
visitMarsRoverHeadingEast
	self subclassResponsibility ! !

!methodRemoval: MarsRoverWindow #visitMarsRoverHeadingEast: stamp: 'dd 6/5/2021 23:14:06'!
visitMarsRoverHeadingEast: aMarsRover
	!

!methodRemoval: MarsRoverObserver #visitMarsRoverHeadingEast: stamp: 'dd 6/5/2021 23:14:06'!
visitMarsRoverHeadingEast: aMarsRover
	self subclassResponsibility !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:14:15' prior: 50868544 overrides: 50868548!
visitMarsRoverHeadingNorth
	log add: 'Apuntando al Norte'	! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:14:33' prior: 50868554 overrides: 50868548!
visitMarsRoverHeadingNorth
! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:15:01' prior: 50868572 overrides: 50868576!
visitMarsRoverHeadingSouth
	log add: 'Apuntando al Sur'
	! !
!MarsRoverLogger methodsFor: 'update' stamp: 'dd 6/5/2021 23:15:15' prior: 50868520 overrides: 50868332!
updateHeading: aHeading
	aHeading accept: self.
	! !
!MarsRoverLogger methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:15:38' prior: 50868610 overrides: 50868600!
visitMarsRoverHeadingWest
	log add: 'Apuntando al Oeste'
	! !
!MarsRoverHeadingEast methodsFor: 'visiting' stamp: 'dd 6/5/2021 23:16:55'!
accept: aMarsRoverObserver
	aMarsRoverObserver visitMarsRoverHeadingEast.! !
!MarsRoverHeadingNorth methodsFor: 'visiting' stamp: 'dd 6/5/2021 23:17:06'!
accept: aMarsRoverObserver
	aMarsRoverObserver visitMarsRoverHeadingNorth.! !
!MarsRoverHeadingSouth methodsFor: 'visiting' stamp: 'dd 6/5/2021 23:20:46'!
accept: aMarsRoverObserver
	aMarsRoverObserver visitMarsRoverHeadingSouth.! !
!MarsRoverHeadingWest methodsFor: 'visiting' stamp: 'dd 6/5/2021 23:21:21'!
accept: aMarsRoverObserver
	aMarsRoverObserver visitMarsRoverHeadingWest.! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 23:22:24'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/5/2021 23:22:24'!
PASSED!
!MarsRoverWindow methodsFor: 'update' stamp: 'dd 6/5/2021 23:25:54' prior: 50868012 overrides: 50868332!
updateHeading: aHeading
	aHeading accept: self.	
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [].
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [heading := 'Apuntando al Norte'].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading := 'Apuntando al Sur'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading := 'Apuntando al Oeste'].! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:26:02' prior: 50868627 overrides: 50868631!
visitMarsRoverHeadingEast
	heading := 'Apuntando al Este'	! !
!MarsRoverWindow methodsFor: 'update' stamp: 'dd 6/5/2021 23:26:17' prior: 50868736 overrides: 50868332!
updateHeading: aHeading
	aHeading accept: self.	
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [].
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [heading := 'Apuntando al Sur'].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading := 'Apuntando al Oeste'].! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:26:34' prior: 50868652 overrides: 50868548!
visitMarsRoverHeadingNorth
	heading := 'Apuntando al Norte'! !
!MarsRoverWindow methodsFor: 'update' stamp: 'dd 6/5/2021 23:26:46' prior: 50868758 overrides: 50868332!
updateHeading: aHeading
	aHeading accept: self.	
	(aHeading isKindOf: MarsRoverHeadingEast) ifTrue: [].
	(aHeading isKindOf: MarsRoverHeadingNorth) ifTrue: [].
	(aHeading isKindOf: MarsRoverHeadingSouth) ifTrue: [].
	(aHeading isKindOf: MarsRoverHeadingWest) ifTrue: [heading := 'Apuntando al Oeste'].! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:26:53' prior: 50868582 overrides: 50868576!
visitMarsRoverHeadingSouth
	heading := 'Apuntando al Sur'	! !
!MarsRoverWindow methodsFor: 'update' stamp: 'dd 6/5/2021 23:27:11' prior: 50868779 overrides: 50868332!
updateHeading: aHeading
	aHeading accept: self.	! !
!MarsRoverWindow methodsFor: 'visiting - private' stamp: 'dd 6/5/2021 23:27:18' prior: 50868605 overrides: 50868600!
visitMarsRoverHeadingWest
	heading := 'Apuntando al Oeste'	! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/5/2021 23:27:19'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/5/2021 23:27:47'!
PASSED!

----QUIT----(6 June 2021 14:55:02) CuisUniversity-4532.image priorSource: 17064963!

----STARTUP---- (6 June 2021 18:03:32) as /home/duerunner/UBA/Inge1/linux64/CuisUniversity-4532.image!


!methodRemoval: MarsRoverObserverTest #xtest07 stamp: 'dd 6/6/2021 18:14:15'!
xtest07

	| marsRover logger |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	logger := MarsRoverLogger new.
	
	marsRover addPositionObserver: logger.
	
	self should: [logger first]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger positionHasNotBeenUpdatedYet equals: error messageText]
	
	
	self should: [logger at:1]
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverLogger indexIsOutOfRange equals: error messageText]
	!
!MarsRoverObserverTest methodsFor: 'test window - position' stamp: 'dd 6/6/2021 18:15:48'!
test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	
	marsRover addPositionObserver: window.
	
	self should: [window position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow headingHasNotBeenUpdatedYet equals: error messageText]
	! !

!testRun: #MarsRoverObserverTest #test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:15:51'!
ERROR!
!MarsRoverWindow class methodsFor: 'error' stamp: 'dd 6/6/2021 18:17:05'!
headingHasNotBeenUpdatedYet
	^'Mars Rover heading has not been updated for the first time yet.'! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/6/2021 18:17:07'!
PASSED!

!testRun: #MarsRoverObserverTest #test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:17:07'!
FAILURE!

!testRun: #MarsRoverObserverTest #test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:17:07'!
FAILURE!
!MarsRoverObserverTest methodsFor: 'test window - position' stamp: 'dd 6/6/2021 18:17:29' prior: 50868953!
test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	
	marsRover addPositionObserver: window.
	
	self should: [window heading]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow headingHasNotBeenUpdatedYet equals: error messageText]
	! !

!testRun: #DictionaryTest #testIsCollection stamp: 'dd 6/6/2021 18:18:28'!
PASSED!

!testRun: #DictionaryTest #testKeyNotFoundSignalTheRightMessage stamp: 'dd 6/6/2021 18:18:28'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/6/2021 18:18:33'!
PASSED!

!testRun: #MarsRoverObserverTest #test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:18:33'!
FAILURE!

!testRun: #MarsRoverObserverTest #test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:18:33'!
FAILURE!
!MarsRoverWindow methodsFor: 'assertions' stamp: 'dd 6/6/2021 18:19:20'!
assertHeadingHasBeenUpdated

	^ heading isNil ifTrue: [self error: self class headingHasNotBeenUpdatedYet ]! !
!MarsRoverWindow methodsFor: 'accessing' stamp: 'dd 6/6/2021 18:19:45' prior: 50867155!
heading
	self assertHeadingHasBeenUpdated.
	^heading! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverObserverTest #test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/6/2021 18:20:02'!
PASSED!

OrderedCollection new at:1!
!MarsRoverLogger methodsFor: 'update' stamp: 'dd 6/6/2021 18:37:05' prior: 50867231 overrides: 50867319!
updatePosition: 	aPosition
	log add: aPosition! !
!MarsRoverLogger methodsFor: 'update' stamp: 'dd 6/6/2021 18:37:22' prior: 50868663 overrides: 50868332!
updateHeading: aMarsRoverHeading
	aMarsRoverHeading accept: self.
	! !
!MarsRoverWindow methodsFor: 'update' stamp: 'dd 6/6/2021 18:39:37' prior: 50868799 overrides: 50868332!
updateHeading: aMarsRoverHeading
	aMarsRoverHeading accept: self.	! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/6/2021 18:43:31'!
notifyHeadingObserversOf: aNewHeading

	^ headingObservers do:[:observer| observer updateHeading: aNewHeading]! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/6/2021 18:43:31' prior: 50868512!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	self notifyHeadingObserversOf: aNewHeading.! !
!MarsRover methodsFor: 'observers' stamp: 'dd 6/6/2021 18:45:13'!
notifyHeadingObservers

	^ headingObservers do:[:observer| observer updateHeading: head]! !

!methodRemoval: MarsRover #notifyHeadingObserversOf: stamp: 'dd 6/6/2021 18:45:24'!
notifyHeadingObserversOf: aNewHeading

	^ headingObservers do:[:observer| observer updateHeading: aNewHeading]!
!MarsRover methodsFor: 'heading' stamp: 'dd 6/6/2021 18:45:31' prior: 50869216!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	self notifyHeadingObservers! !
!MarsRover methodsFor: 'heading' stamp: 'dd 6/6/2021 18:45:33' prior: 50869234!
changeHeadingTo: aNewHeading

	head := aNewHeading.
	self notifyHeadingObservers.! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/6/2021 18:45:59'!
notifyPositionObservers

	^ positionObservers do: [ :observer | observer updatePosition: position]! !
!MarsRover methodsFor: 'moving' stamp: 'dd 6/6/2021 18:45:59' prior: 50867236!
changePositionTo: aNewPosition

	position := aNewPosition.
	self notifyPositionObservers.! !

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/6/2021 18:46:21'!
PASSED!

!testRun: #MarsRoverObserverTest #test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:46:21'!
PASSED!
!MarsRoverObserverTest methodsFor: 'test logger - heading' stamp: 'dd 6/6/2021 18:47:32'!
test09ChangesHeadingChangeAreObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: (log at:1).
	
	marsRover process: 'r'.
	self assert: 2 equals: log size.
	self assert: 'Apuntando al Sur' equals: (log at:2).
	
	marsRover process: 'r'.
	self assert: 3 equals: log size.
	self assert: 'Apuntando al Oeste' equals: (log at:3).
	
	marsRover process: 'r'.
	self assert: 4 equals: log size.
	self assert: 'Apuntando al Norte' equals: (log at:4).! !

!methodRemoval: MarsRoverObserverTest #test09MultipleHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:47:32'!
test09MultipleHeadingChangeIsObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: (log at:1).
	
	marsRover process: 'r'.
	self assert: 2 equals: log size.
	self assert: 'Apuntando al Sur' equals: (log at:2).
	
	marsRover process: 'r'.
	self assert: 3 equals: log size.
	self assert: 'Apuntando al Oeste' equals: (log at:3).
	
	marsRover process: 'r'.
	self assert: 4 equals: log size.
	self assert: 'Apuntando al Norte' equals: (log at:4).!
!MarsRoverObserverTest methodsFor: 'test logger - heading' stamp: 'dd 6/6/2021 18:47:51'!
test09AllHeadingChangesAreObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: (log at:1).
	
	marsRover process: 'r'.
	self assert: 2 equals: log size.
	self assert: 'Apuntando al Sur' equals: (log at:2).
	
	marsRover process: 'r'.
	self assert: 3 equals: log size.
	self assert: 'Apuntando al Oeste' equals: (log at:3).
	
	marsRover process: 'r'.
	self assert: 4 equals: log size.
	self assert: 'Apuntando al Norte' equals: (log at:4).! !

!methodRemoval: MarsRoverObserverTest #test09ChangesHeadingChangeAreObservedByALogger stamp: 'dd 6/6/2021 18:47:51'!
test09ChangesHeadingChangeAreObservedByALogger

	| marsRover log |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	marsRover addHeadingObserver: log.
	
	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: (log at:1).
	
	marsRover process: 'r'.
	self assert: 2 equals: log size.
	self assert: 'Apuntando al Sur' equals: (log at:2).
	
	marsRover process: 'r'.
	self assert: 3 equals: log size.
	self assert: 'Apuntando al Oeste' equals: (log at:3).
	
	marsRover process: 'r'.
	self assert: 4 equals: log size.
	self assert: 'Apuntando al Norte' equals: (log at:4).!
!MarsRoverObserverTest methodsFor: 'test window - position' stamp: 'dd 6/6/2021 18:48:35' prior: 50866628!
test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	
	marsRover addPositionObserver: window.
	
	self should: [window position]  
		raise: Error
		withExceptionDo: 	[:error | self assert: MarsRoverWindow positionHasNotBeenUpdatedYet equals: error messageText]
	! !
!MarsRoverObserverTest methodsFor: 'test window - heading' stamp: 'dd 6/6/2021 18:49:03'!
test10AllHeadingChangeAreObservedByAWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	marsRover addHeadingObserver: window.
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Este' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Sur' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Oeste' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Norte' equals: (window heading).! !

!methodRemoval: MarsRoverObserverTest #test10MultipleHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:49:03'!
test10MultipleHeadingChangeIsObservedByAWindow

	| marsRover window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	window := MarsRoverWindow new.
	marsRover addHeadingObserver: window.
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Este' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Sur' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Oeste' equals: (window heading).
	
	marsRover process: 'r'.
	self assert: 'Apuntando al Norte' equals: (window heading).!
!MarsRoverObserverTest methodsFor: 'test multiple observers' stamp: 'dd 6/6/2021 18:54:13'!
test13AMarsRoverCanHaveMultipleHeadingObservers

	| marsRover log window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	
	marsRover addPositionObserver: log.
	marsRover addHeadingObserver: log.
	
	window := MarsRoverWindow new.
	
	marsRover addPositionObserver: window.
	marsRover addHeadingObserver: window.

	marsRover process: 'r'.
	self assert: 1 equals: log size.
	
	self assert: 'Apuntando al Este' equals: log first.
	
	self assert: 'Apuntando al Este' equals: window heading.
	! !
!MarsRoverObserverTest methodsFor: 'test multiple observers' stamp: 'dd 6/6/2021 18:56:23' prior: 50869454!
test13AMarsRoverCanHaveMultipleHeadingObservers

	| marsRover log window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	
	marsRover addPositionObserver: log.
	marsRover addHeadingObserver: log.
	
	window := MarsRoverWindow new.
	
	marsRover addPositionObserver: window.
	marsRover addHeadingObserver: window.

	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: log first.
	self assert: 'Apuntando al Este' equals: window heading.
	
	marsRover process: 'f'.
	self assert: 2 equals: log size.
	self assert: 2@1 equals: (log at: 2).
	self assert: 2@1 equals: window position.
	
	! !

!testRun: #MarsRoverObserverTest #test13AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test01OnePositionChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test02OnePositionChangeIsObservedByWindow stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test03AllPositionChangesAreObservedByLogger stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test04AllPositionChangesAreObservedByWindow stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test05AMarsRoverCanHaveMultiplePositionsObservers stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test06EmptyWindowRaisesErrorPositionHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test07OneHeadingChangeIsObservedByALogger stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test08OneHeadingChangeIsObservedByAWindow stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test09AllHeadingChangesAreObservedByALogger stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test10AllHeadingChangeAreObservedByAWindow stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test11AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test12EmptyWindowRaisesErrorHeadingHasNotBeenUpdatedYet stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverObserverTest #test13AMarsRoverCanHaveMultipleHeadingObservers stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test01 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test02 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test03 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test04 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test05 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test06 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test07 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test08 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test09 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test10 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test11 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test12 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test13 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test14 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test15 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!

!testRun: #MarsRoverTest #test16 stamp: 'dd 6/6/2021 18:56:23'!
PASSED!
!MarsRoverObserverTest methodsFor: 'test multiple observers' stamp: 'dd 6/6/2021 18:57:34'!
test13AMarsRoverObserverCanObserveBothPositionAndHeadingChangesAtTheSameTime

	| marsRover log window |
	
	marsRover := MarsRover at: 1@1 heading: #North.
	
	log := MarsRoverLogger new.
	
	marsRover addPositionObserver: log.
	marsRover addHeadingObserver: log.
	
	window := MarsRoverWindow new.
	
	marsRover addPositionObserver: window.
	marsRover addHeadingObserver: window.

	marsRover process: 'r'.
	self assert: 1 equals: log size.
	self assert: 'Apuntando al Este' equals: log first.
	self assert: 'Apuntando al Este' equals: window heading.
	
	marsRover process: 'f'.
	self assert: 2 equals: log size.
	self assert: 2@1 equals: (log at: 2).
	self assert: 2@1 equals: window position.
	
	! !