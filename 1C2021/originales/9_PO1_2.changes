

----QUIT----(9 March 2021 14:58:42) CuisUniversity-4532.image priorSource: 13044060!

----STARTUP---- (9 March 2021 14:58:43) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4532.image!


----QUIT----(9 March 2021 14:58:43) CuisUniversity-4532.image priorSource: 16885479!

----STARTUP---- (23 May 2021 12:10:39) as D:\Facultad\2021-1C-IS1\CuisUniversity_win64\Portfolio\windows64\CuisUniversity-4532.image!


----End fileIn of D:\Facultad\2021-1C-IS1\RepoNuestro\isw1\17-Portfolio 1\Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GR 5/23/2021 12:11:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GR 5/23/2021 12:11:40'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/23/2021 12:11:40'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GR 5/23/2021 12:11:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GR 5/23/2021 12:11:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GR 5/23/2021 12:11:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GR 5/23/2021 12:11:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/23/2021 12:11:41'!
FAILURE!

----SNAPSHOT----(23 May 2021 12:11:49) CuisUniversity-4532.image priorSource: 16885703!

----STARTUP---- (24 May 2021 16:04:52) as D:\Facultad\2021-1C-IS1\CuisUniversity_win64\Portfolio\windows64\CuisUniversity-4532.image!


!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GR 5/24/2021 16:05:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:05:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:05:01'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GR 5/24/2021 16:05:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GR 5/24/2021 16:05:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GR 5/24/2021 16:05:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GR 5/24/2021 16:05:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:05:01'!
FAILURE!

----STARTUP---- (24 May 2021 16:12:00) as D:\Facultad\2021-1C-IS1\CuisUniversity_win64\Portfolio\windows64\CuisUniversity-4532.image!


!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GR 5/24/2021 16:12:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:12:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:12:19'!
FAILURE!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GR 5/24/2021 16:12:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GR 5/24/2021 16:12:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GR 5/24/2021 16:12:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GR 5/24/2021 16:12:19'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:12:19'!
FAILURE!
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:13:57' prior: 50859546!
balance

	|deposits withdrawals|
	
	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:14:55' prior: 50859662!
balance

	|deposits withdrawals totalDeposits totalWithdrawals|
	
	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	totalDeposits := deposits sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ].
	
	^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:15:11' prior: 50859674!
balance

	|deposits withdrawals totalDeposits totalWithdrawals|
	
	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	totalDeposits := deposits sum: [ :aDeposit | aDeposit value ] ifEmpty: [ 0 ].
	
	^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:15:35' prior: 50859690!
balance

	|deposits withdrawals totalDeposits totalWithdrawals|
	
	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	totalDeposits := deposits sum: [ :aDeposit | aDeposit value ] ifEmpty: [ 0 ].
	
	totalWithdrawals := withdrawals sum: [ :aDeposit | aDeposit value ] ifEmpty: [ 0 ].
	
	^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:15:45' prior: 50859706!
balance

	|deposits withdrawals totalDeposits totalWithdrawals|
	
	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	totalDeposits := deposits sum: [ :aDeposit | aDeposit value ] ifEmpty: [ 0 ].
	
	totalWithdrawals := withdrawals sum: [ :aWithdrawal | aWithdrawal value ] ifEmpty: [ 0 ].
	
	^transactions sum: [ :aTransaction | aTransaction value ] ifEmpty: [ 0 ]! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:16:05' prior: 50859724!
balance

	|deposits withdrawals totalDeposits totalWithdrawals|
	
	deposits := transactions select: [:aTransaction | aTransaction isKindOf: Deposit].
	withdrawals := transactions select: [:aTransaction | aTransaction isKindOf: Withdraw].
	
	totalDeposits := deposits sum: [ :aDeposit | aDeposit value ] ifEmpty: [ 0 ].
	
	totalWithdrawals := withdrawals sum: [ :aWithdrawal | aWithdrawal value ] ifEmpty: [ 0 ].
	
	^totalDeposits - totalWithdrawals.! !

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:16:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GR 5/24/2021 16:16:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:16:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:16:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GR 5/24/2021 16:16:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GR 5/24/2021 16:16:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GR 5/24/2021 16:16:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GR 5/24/2021 16:16:12'!
PASSED!
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:17:59'!
totalOf: aKindOfTransaction
	
	| transactionsOfKind |
	
	transactionsOfKind := transactions select: [:aTransaction | aTransaction isKindOf: aKindOfTransaction ].
	
	^transactionsOfKind sum: [ :aDeposit | aDeposit value ] ifEmpty: [ 0 ].
	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:18:06' prior: 50859790!
totalOf: aKindOfTransaction
	
	| transactionsOfKind |
	
	transactionsOfKind := transactions select: [:aTransaction | aTransaction isKindOf: aKindOfTransaction ].
	
	^transactionsOfKind sum: [ :aTransactionOfKind | aTransactionOfKind value ] ifEmpty: [ 0 ].
	! !
!ReceptiveAccount methodsFor: 'balance' stamp: 'GR 5/24/2021 16:19:07' prior: 50859743!
balance

	|deposits withdrawals|
	
	deposits := self totalOf: Deposit.
	
	withdrawals := self totalOf: Withdraw.
	
	^deposits - withdrawals.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GR 5/24/2021 16:19:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:19:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/24/2021 16:19:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GR 5/24/2021 16:19:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GR 5/24/2021 16:19:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GR 5/24/2021 16:19:43'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GR 5/24/2021 16:19:43'!
PASSED!

TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 16:20:32'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 16:23:17'!
Object subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'no messages' stamp: 'GR 5/24/2021 16:22:59'!
test01

	|portfolio|
	
	portfolio := Portfolio new.
	
	self assert: 0 equals: portfolio balance.
	
! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:24:43'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:24:56'!
balance
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:25:01' prior: 50859873!
balance
	^0.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:25:04'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:25:04'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:25:49'!
test02

	|portfolio account|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	self assert: 100 equals: portfolio balance.
	
! !

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:26:29'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:26:50' prior: 50859886!
test02

	|portfolio account|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:27:03'!
add: aReceptiveAccount 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:27:08' prior: 50859908!
add: aReceptiveAccount ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:27:14' prior: 50859913!
add: anAccount ! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:27:18' prior: 50859917!
add: anAccount 

	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 16:27:48'!
Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:27:46' prior: 50859921!
add: anAccount 

	account := anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:29:29' prior: 50859878!
balance
	
	^account ifNotNil: [account balance] ifNil: [0].! !

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:29:35'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:29:36'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:29:36'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:29:55'!
test03

	|portfolio account account2|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	self assert: 100 equals: portfolio balance.
	
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:29:59' prior: 50859949!
test03

	|portfolio account1 account2|
	
	portfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	
	portfolio add: account1.
	
	self assert: 100 equals: portfolio balance.
	
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:30:28' prior: 50859960!
test03

	|portfolio account1 account2|
	
	portfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	
	portfolio add: account1.
	
	account2 := ReceptiveAccount new.
	
	Deposit register: 200 on: account2. 
	
	portfolio add: account2.
	
	self assert: 300 equals: portfolio balance.
	
! !

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:30:57'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 16:32:46'!
Object subclass: #Portfolio
	instanceVariableNames: 'account account2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:32:45' prior: 50859932!
add: anAccount 

	account ifNil: [account := anAccount.] ifNotNil: [account2 := anAccount ].! !

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:32:56'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:33:39' prior: 50859937!
balance
	
	^(account ifNotNil: [account balance] ifNil: [0]) + (account2 ifNotNil: [account2 balance] ifNil: [0])! !

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:33:41'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:33:41'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:33:41'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:33:41'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:34:10' overrides: 16896425!
initialize

	account := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:34:30' prior: 50859995!
add: anAccount 

	account add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:35:28' prior: 50860004!
balance
	
	^account sum: [:anAccount | anAccount balance] ifEmpty: [0].! !

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:35:34'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:35:34'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:35:34'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:35:34'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:38:28'!
test04

	|portfolio deposit|
	
	portfolio := Portfolio new.
	
	deposit := Deposit for: 100. 
	
	self deny: (portfolio hasRegistered: deposit).
	
! !

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:38:33'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:38:45'!
hasRegistered: aDeposit 
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:38:52' prior: 50860055!
hasRegistered: aDeposit 
	^false.! !

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:38:54'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:38:54'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:38:54'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:38:54'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:38:54'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:39:55'!
test05

	|portfolio account deposit|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: deposit).
	
! !

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:39:56'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:41:57' prior: 50860060!
hasRegistered: aDeposit 
	
	^false.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:42:31' prior: 50860089!
hasRegistered: aDeposit 
	
	^account ifNotEmpty: [true] ifEmpty: [false].! !

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:42:33'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:42:33'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:42:33'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:42:33'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:42:33'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:42:33'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:10' prior: 50860076!
test05

	|portfolio account deposit|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	self deny: (portfolio hasRegistered: deposit).
	
! !

Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 16:43:17'!
Object subclass: #Portfolio
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 16:43:20'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:20' prior: 50860094!
hasRegistered: aDeposit 
	
	^accounts ifNotEmpty: [true] ifEmpty: [false].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:20' prior: 50860020 overrides: 16896425!
initialize

	accounts := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:20' prior: 50860025!
add: anAccount 

	accounts add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:20' prior: 50860030!
balance
	
	^accounts sum: [:anAccount | anAccount balance] ifEmpty: [0].! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:29'!
test06

	|portfolio account deposit|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	self deny: (portfolio hasRegistered: deposit).
	
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:44' prior: 50860165!
test06

	|portfolio account deposit|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit for: 100. 
	
	portfolio add: account.
	
	self deny: (portfolio hasRegistered: deposit).
	
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:52' prior: 50860176!
test06

	|portfolio account deposit|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit for: 100. 
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: deposit).
	
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:43:59' prior: 50860114!
test05

	|portfolio account deposit|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	self assert: (portfolio hasRegistered: deposit).
	
! !

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:44:00'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:44:00'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:44:00'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:44:00'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:44:00'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:44:01'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:44:01'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:44:11' prior: 50860186!
test06

	|portfolio account deposit|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit for: 100. 
	
	portfolio add: account.
	
	self deny: (portfolio hasRegistered: deposit).
	
! !

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:44:13'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:45:24' prior: 50860144!
hasRegistered: aTransaction
	
	^accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ].! !

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:45:27'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:45:27'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:45:27'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:45:27'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:45:27'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:45:27'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:45:27'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:46:29'!
test07

	|portfolio|
	
	portfolio := Portfolio new.
	
	self assert: (portfolio transactions isEmpty).
	
! !

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 16:46:31'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:46:45'!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:46:53' prior: 50860268!
transactions
	^OrderedCollection new.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:46:54'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:46:54'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:46:54'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:46:54'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:46:54'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:46:54'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 16:46:54'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 16:46:57'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:46:57'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:46:57'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:46:57'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:46:57'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:46:58'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:46:58'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 16:46:58'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:47:34'!
test08

	|portfolio account deposit|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	self deny: (portfolio hasRegistered: deposit).
	
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:48:52' prior: 50860312!
test08

	|portfolio account deposit transactions|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	transactions := portfolio transactions.
	
	self assert: 1 equals: transactions size.
	
	self assert: transactions includes: deposit.
! !

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 16:48:54'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:49:40' prior: 50860273!
transactions
	^(accounts at: 1) transactions.! !

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 16:49:42'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:49:42'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:49:42'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:49:42'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:49:43'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:49:43'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:49:43'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 16:49:43'!
ERROR!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 16:49:43'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 16:49:43'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:50:41' prior: 50860339!
transactions
	^accounts ifEmpty: [OrderedCollection new] ifNotEmpty: [(accounts at: 1) transactions].! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:50:44'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:50:44'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:50:44'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:50:44'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:50:44'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:50:44'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 16:50:44'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 16:50:44'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:50:55' prior: 50860323!
test08

	|portfolio account deposit transactions|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	transactions := portfolio transactions.
	
	self assert: 1 equals: transactions size.
	
	self assert: transactions includes: deposit.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:51:14'!
test09

	|portfolio account deposit transactions|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	transactions := portfolio transactions.
	
	self assert: 1 equals: transactions size.
	
	self assert: transactions includes: deposit.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:51:30' prior: 50860405!
test09

	|portfolio account1 deposit transactions|
	
	portfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account1. 
	
	portfolio add: account1.
	
	transactions := portfolio transactions.
	
	self assert: 1 equals: transactions size.
	
	self assert: transactions includes: deposit.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:51:40' prior: 50860419!
test09

	|portfolio account1 deposit1 transactions|
	
	portfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1. 
	
	portfolio add: account1.
	
	transactions := portfolio transactions.
	
	self assert: 1 equals: transactions size.
	
	self assert: transactions includes: deposit1.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:52:36' prior: 50860433!
test09

	|portfolio account1 deposit1 transactions account2 deposit2 |
	
	portfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1. 
	
	portfolio add: account1.
	
	account2 := ReceptiveAccount new.
	
	deposit2 := Deposit register: 100 on: account2. 
	
	portfolio add: account2.
	
	transactions := portfolio transactions.
	
	self assert: 2 equals: transactions size.
	
	self assert: transactions includes: deposit1.
	
	self assert: transactions includes: deposit2.
! !

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 16:52:43'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:54:39' prior: 50860367!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	accounts do: [:anAccount | transactions addAll: anAccount transactions ].
	
	^transactions.! !

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 16:54:42'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:57:18'!
test10

	|portfolio account1 deposit1 transactions account2 deposit2 |
	
	portfolio := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account1. 
	
	portfolio add: account1.
	
	account2 := ReceptiveAccount new.
	
	deposit2 := Deposit register: 100 on: account2. 
	
	portfolio add: account2.
	
	transactions := portfolio transactions.
	
	self assert: 2 equals: transactions size.
	
	self assert: transactions includes: deposit1.
	
	self assert: transactions includes: deposit2.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:57:23' prior: 50860500!
test10

	|portfolio account deposit1 transactions account2 deposit2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit1 := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	account2 := ReceptiveAccount new.
	
	deposit2 := Deposit register: 100 on: account2. 
	
	portfolio add: account2.
	
	transactions := portfolio transactions.
	
	self assert: 2 equals: transactions size.
	
	self assert: transactions includes: deposit1.
	
	self assert: transactions includes: deposit2.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:57:27' prior: 50860520!
test10

	|portfolio account deposit transactions account2 deposit2 |
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio add: account.
	
	account2 := ReceptiveAccount new.
	
	deposit2 := Deposit register: 100 on: account2. 
	
	portfolio add: account2.
	
	transactions := portfolio transactions.
	
	self assert: 2 equals: transactions size.
	
	self assert: transactions includes: deposit.
	
	self assert: transactions includes: deposit2.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 16:57:38' prior: 50860540!
test10

	|portfolio2 account deposit transactions account2 deposit2 |
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	account2 := ReceptiveAccount new.
	
	deposit2 := Deposit register: 100 on: account2. 
	
	portfolio2 add: account2.
	
	transactions := portfolio2 transactions.
	
	self assert: 2 equals: transactions size.
	
	self assert: transactions includes: deposit.
	
	self assert: transactions includes: deposit2.
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:00:39' prior: 50860560!
test10

	|portfolio1 portfolio2 account deposit|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:00:54' prior: 50860580!
test10

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:01:00'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:01:06'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:01:13'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:01:19'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:01:30'!
addPortfolio: aPortfolio 
	self shouldBeImplemented.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 17:01:53'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolio'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:01:51' prior: 50860614!
addPortfolio: aPortfolio 

	portfolio := aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:04:05' prior: 50860160!
balance
	|accountsTotal portfolioTotal|
	
	accountsTotal := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0].
	
	portfolioTotal := portfolio ifNotNil: [portfolio balance] ifNil: [0].
	
	^portfolioTotal + accountsTotal .! !

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:04:06'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:04:07'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:04:16'!
test11

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:04:20' prior: 50860668!
test11

	|portfolio1 portfolio2 account1 |
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	
	portfolio2 add: account1.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:04:57' prior: 50860681!
test11

	|portfolio1 portfolio2 portfolio3 account1 account2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	
	portfolio2 add: account1.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:06:31' prior: 50860694!
test11

	|portfolio1 portfolio2 portfolio3 account1 account2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	
	portfolio1 add: account1.
	
	account2 := ReceptiveAccount new.
	
	Deposit register: 100 on: account2. 
	
	portfolio2 add: account2.
	
	portfolio3 addPortfolio: portfolio1 .
	
	portfolio3 addPortfolio: portfolio2.
	
	self assert: 300 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:06:44' prior: 50860708!
test11

	|portfolio1 portfolio2 portfolio3 account1 account2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	
	portfolio1 add: account1.
	
	account2 := ReceptiveAccount new.
	
	Deposit register: 200 on: account2. 
	
	portfolio2 add: account2.
	
	portfolio3 addPortfolio: portfolio1 .
	
	portfolio3 addPortfolio: portfolio2.
	
	self assert: 300 equals: portfolio3 balance.! !

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:06:45'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:07:15' prior: 50860627!
addPortfolio: aPortfolio 

	portfolio add: aPortfolio.! !

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:07:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:07:19'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:07:19'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:07:19'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:07:19'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:07:19'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:07:19'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:07:19'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:07:19'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:07:36' prior: 50860150 overrides: 16896425!
initialize

	accounts := OrderedCollection new.
	
	portfolio := OrderedCollection new.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 17:07:46'!
Object subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:07:46' prior: 50860632!
balance
	|accountsTotal portfolioTotal|
	
	accountsTotal := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0].
	
	portfolioTotal := portfolios ifNotNil: [portfolios balance] ifNil: [0].
	
	^portfolioTotal + accountsTotal .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:07:46' prior: 50860782 overrides: 16896425!
initialize

	accounts := OrderedCollection new.
	
	portfolios := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:07:46' prior: 50860748!
addPortfolio: aPortfolio 

	portfolios add: aPortfolio.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:08:17' prior: 50860796!
balance
	|accountsTotal portfolioTotal|
	
	accountsTotal := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0].
	
	portfolioTotal := portfolios sum: [:anAccount | anAccount balance] ifEmpty: [0].
	
	^portfolioTotal + accountsTotal .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:08:24' prior: 50860818!
balance
	|accountsTotal portfolioTotal|
	
	accountsTotal := accounts sum: [:anAccount | anAccount balance] ifEmpty: [0].
	
	portfolioTotal := portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0].
	
	^portfolioTotal + accountsTotal .! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:08:34'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:08:35'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:08:35'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:08:35'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:08:35'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:08:35'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:09:34'!
test12

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:09:37' prior: 50860865!
test12

	|portfolio1 portfolio2 account deposit|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:09:44' prior: 50860878!
test12

	|portfolio1 portfolio2 account deposit|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:10:54' prior: 50860891!
test12

	|portfolio1 portfolio2 account deposit|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 hasRegistered: deposit).! !

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:11:03'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:11:41' prior: 50860236!
hasRegistered: aTransaction
	
	^(accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ]) and: true.! !

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:11:51'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:13:44' prior: 50860920!
hasRegistered: aTransaction

	|accountsHasRegistered portfoliosHasRegistered|
	
	accountsHasRegistered := accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ].
	
	portfoliosHasRegistered := portfolios anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:13:58' prior: 50860930!
hasRegistered: aTransaction

	|accountsHasRegistered portfoliosHasRegistered|
	
	accountsHasRegistered := accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ].
	
	portfoliosHasRegistered := portfolios anySatisfy: [:aPortfolio | aPortfolio hasRegistered: aTransaction ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:14:16' prior: 50860943!
hasRegistered: aTransaction

	|accountsHasRegistered portfoliosHasRegistered|
	
	accountsHasRegistered := accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ].
	
	portfoliosHasRegistered := portfolios anySatisfy: [:aPortfolio | aPortfolio hasRegistered: aTransaction ].
	
	^portfoliosHasRegistered and: accountsHasRegistered.! !

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:14:22'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:16:03' prior: 50860956!
hasRegistered: aTransaction

	|accountsHasRegistered portfoliosHasRegistered|
	
	accountsHasRegistered := accounts anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ].
	
	portfoliosHasRegistered := portfolios anySatisfy: [:aPortfolio | aPortfolio hasRegistered: aTransaction ].
	
	^portfoliosHasRegistered or: accountsHasRegistered.! !

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:16:05'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:16:05'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:16:05'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:16:05'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:16:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:16:06'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:16:06'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:16:06'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:16:06'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:16:06'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:16:06'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:16:06'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:16:06'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:16:18'!
test13

	|portfolio1 portfolio2 account deposit|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	self assert: (portfolio1 hasRegistered: deposit).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:17:18' prior: 50861017!
test13

	|portfolio1 portfolio2 account deposit transactions|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 addPortfolio: portfolio2.
	
	transactions := portfolio1 transactions.
	
	self assert: 1 equals: transactions size.
	
	self assert: (transactions includes: deposit ).! !

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:17:20'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:18:03' prior: 50860469!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	accounts do: [:anAccount | transactions addAll: anAccount transactions ].
	portfolios do: [:aPortfolio | transactions addAll: aPortfolio transactions ].
	
	^transactions.! !

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:18:05'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:18:06'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:18:06'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:18:06'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:18:06'!
PASSED!

Object subclass: #FinancialAsset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 17:19:58'!
Object subclass: #FinancialAsset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 17:20:17'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'accounts portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 17:20:25'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialAsset methodsFor: 'no messages' stamp: 'GR 5/24/2021 17:20:45'!
balance

	^self subclassResponsibility ! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:20:51'!
transactions

	^self subclassResponsibility ! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:21:01'!
hasRegistered: aTransaction

	^self subclassResponsibility ! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 17:22:01'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets portfolios'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:22:01' prior: 50861050 overrides: 50861135!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	assets do: [:anAccount | transactions addAll: anAccount transactions ].
	portfolios do: [:aPortfolio | transactions addAll: aPortfolio transactions ].
	
	^transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:22:01' prior: 50860807 overrides: 16896425!
initialize

	assets := OrderedCollection new.
	
	portfolios := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:22:01' prior: 50860973 overrides: 50861140!
hasRegistered: aTransaction

	|accountsHasRegistered portfoliosHasRegistered|
	
	accountsHasRegistered := assets anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ].
	
	portfoliosHasRegistered := portfolios anySatisfy: [:aPortfolio | aPortfolio hasRegistered: aTransaction ].
	
	^portfoliosHasRegistered or: accountsHasRegistered.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:22:01' prior: 50860829 overrides: 50861131!
balance
	|accountsTotal portfolioTotal|
	
	accountsTotal := assets sum: [:anAccount | anAccount balance] ifEmpty: [0].
	
	portfolioTotal := portfolios sum: [:aPortfolio | aPortfolio balance] ifEmpty: [0].
	
	^portfolioTotal + accountsTotal .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:22:01' prior: 50860155!
add: anAccount 

	assets add: anAccount.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:22:38' prior: 50861199!
add: anAsset 

	assets add: anAsset.! !

!methodRemoval: Portfolio #addPortfolio: stamp: 'GR 5/24/2021 17:22:47'!
addPortfolio: aPortfolio 

	portfolios add: aPortfolio.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:22:59' prior: 50860593!
test10

	|portfolio1 portfolio2 account |
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	self assert: 100 equals: portfolio1 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:13' prior: 50860727!
test11

	|portfolio1 portfolio2 portfolio3 account1 account2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account1 := ReceptiveAccount new.
	
	Deposit register: 100 on: account1. 
	
	portfolio1 add: account1.
	
	account2 := ReceptiveAccount new.
	
	Deposit register: 200 on: account2. 
	
	portfolio2 add: account2.
	
	portfolio3 add: portfolio1 .
	
	portfolio3 add: portfolio2.
	
	self assert: 300 equals: portfolio3 balance.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:21' prior: 50860904!
test12

	|portfolio1 portfolio2 account deposit|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	self assert: (portfolio1 hasRegistered: deposit).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:26' prior: 50861031!
test13

	|portfolio1 portfolio2 account deposit transactions|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	deposit := Deposit register: 100 on: account. 
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	transactions := portfolio1 transactions.
	
	self assert: 1 equals: transactions size.
	
	self assert: (transactions includes: deposit ).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:44' prior: 50861166 overrides: 16896425!
initialize

	assets := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:52' prior: 50861154 overrides: 50861135!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	assets do: [:anAsset | transactions addAll: anAsset transactions ].
	portfolios do: [:aPortfolio | transactions addAll: aPortfolio transactions ].
	
	^transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:58' prior: 50861281 overrides: 50861135!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	assets do: [:anAsset | transactions addAll: anAsset transactions ].
	
	^transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:24:22' prior: 50861173 overrides: 50861140!
hasRegistered: aTransaction

	^assets anySatisfy: [:anAccount | anAccount hasRegistered: aTransaction ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:24:27' prior: 50861302 overrides: 50861140!
hasRegistered: aTransaction

	^assets anySatisfy: [:anAsset | anAsset hasRegistered: aTransaction ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:24:48' prior: 50861188 overrides: 50861131!
balance
	
	
	^assets sum: [:anAccount | anAccount balance] ifEmpty: [0].
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:24:54' prior: 50861316 overrides: 50861131!
balance
	
	
	^assets sum: [:anAsset | anAsset balance] ifEmpty: [0].
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:25:06' prior: 50861323 overrides: 50861131!
balance
	
	^assets sum: [:anAsset | anAsset balance] ifEmpty: [0].
	
	! !

FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/24/2021 17:25:16'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:25:21'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:25:22'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:25:22'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:25:22'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:27:44'!
test14

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:28:03' prior: 50861377!
test14

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	portfolio1 add: account.
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:31:57' prior: 50861387!
test14

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio accountBelongsToChildPorfolioErrorDescription]
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:32:13' prior: 50861398!
test14

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio accountBelongsToChildPorfolioErrorDescription.
		]
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:32:15' prior: 50861414!
test14

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio accountBelongsToChildPorfolioErrorDescription.
		].
	
	
	! !
!Portfolio class methodsFor: 'no messages' stamp: 'GR 5/24/2021 17:33:54'!
accountAlreadyInPortfolio

	^'Account already belongs to portfolio'! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:34:04' prior: 50861430!
test14

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio accountAlreadyInPortfolio.
		].
	
	
	! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:34:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:34:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:34:31'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:34:31'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:34:31'!
FAILURE!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:36:22' prior: 50861452!
test14

	|portfolio1 account|
	
	portfolio1 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio accountAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:36:31' prior: 50861502!
test14

	|portfolio account|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio accountAlreadyInPortfolio.
		].
	
	
	! !

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:36:44'!
FAILURE!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:39:27' prior: 50861446!
accountAlreadyInPortfolio

	^'Asset already belongs to portfolio'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:39:48'!
assetAlreadyInPortfolio

	^'Asset already belongs to portfolio'! !

!methodRemoval: Portfolio class #accountAlreadyInPortfolio stamp: 'GR 5/24/2021 17:39:48'!
accountAlreadyInPortfolio

	^'Asset already belongs to portfolio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:40:10' prior: 50861515!
test14

	|portfolio account|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:40:26' prior: 50861204!
add: anAsset 

	(assets includes: anAsset) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAsset.! !

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:40:30'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:40:31'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:31'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:34'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:35'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:40:36'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:40:36'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:36'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:40:37'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:38'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:40:40'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:41'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:42'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:42'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:40:49'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:40:50'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:40:50'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:41:17'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:41:17'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:41:17'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:41:17'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:41:17'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:41:17'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:41:17'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:41:17'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:41:18'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:41:18'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:41:18'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:41:18'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:41:18'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:41:18'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:41:30' prior: 50861547!
test14

	|portfolio account|
	
	portfolio := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio add: account.
	
	self 
		should: [portfolio add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:41:35' prior: 50861810!
test14

	|portfolio1 account|
	
	portfolio1 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:41:43' prior: 50861823!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:42:18' prior: 50861836!
test14

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:42:40' prior: 50861849!
test14

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:42:53' prior: 50861864!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:43:01'!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 17:43:13'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:46:44' prior: 50861560!
add: anAsset 

	|canInclude|
	
	canInclude := true.

	(assets includes: anAsset) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:46:53' prior: 50861911!
add: anAsset 

	|canAdd|
	
	canAdd := true.

	(assets includes: anAsset) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:47:25' prior: 50861920!
add: anAsset 

	|canAdd|
	
	canAdd := assets includes: anAsset.

	(canAdd) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:48:20' prior: 50861928!
add: anAsset 

	|canAdd|
	
	canAdd := assets includes: anAsset.
	
	assets do: [].

	(canAdd) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:48:34' prior: 50861936!
add: anAsset 

	|assetAlreadyInPortfolio|
	
	assetAlreadyInPortfolio := assets includes: anAsset.
	
	assets do: [].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:51:32' prior: 50861945!
add: anAsset 

	|assetAlreadyInPortfolio|
	
	assetAlreadyInPortfolio := assets includes: anAsset.
	
	assetAlreadyInPortfolio := assetAlreadyInPortfolio and: [assets anySatisfy: [:myAsset]].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:51:37' prior: 50861956!
add: anAssetToAdd 

	|assetAlreadyInPortfolio|
	
	assetAlreadyInPortfolio := assets includes: anAssetToAdd.
	
	assetAlreadyInPortfolio := assetAlreadyInPortfolio and: [assets anySatisfy: [:myAsset]].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:52:05' prior: 50861969!
add: anAssetToAdd 

	|assetAlreadyInPortfolio|
	
	assetAlreadyInPortfolio := assets includes: anAssetToAdd.
	
	assetAlreadyInPortfolio := assetAlreadyInPortfolio and: [assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ]].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 17:52:08'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 17:52:13'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:53:48'!
hasAsset: anAsset

	^assets anySatisfy: [:myAsset | myAsset == anAsset].! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:54:14'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:54:15'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:54:15'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 17:54:15'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:54:19'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:54:43'!
FAILURE!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:55:14'!
FAILURE!
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/24/2021 17:56:30'!
hasAsset: anAsset

! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/24/2021 17:56:44' prior: 50862048!
hasAsset: anAsset

	^self == anAsset.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:57:02'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:57:02'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:57:02'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:57:03'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 17:57:03'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 17:57:03'!
FAILURE!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 17:58:45'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 17:58:46'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 17:58:46'!
FAILURE!

self at: 1!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:01:43' prior: 50861982!
add: anAssetToAdd 

	|assetAlreadyInPortfolio|
	
	assetAlreadyInPortfolio := assets includes: anAssetToAdd.
	
	assetAlreadyInPortfolio := assetAlreadyInPortfolio and: (assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ]).

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAssetToAdd.! !

 myAsset == anAsset!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:02:47' prior: 50862131!
add: anAssetToAdd 

	|assetAlreadyInPortfolio|
	
	assetAlreadyInPortfolio := assets includes: anAssetToAdd.
	
	assetAlreadyInPortfolio := assetAlreadyInPortfolio or: (assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ]).

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 18:02:48'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 18:02:52'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 18:02:53'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:03:18' prior: 50862146!
add: anAssetToAdd 

	|assetAlreadyInPortfolio|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 18:03:20'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:03:35'!
test16

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:04:50' prior: 50862243!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:05:08' prior: 50862259!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !

!testRun: #PortfolioTest #test16 stamp: 'GR 5/24/2021 18:05:15'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:05:55' prior: 50862001!
hasAsset: anAsset

	^assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].! !

!testRun: #PortfolioTest #test16 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 18:05:56'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 18:05:57'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 18:05:57'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 18:05:57'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 18:05:57'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 18:05:57'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/24/2021 18:05:57'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 18:06:18'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 18:06:19'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 18:06:19'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 18:06:19'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 18:06:19'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 18:06:19'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/24/2021 18:06:19'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:07:18'!
test17

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:07:41' prior: 50862380!
test17

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:08:00'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'! !

!testRun: #PortfolioTest #test17 stamp: 'GR 5/24/2021 18:08:14'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:09:10' prior: 50862197!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:10:44' prior: 50862419!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: anAssetToAdd ].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon ) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test17 stamp: 'GR 5/24/2021 18:10:45'!
FAILURE!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/24/2021 18:10:51'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 18:11:17' prior: 50862431!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon ) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test17 stamp: 'GR 5/24/2021 18:11:18'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/24/2021 18:11:18'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/24/2021 18:11:18'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/24/2021 18:11:18'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/24/2021 18:11:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/24/2021 18:11:19'!
PASSED!

----SNAPSHOT----(24 May 2021 18:23:24) CuisUniversity-4532.image priorSource: 16894036!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 02:38:32'!
test18

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 02:41:40' prior: 50862516!
test18

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
		
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio1]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 02:41:51' prior: 50862532!
test18

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
		
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 02:41:53'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 02:42:27'!
FAILURE!

----SNAPSHOT----(25 May 2021 02:44:06) CuisUniversity-4532.image priorSource: 16987586!

----STARTUP---- (25 May 2021 18:55:10) as D:\Facultad\2021-1C-IS1\CuisUniversity_win64\Portfolio\windows64\CuisUniversity-4532.image!


!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:10:03'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:15:31' prior: 50862454!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon ) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:31:32'!
assets

	^assets! !

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:31:42'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:37:10' prior: 50862582!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ].


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:37:11'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 19:37:11'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 19:37:11'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:37:11'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 19:37:11'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 19:37:11'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 19:37:11'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 19:37:11'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 19:37:11'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 19:37:12'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 19:37:12'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 19:37:12'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 19:37:12'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 19:37:12'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 19:37:12'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 19:37:12'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 19:37:12'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 19:37:12'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:37:12'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:38:00' prior: 50862605!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	"grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ]."


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 19:38:05'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 19:38:06'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 19:38:06'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 19:38:06'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:38:06'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:38:06'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:38:12' prior: 50862673!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ].


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 19:38:13'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 19:38:13'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:38:13'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 19:38:13'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 19:38:13'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 19:38:14'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 19:38:14'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 19:38:14'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:38:14'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:38:48'!
ERROR!
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:39:22'!
assets

	^self.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 19:39:33'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 19:39:33'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:39:33'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 19:39:33'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 19:39:33'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 19:39:33'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 19:39:33'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 19:39:33'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 19:39:33'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 19:39:34'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 19:39:34'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 19:39:34'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 19:39:34'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 19:39:34'!
FAILURE!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 19:39:34'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 19:39:34'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 19:39:34'!
FAILURE!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:39:34'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:39:38'!
ERROR!
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:40:46' prior: 50862807!
assets

	^OrderedCollection with: self.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'GR 5/25/2021 19:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'GR 5/25/2021 19:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'GR 5/25/2021 19:40:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'GR 5/25/2021 19:40:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'GR 5/25/2021 19:40:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'GR 5/25/2021 19:40:49'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'GR 5/25/2021 19:40:49'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 19:41:01'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 19:41:02'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:41:02'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:44:03'!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAsset hasAsset: mySonsAssets ] ].


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:45:24' prior: 50862927!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAsset: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:48:07' prior: 50862944!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:51:38' prior: 50862957!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommon grandchildrenInCommon|
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:52:42' prior: 50862970!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets|
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets 
	
	


! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:53:00'!
hasAssetInCommonWith: anAsset

	^self == anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:54:57' prior: 50862740!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := self hasAssetsInCommonWith: anAssetToAdd .


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:55:13'!
hasAssetsInCommonWith: anAsset

	^self == anAsset.! !

!methodRemoval: ReceptiveAccount #hasAssetInCommonWith: stamp: 'GR 5/25/2021 19:55:13'!
hasAssetInCommonWith: anAsset

	^self == anAsset.!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 19:55:23'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 19:55:24'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:55:24'!
PASSED!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:55:44'!
hasAssetsInCommonWith: anAsset


	^self subclassResponsibility ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:57:43'!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 19:57:44'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:59:46' prior: 50862296!
hasAsset: anAsset

	|isSelf isChild|
	
	isSelf := anAsset == self.
	
	isChild := assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].
	
	^isSelf or: isChild.! !

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 19:59:50'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 19:59:50'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 19:59:50'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 19:59:50'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 19:59:50'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 19:59:51'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:02:18'!
test20

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 20:02:22'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:03:10' prior: 50862984 overrides: 50863077!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets isSelf|
	
	isSelf := anAsset == self.
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets or: isSelf
	
	


! !

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 20:03:12'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 20:03:13'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:05:34' prior: 50863005!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:05:57' prior: 50861880!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:08' prior: 50861893!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:17' prior: 50862276!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:33' prior: 50863082!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 20:06:42'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 20:06:42'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 20:06:42'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 20:06:42'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 20:06:42'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 20:06:42'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 20:06:43'!
PASSED!

!methodRemoval: Portfolio #hasAsset: stamp: 'GR 5/25/2021 20:06:53'!
hasAsset: anAsset

	|isSelf isChild|
	
	isSelf := anAsset == self.
	
	isChild := assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].
	
	^isSelf or: isChild.!

!methodRemoval: ReceptiveAccount #hasAsset: stamp: 'GR 5/25/2021 20:07:07'!
hasAsset: anAsset

	^self == anAsset.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:11:56'!
test21

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:13:32' prior: 50863368!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!methodRemoval: Portfolio #assets stamp: 'GR 5/25/2021 20:14:23'!
assets

	^assets!

!methodRemoval: ReceptiveAccount #assets stamp: 'GR 5/25/2021 20:14:29'!
assets

	^OrderedCollection with: self.!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:17:58'!
ownerHasAssetsInCommonErrorDescription

	^'Owner Has Assets In Common'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:18:19'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:18:19' prior: 50863240!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.! !

!methodRemoval: Portfolio class #assetHasAssetsInCommon stamp: 'GR 5/25/2021 20:18:19'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'!

!methodRemoval: Portfolio class #assetAlreadyInPortfolio stamp: 'GR 5/25/2021 20:18:30'!
assetAlreadyInPortfolio

	^'Asset already belongs to portfolio'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:12'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:12' prior: 50863419!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!methodRemoval: Portfolio class #assetHasAssetsInCommonErrorDescription stamp: 'GR 5/25/2021 20:19:12'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:35'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50863444!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50862396!
test17

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50863386!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50863261!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50863277!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50863152!
test20

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50862550!
test18

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
		
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50863248!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50863295!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!methodRemoval: Portfolio class #assetHasAssetsInCommon stamp: 'GR 5/25/2021 20:19:36'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:59' prior: 50863490!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:20:06'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:20:34'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 20:20:53'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 20:20:53'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 20:20:53'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 20:20:53'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 20:20:54'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:20:55'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:20:55'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:21:26'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:22:25'!
ERROR!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 20:23:08'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 20:23:08'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 20:23:08'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 20:23:08'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 20:23:08'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 20:23:08'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 20:23:08'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 20:23:08'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 20:23:09'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:23:09'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:23:09'!
ERROR!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:23:50' prior: 50863610!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:23:51'!
FAILURE!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:30:52'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:30:49' prior: 50863465!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.! !

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:30:59'!
FAILURE!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:31:09'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:31:16'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:31:55' prior: 50863763!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:32:00'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:37'!
setOwnerTo: anOwner

	owner := self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:50' prior: 50863797!
setOwnerTo: anOwner

	owner := anOwner .! !

FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:33:05'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'nil' stamp: 'GR 5/25/2021 20:33:45'!
setOwnerTo: anOwner

	owner := anOwner.! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:34:03'!
setOwnerTo: anOwner

	^self subclassResponsibility ! !

FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:34:27'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:34:32'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #FinancialAsset
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:34:39'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:34:54' prior: 50863824!
setOwnerTo: anOwner

	owner := anOwner .! !

!methodRemoval: Portfolio #add: stamp: 'GR 5/25/2021 20:35:00'!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.!

!methodRemoval: Portfolio #balance stamp: 'GR 5/25/2021 20:35:00'!
balance
	
	^assets sum: [:anAsset | anAsset balance] ifEmpty: [0].
	
	!

!methodRemoval: Portfolio #hasAssetsInCommonWith: stamp: 'GR 5/25/2021 20:35:00'!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets isSelf|
	
	isSelf := anAsset == self.
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets or: isSelf
	
	


!

!methodRemoval: Portfolio #hasRegistered: stamp: 'GR 5/25/2021 20:35:00'!
hasRegistered: aTransaction

	^assets anySatisfy: [:anAsset | anAsset hasRegistered: aTransaction ].!

!methodRemoval: Portfolio #initialize stamp: 'GR 5/25/2021 20:35:00'!
initialize

	assets := OrderedCollection new.!

!methodRemoval: Portfolio #setOwnerTo: stamp: 'GR 5/25/2021 20:35:00'!
setOwnerTo: anOwner

	owner := anOwner .!

!methodRemoval: Portfolio #transactions stamp: 'GR 5/25/2021 20:35:00'!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	assets do: [:anAsset | transactions addAll: anAsset transactions ].
	
	^transactions.!

!methodRemoval: ReceptiveAccount #setOwnerTo: stamp: 'GR 5/25/2021 20:35:11'!
setOwnerTo: anOwner

	owner := anOwner.!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:35:22'!
ERROR!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:35:55'!
ERROR!
!Portfolio methodsFor: 'no messages' stamp: 'GR 5/25/2021 20:37:30'!
add: anAsset! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:58' overrides: 50861135!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	assets do: [:anAsset | transactions addAll: anAsset transactions ].
	
	^transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:50' overrides: 50863867!
setOwnerTo: anOwner

	owner := anOwner .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:44' overrides: 16896425!
initialize

	assets := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:24:27' overrides: 50861140!
hasRegistered: aTransaction

	^assets anySatisfy: [:anAsset | anAsset hasRegistered: aTransaction ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:03:10' overrides: 50863077!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets isSelf|
	
	isSelf := anAsset == self.
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets or: isSelf
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:25:06' overrides: 50861131!
balance
	
	^assets sum: [:anAsset | anAsset balance] ifEmpty: [0].
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:44:41' prior: 50863933!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !

----STARTUP---- (25 May 2021 20:48:53) as D:\Facultad\2021-1C-IS1\CuisUniversity_win64\Portfolio - Copy\windows64\CuisUniversity-4532.image!

!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:15:31' prior: 50862454!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon ) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:31:32'!
assets

	^assets! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:37:10' prior: 50864005!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ].


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:38:00' prior: 50864026!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	"grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ]."


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:38:12' prior: 50864050!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ].


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:39:22'!
assets

	^self.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:40:46' prior: 50864096!
assets

	^OrderedCollection with: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:44:03'!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAsset hasAsset: mySonsAssets ] ].


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:45:24' prior: 50864104!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAsset: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:48:07' prior: 50864121!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:51:38' prior: 50864134!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommon grandchildrenInCommon|
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:52:42' prior: 50864147!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets|
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets 
	
	


! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:53:00'!
hasAssetInCommonWith: anAsset

	^self == anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:54:57' prior: 50864073!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := self hasAssetsInCommonWith: anAssetToAdd .


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:55:13'!
hasAssetsInCommonWith: anAsset

	^self == anAsset.! !

!methodRemoval: ReceptiveAccount #hasAssetInCommonWith: stamp: 'GR 5/25/2021 20:49:15'!
hasAssetInCommonWith: anAsset

	^self == anAsset.!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:55:44'!
hasAssetsInCommonWith: anAsset


	^self subclassResponsibility ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:57:43'!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:59:46' prior: 50862296!
hasAsset: anAsset

	|isSelf isChild|
	
	isSelf := anAsset == self.
	
	isChild := assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].
	
	^isSelf or: isChild.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:02:18'!
test20

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:03:10' prior: 50864161 overrides: 50864212!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets isSelf|
	
	isSelf := anAsset == self.
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets or: isSelf
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:05:34' prior: 50864182!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:05:57' prior: 50861880!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:08' prior: 50861893!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:17' prior: 50862276!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:33' prior: 50864217!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!methodRemoval: Portfolio #hasAsset: stamp: 'GR 5/25/2021 20:49:16'!
hasAsset: anAsset

	|isSelf isChild|
	
	isSelf := anAsset == self.
	
	isChild := assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].
	
	^isSelf or: isChild.!

!methodRemoval: ReceptiveAccount #hasAsset: stamp: 'GR 5/25/2021 20:49:16'!
hasAsset: anAsset

	^self == anAsset.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:11:56'!
test21

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:13:32' prior: 50864354!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!methodRemoval: Portfolio #assets stamp: 'GR 5/25/2021 20:49:16'!
assets

	^assets!

!methodRemoval: ReceptiveAccount #assets stamp: 'GR 5/25/2021 20:49:16'!
assets

	^OrderedCollection with: self.!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:17:58'!
ownerHasAssetsInCommonErrorDescription

	^'Owner Has Assets In Common'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:18:19'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:18:19' prior: 50864275!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.! !

!methodRemoval: Portfolio class #assetHasAssetsInCommon stamp: 'GR 5/25/2021 20:49:17'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'!

!methodRemoval: Portfolio class #assetAlreadyInPortfolio stamp: 'GR 5/25/2021 20:49:17'!
assetAlreadyInPortfolio

	^'Asset already belongs to portfolio'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:12'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:12' prior: 50864405!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!methodRemoval: Portfolio class #assetHasAssetsInCommonErrorDescription stamp: 'GR 5/25/2021 20:49:17'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:35'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50864430!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50862396!
test17

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50864372!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50864296!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50864312!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50864238!
test20

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50862550!
test18

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
		
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50864283!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50864330!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!methodRemoval: Portfolio class #assetHasAssetsInCommon stamp: 'GR 5/25/2021 20:49:17'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:59' prior: 50864476!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:23:50' prior: 50864596!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:18'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:30:49' prior: 50864451!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:31:55' prior: 50864636!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:37'!
setOwnerTo: anOwner

	owner := self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:50' prior: 50864662!
setOwnerTo: anOwner

	owner := anOwner .! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:18'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:18'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'nil' stamp: 'GR 5/25/2021 20:33:45'!
setOwnerTo: anOwner

	owner := anOwner.! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:34:03'!
setOwnerTo: anOwner

	^self subclassResponsibility ! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:19'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:19'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:19'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:19'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:19'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:49:19'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:34:54' prior: 50864692!
setOwnerTo: anOwner

	owner := anOwner .! !



----STARTUP---- (25 May 2021 20:52:36) as D:\Facultad\2021-1C-IS1\CuisUniversity_win64\Portfolio - Copy\windows64\CuisUniversity-4532.image!

!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:15:31' prior: 50862454!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon ) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:31:32'!
assets

	^assets! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:37:10' prior: 50864753!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ].


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:38:00' prior: 50864774!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	"grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ]."


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:38:12' prior: 50864798!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ].


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:39:22'!
assets

	^self.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:40:46' prior: 50864844!
assets

	^OrderedCollection with: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:44:03'!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAsset hasAsset: mySonsAssets ] ].


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:45:24' prior: 50864852!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAsset: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:48:07' prior: 50864869!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:51:38' prior: 50864882!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommon grandchildrenInCommon|
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:52:42' prior: 50864895!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets|
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets 
	
	


! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:53:00'!
hasAssetInCommonWith: anAsset

	^self == anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:54:57' prior: 50864821!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := self hasAssetsInCommonWith: anAssetToAdd .


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:55:13'!
hasAssetsInCommonWith: anAsset

	^self == anAsset.! !

!methodRemoval: ReceptiveAccount #hasAssetInCommonWith: stamp: 'GR 5/25/2021 20:52:48'!
hasAssetInCommonWith: anAsset

	^self == anAsset.!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:55:44'!
hasAssetsInCommonWith: anAsset


	^self subclassResponsibility ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:57:43'!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:59:46' prior: 50862296!
hasAsset: anAsset

	|isSelf isChild|
	
	isSelf := anAsset == self.
	
	isChild := assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].
	
	^isSelf or: isChild.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:02:18'!
test20

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:03:10' prior: 50864909 overrides: 50864960!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets isSelf|
	
	isSelf := anAsset == self.
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets or: isSelf
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:05:34' prior: 50864930!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:05:57' prior: 50861880!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:08' prior: 50861893!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:17' prior: 50862276!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:33' prior: 50864965!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!methodRemoval: Portfolio #hasAsset: stamp: 'GR 5/25/2021 20:52:49'!
hasAsset: anAsset

	|isSelf isChild|
	
	isSelf := anAsset == self.
	
	isChild := assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].
	
	^isSelf or: isChild.!

!methodRemoval: ReceptiveAccount #hasAsset: stamp: 'GR 5/25/2021 20:52:49'!
hasAsset: anAsset

	^self == anAsset.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:11:56'!
test21

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:13:32' prior: 50865102!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!methodRemoval: Portfolio #assets stamp: 'GR 5/25/2021 20:52:49'!
assets

	^assets!

!methodRemoval: ReceptiveAccount #assets stamp: 'GR 5/25/2021 20:52:49'!
assets

	^OrderedCollection with: self.!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:17:58'!
ownerHasAssetsInCommonErrorDescription

	^'Owner Has Assets In Common'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:18:19'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:18:19' prior: 50865023!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.! !

!methodRemoval: Portfolio class #assetHasAssetsInCommon stamp: 'GR 5/25/2021 20:52:50'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'!

!methodRemoval: Portfolio class #assetAlreadyInPortfolio stamp: 'GR 5/25/2021 20:52:50'!
assetAlreadyInPortfolio

	^'Asset already belongs to portfolio'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:12'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:12' prior: 50865153!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!methodRemoval: Portfolio class #assetHasAssetsInCommonErrorDescription stamp: 'GR 5/25/2021 20:52:50'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:35'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865178!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50862396!
test17

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865120!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865044!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865060!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50864986!
test20

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50862550!
test18

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
		
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865031!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865078!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!methodRemoval: Portfolio class #assetHasAssetsInCommon stamp: 'GR 5/25/2021 20:52:51'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:59' prior: 50865224!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:23:50' prior: 50865344!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:51'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:30:49' prior: 50865199!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:31:55' prior: 50865384!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:37'!
setOwnerTo: anOwner

	owner := self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:50' prior: 50865410!
setOwnerTo: anOwner

	owner := anOwner .! !

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:52'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:52'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccount methodsFor: 'nil' stamp: 'GR 5/25/2021 20:33:45'!
setOwnerTo: anOwner

	owner := anOwner.! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:34:03'!
setOwnerTo: anOwner

	^self subclassResponsibility ! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:52'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:52'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:52'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:52'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:53'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:53'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:34:54' prior: 50865440!
setOwnerTo: anOwner

	owner := anOwner .! !

!methodRemoval: Portfolio #add: stamp: 'GR 5/25/2021 20:52:53'!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.!

!methodRemoval: Portfolio #balance stamp: 'GR 5/25/2021 20:52:53'!
balance
	
	^assets sum: [:anAsset | anAsset balance] ifEmpty: [0].
	
	!

!methodRemoval: Portfolio #hasAssetsInCommonWith: stamp: 'GR 5/25/2021 20:52:53'!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets isSelf|
	
	isSelf := anAsset == self.
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets or: isSelf
	
	


!

!methodRemoval: Portfolio #hasRegistered: stamp: 'GR 5/25/2021 20:52:53'!
hasRegistered: aTransaction

	^assets anySatisfy: [:anAsset | anAsset hasRegistered: aTransaction ].!

!methodRemoval: Portfolio #initialize stamp: 'GR 5/25/2021 20:52:53'!
initialize

	assets := OrderedCollection new.!

!methodRemoval: Portfolio #setOwnerTo: stamp: 'GR 5/25/2021 20:52:53'!
setOwnerTo: anOwner

	owner := anOwner .!

!methodRemoval: Portfolio #transactions stamp: 'GR 5/25/2021 20:52:53'!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	assets do: [:anAsset | transactions addAll: anAsset transactions ].
	
	^transactions.!

!methodRemoval: ReceptiveAccount #setOwnerTo: stamp: 'GR 5/25/2021 20:52:53'!
setOwnerTo: anOwner

	owner := anOwner.!
!Portfolio methodsFor: 'no messages' stamp: 'GR 5/25/2021 20:37:30'!
add: anAsset! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:58' overrides: 50861135!
transactions
	|transactions|
	transactions := OrderedCollection new.
	
	assets do: [:anAsset | transactions addAll: anAsset transactions ].
	
	^transactions.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:50' overrides: 50865492!
setOwnerTo: anOwner

	owner := anOwner .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:23:44' overrides: 16896425!
initialize

	assets := OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:24:27' overrides: 50861140!
hasRegistered: aTransaction

	^assets anySatisfy: [:anAsset | anAsset hasRegistered: aTransaction ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:03:10' overrides: 50864960!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets isSelf|
	
	isSelf := anAsset == self.
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets or: isSelf
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/24/2021 17:25:06' overrides: 50861131!
balance
	
	^assets sum: [:anAsset | anAsset balance] ifEmpty: [0].
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:44:41' prior: 50865554!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:15:31' prior: 50865608!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].

	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon ) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:31:32'!
assets

	^assets! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:37:10' prior: 50865622!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ].


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:38:00' prior: 50865643!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	"grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ]."


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:38:12' prior: 50865667!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAssetToAdd hasAsset: mySonsAssets ] ].


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:39:22'!
assets

	^self.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:40:46' prior: 50865713!
assets

	^OrderedCollection with: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:44:03' prior: 50865584 overrides: 50864960!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAsset: myAsset ].
	
	grandchildrenInCommon := assets anySatisfy: [:myAsset | myAsset assets anySatisfy: [:mySonsAssets | anAsset hasAsset: mySonsAssets ] ].


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:45:24' prior: 50865722 overrides: 50864960!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAsset: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:48:07' prior: 50865739 overrides: 50864960!
hasAssetsInCommonWith: anAsset

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:51:38' prior: 50865753 overrides: 50864960!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommon grandchildrenInCommon|
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:52:42' prior: 50865767 overrides: 50864960!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets|
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets 
	
	


! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:53:00'!
hasAssetInCommonWith: anAsset

	^self == anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:54:57' prior: 50865690!
add: anAssetToAdd 

	|assetAlreadyInPortfolio assetHasAssetsInCommon grandchildrenInCommon|
	
	assetAlreadyInPortfolio := assets anySatisfy: [:myAsset| myAsset hasAsset: anAssetToAdd ].
	
	assetHasAssetsInCommon := assets anySatisfy: [:myAsset | anAssetToAdd hasAsset: myAsset ].
	
	grandchildrenInCommon := self hasAssetsInCommonWith: anAssetToAdd .


	(assetAlreadyInPortfolio) ifTrue: [^self error: Portfolio assetAlreadyInPortfolio].
	
	(assetHasAssetsInCommon or: grandchildrenInCommon) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!ReceptiveAccount methodsFor: 'testing' stamp: 'GR 5/25/2021 19:55:13' prior: 50864951 overrides: 50864960!
hasAssetsInCommonWith: anAsset

	^self == anAsset.! !

!methodRemoval: ReceptiveAccount #hasAssetInCommonWith: stamp: 'GR 5/25/2021 20:52:55'!
hasAssetInCommonWith: anAsset

	^self == anAsset.!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:55:44' prior: 50864960!
hasAssetsInCommonWith: anAsset


	^self subclassResponsibility ! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:57:43' prior: 50865325!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetAlreadyInPortfolio.
		].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 19:59:46'!
hasAsset: anAsset

	|isSelf isChild|
	
	isSelf := anAsset == self.
	
	isChild := assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].
	
	^isSelf or: isChild.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:02:18' prior: 50865274!
test20

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:03:10' prior: 50865782 overrides: 50865835!
hasAssetsInCommonWith: anAsset

	|myAssetsHaveAssetsInCommonWithAnAsset assetHasAssetsInCommonWithMyAssets isSelf|
	
	isSelf := anAsset == self.
	
	myAssetsHaveAssetsInCommonWithAnAsset := assets anySatisfy: [:myAsset| myAsset hasAssetsInCommonWith: anAsset].
	
	assetHasAssetsInCommonWithMyAssets := assets anySatisfy: [:myAsset | anAsset hasAssetsInCommonWith: myAsset ].
	
	^myAssetsHaveAssetsInCommonWithAnAsset or: assetHasAssetsInCommonWithMyAssets or: isSelf
	
	


! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:05:34' prior: 50865803!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:05:57' prior: 50865311!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:08' prior: 50865240!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:17' prior: 50865256!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:06:33' prior: 50865841!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!methodRemoval: Portfolio #hasAsset: stamp: 'GR 5/25/2021 20:52:56'!
hasAsset: anAsset

	|isSelf isChild|
	
	isSelf := anAsset == self.
	
	isChild := assets anySatisfy: [:myAsset | myAsset hasAsset: anAsset].
	
	^isSelf or: isChild.!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:11:56' prior: 50865360!
test21

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:13:32' prior: 50865976!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommon.
		].
	
	
	! !

!methodRemoval: Portfolio #assets stamp: 'GR 5/25/2021 20:52:56'!
assets

	^assets!

!methodRemoval: ReceptiveAccount #assets stamp: 'GR 5/25/2021 20:52:56'!
assets

	^OrderedCollection with: self.!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:17:58' prior: 50865141!
ownerHasAssetsInCommonErrorDescription

	^'Owner Has Assets In Common'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:18:19' prior: 50865192!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:18:19' prior: 50865900!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:12'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:12' prior: 50866029!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommon ].
	
	assets add: anAssetToAdd.! !

!methodRemoval: Portfolio class #assetHasAssetsInCommonErrorDescription stamp: 'GR 5/25/2021 20:52:57'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:35'!
assetHasAssetsInCommonErrorDescription

	^'Asset contains assets that already belong to portfolio'! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50866043!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865208!
test17

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865994!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865921!
test15

	|portfolio1 portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	portfolio1 := Portfolio new.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865937!
test16

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio3 add: account.
	
	portfolio2 add: portfolio3.
	
	portfolio1 add: portfolio2.
	
	self 
		should: [portfolio1 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865863!
test20

	|portfolio1 portfolio2 portfolio3 portfolio4|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
	
	portfolio4 := Portfolio new.
	
	portfolio1 add: portfolio4 .
	
	portfolio2 add: portfolio4 .
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865293!
test18

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	portfolio3 := Portfolio new.
		
	account := ReceptiveAccount new.
	
	portfolio1 add: account.
	
	portfolio2 add: account.
	
	portfolio3 add: portfolio1.
	
	self 
		should: [portfolio3 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865908!
test14

	|portfolio2 account|
	
	portfolio2 := Portfolio new.
	
	account := ReceptiveAccount new.
	
	portfolio2 add: account.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:36' prior: 50865955!
test19

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1 add: portfolio2 .
	
	self 
		should: [portfolio1 add: portfolio2]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio assetHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!methodRemoval: Portfolio class #assetHasAssetsInCommon stamp: 'GR 5/25/2021 20:52:58'!
assetHasAssetsInCommon

	^'Asset contains assets that already belong to portfolio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:19:59' prior: 50866089!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:23:50' prior: 50866209!
test21

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:30:49' prior: 50866064!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:31:55' prior: 50866241!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].

	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:37' prior: 50865567 overrides: 50865492!
setOwnerTo: anOwner

	owner := self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:32:50' prior: 50866268 overrides: 50865492!
setOwnerTo: anOwner

	owner := anOwner .! !
!ReceptiveAccount methodsFor: 'nil' stamp: 'GR 5/25/2021 20:33:45' overrides: 50865492!
setOwnerTo: anOwner

	owner := anOwner.! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:34:03' prior: 50865492!
setOwnerTo: anOwner

	^self subclassResponsibility ! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:58'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:58'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:58'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:59'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:59'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 'GR 5/25/2021 20:52:59'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'owner'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:34:54' prior: 50866283!
setOwnerTo: anOwner

	owner := anOwner .! !

----SNAPSHOT----(25 May 2021 20:54:01) CuisUniversity-4532.image priorSource: 16989475!

----STARTUP---- (25 May 2021 20:54:33) as D:\Facultad\2021-1C-IS1\CuisUniversity_win64\Portfolio - Copy\windows64\CuisUniversity-4532.image!


!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:55:23'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:56:39' prior: 50865572 overrides: 16896425!
initialize

	assets := OrderedCollection new.
	
	! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:56:48' prior: 50866350 overrides: 16896425!
initialize

	assets := OrderedCollection new.
	
	owner := self.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 20:57:00'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 20:57:01'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 20:57:01'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 20:57:01'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 20:57:01'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 20:57:01'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 20:57:01'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 20:57:01'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 20:57:01'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:57:48'!
test22

	|portfolio1 portfolio2 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:57:55' prior: 50866410!
test22

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 20:59:15' prior: 50866426!
test22

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	portfolio3 add: portfolio2.
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!testRun: #PortfolioTest #test22 stamp: 'GR 5/25/2021 20:59:17'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:00:02' prior: 50866356 overrides: 16896425!
initialize

	assets := OrderedCollection new.
	
	owner := OrderedCollection new.! !

!methodRemoval: Portfolio #setOwnerTo: stamp: 'GR 5/25/2021 21:00:24'!
setOwnerTo: anOwner

	owner := anOwner .!

!methodRemoval: ReceptiveAccount #setOwnerTo: stamp: 'GR 5/25/2021 21:00:31'!
setOwnerTo: anOwner

	owner := anOwner.!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:00:59' prior: 50866335!
setOwnerTo: anOwner

	owner add: anOwner.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:03:23' prior: 50866254!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].
	
	owner do: [:anOwner | anOwner hasAssetsInCommonWith: anAssetToAdd].
	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:03:29' prior: 50866482!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	owner do: [:anOwner | anOwner hasAssetsInCommonWith: anAssetToAdd].
	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 21:03:46'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 21:03:47'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 21:03:47'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 21:03:47'!
ERROR!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 21:03:48'!
ERROR!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 21:03:48'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 21:03:48'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 21:03:48'!
ERROR!

!testRun: #PortfolioTest #test22 stamp: 'GR 5/25/2021 21:03:48'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:03:23' prior: 50866498!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].
	
	owner do: [:anOwner | anOwner hasAssetsInCommonWith: anAssetToAdd].
	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:05:13' prior: 50866560!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner anySatisfy: [:anOwner | anOwner hasAssetsInCommonWith: anAssetToAdd]) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 21:05:17'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 21:05:17'!
ERROR!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 21:05:17'!
ERROR!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 21:05:18'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 21:05:18'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 21:05:18'!
ERROR!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 21:05:18'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 21:05:19'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 21:05:19'!
ERROR!

!testRun: #PortfolioTest #test22 stamp: 'GR 5/25/2021 21:05:19'!
ERROR!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 21:05:21'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 'GR 5/25/2021 21:06:09' prior: 50859532 overrides: 16896425!
initialize

	transactions := OrderedCollection new.
	
	owner := OrderedCollection new.! !

!testRun: #PortfolioTest #test22 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 21:07:07'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'GR 5/25/2021 21:07:08'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:08:45'!
test23

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1 add: portfolio2.
	
	
	self 
		should: [portfolio2 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:09:43' prior: 50866703!
test23

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio2 add: portfolio3.
	
	portfolio1	 add: portfolio2.
	
	self 
		should: [portfolio3 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:09:55' prior: 50866721!
test23

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1	 add: portfolio2.
	
	portfolio2 add: portfolio3.
	
	
	
	self 
		should: [portfolio3 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:10:01' prior: 50866739!
test23

	|portfolio1 portfolio2 portfolio3 account|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.

	account := ReceptiveAccount new.
	
	portfolio1 add: account .
	
	portfolio1	 add: portfolio2.
	
	portfolio2 add: portfolio3.
	
	self 
		should: [portfolio3 add: account]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !

!testRun: #PortfolioTest #test23 stamp: 'GR 5/25/2021 21:10:08'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:13:11' prior: 50866576!
add: anAssetToAdd 

	(self hasAssetsInCommonWith: anAssetToAdd) ifTrue: [^self error: Portfolio assetHasAssetsInCommonErrorDescription ].
	
	(owner anySatisfy: [:anOwner | anOwner hasAssetsInCommonWith: anAssetToAdd]) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].
	
	(owner anySatisfy: [:anOwner | anOwner ownerHasAssetsInCommonWith: anAssetToAdd]) ifTrue: [^self error: Portfolio ownerHasAssetsInCommonErrorDescription ].
	
	assets add: anAssetToAdd.
	
	anAssetToAdd setOwnerTo: self.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:14:21'!
ownerHasAssetsInCommonWith: aReceptiveAccount 
	self shouldBeImplemented.! !

!methodRemoval: Portfolio #ownerHasAssetsInCommonWith: stamp: 'GR 5/25/2021 21:14:49'!
ownerHasAssetsInCommonWith: aReceptiveAccount 
	self shouldBeImplemented.!

!testRun: #PortfolioTest #test23 stamp: 'GR 5/25/2021 21:14:56'!
ERROR!

!testRun: #PortfolioTest #test23 stamp: 'GR 5/25/2021 21:15:03'!
ERROR!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:15:19'!
ownerHasAssetsInCommonWith: aPortfolio 
	self shouldBeImplemented.! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:16:23' prior: 50866813!
ownerHasAssetsInCommonWith: anAsset 
	
	^owner anySatisfy: [:anOwner | anOwner hasAssetsInCommonWith: anAsset].! !

!testRun: #PortfolioTest #test23 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 21:16:24'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'GR 5/25/2021 21:16:25'!
PASSED!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:16:59' prior: 50866819!
ownerHasAssetsInCommonWith: anAsset 
	
	^owner anySatisfy: [:anOwner | anOwner hasAssetsInCommonWith: anAsset].
	
	! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:18:10' prior: 50866882!
ownerHasAssetsInCommonWith: anAsset 
	
	^owner anySatisfy: [:anOwner | anOwner hasAssetsInCommonWith: anAsset].
	
	
	! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:22:34' prior: 50866889!
ownerHasAssetsInCommonWith: anAsset 

	
	^owner ifEmpty: [self hasAssetsInCommonWith: anAsset] ifNotEmpty: [owner anySatisfy: [:anOwner | anOwner ownerHasAssetsInCommonWith: anAsset]]
	
	
	
	! !

!testRun: #PortfolioTest #test01 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test02 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test03 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test04 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test05 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test06 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test07 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test08 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test09 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test10 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test11 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test12 stamp: 'GR 5/25/2021 21:23:15'!
PASSED!

!testRun: #PortfolioTest #test13 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test14 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test15 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test16 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test17 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test18 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test19 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test20 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test21 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test22 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!

!testRun: #PortfolioTest #test23 stamp: 'GR 5/25/2021 21:23:16'!
PASSED!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:25:09'!
test24

	|portfolio1 portfolio2 portfolio3|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio3 := Portfolio new.
	
	
	
	portfolio1	 add: portfolio2.
	
	portfolio2 add: portfolio3.
	
	self 
		should: [portfolio3 add: portfolio1]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 'GR 5/25/2021 21:25:32' prior: 50866958!
test24

	|portfolio1 portfolio2|
	
	portfolio1 := Portfolio new.
	
	portfolio2 := Portfolio new.
	
	portfolio1	 add: portfolio2.
	
	self 
		should: [portfolio2 add: portfolio1]
		
		raise: Error
		
		withExceptionDo: [:anError | 
			
			self assert: anError messageText = Portfolio ownerHasAssetsInCommonErrorDescription.
		].
	
	
	! !

----SNAPSHOT----(25 May 2021 21:25:43) CuisUniversity-4532.image priorSource: 17110027!